<?xml version="1.0" encoding="utf-8"?>
<project title="API Documentation" version="2.9.1">
  <partials/>
  <file path="Colors/HSLColor.php" generated-path="Colors.HSLColor.html" hash="aa7d2cadd7b7c487d27214254ff2252e" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="13" package="Default">
      <extends>\Chameleon\Colors\Color</extends>
      <name>HSLColor</name>
      <full_name>\Chameleon\Colors\HSLColor</full_name>
      <docblock line="13">
        <description>Color Class for HSL colors</description>
        <long-description>Represents a color based on the HSL (hue, saturation, value) system</long-description>
        <tag name="api" line="13" description=""/>
        <tag name="package" line="13" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="14" package="Default">
        <name>$hue</name>
        <full_name>\Chameleon\Colors\HSLColor::$hue</full_name>
        <default></default>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="15" package="Default">
        <name>$saturation</name>
        <full_name>\Chameleon\Colors\HSLColor::$saturation</full_name>
        <default></default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="16" package="Default">
        <name>$lightness</name>
        <full_name>\Chameleon\Colors\HSLColor::$lightness</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="18" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\HSLColor::$red</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="19" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\HSLColor::$green</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="20" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\HSLColor::$blue</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="26" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\HSLColor::__construct()</full_name>
        <docblock line="26">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;Hue value [0, 359]&lt;/p&gt;" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$lightness</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="37" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\HSLColor::fromRGBA()</full_name>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="37" description="" type="\Chameleon\Colors\RGBAColor" variable="$rgba">
            <type>\Chameleon\Colors\RGBAColor</type>
          </tag>
          <tag name="return" line="37" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="86" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\HSLColor::__toString()</full_name>
        <docblock line="86">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="96" package="Default">
        <name>getHue</name>
        <full_name>\Chameleon\Colors\HSLColor::getHue()</full_name>
        <docblock line="96">
          <description>Get hue value</description>
          <long-description>Returns the hue value of this color</long-description>
          <tag name="return" line="96" description="Hue value [0, 359]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="110" package="Default">
        <name>setHue</name>
        <full_name>\Chameleon\Colors\HSLColor::setHue()</full_name>
        <docblock line="110">
          <description>Set hue value</description>
          <long-description>Sets the hue value of this color</long-description>
          <tag name="param" line="110" description="&lt;p&gt;The hue value [0, 359]&lt;/p&gt;" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
          <tag name="return" line="110" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
          <tag name="throws" line="110" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="127" package="Default">
        <name>getSaturation</name>
        <full_name>\Chameleon\Colors\HSLColor::getSaturation()</full_name>
        <docblock line="127">
          <description>Get saturation value</description>
          <long-description>Returns the saturation value of this color</long-description>
          <tag name="return" line="127" description="saturation value [0, 1]" type="float">
            <type>float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="141" package="Default">
        <name>setSaturation</name>
        <full_name>\Chameleon\Colors\HSLColor::setSaturation()</full_name>
        <docblock line="141">
          <description>Set saturation value</description>
          <long-description>Sets the saturation value of this color</long-description>
          <tag name="param" line="141" description="&lt;p&gt;The saturation value [0, 1]&lt;/p&gt;" type="float|integer" variable="$saturation">
            <type>float</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="141" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
          <tag name="throws" line="141" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>float|integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="158" package="Default">
        <name>getLightness</name>
        <full_name>\Chameleon\Colors\HSLColor::getLightness()</full_name>
        <docblock line="158">
          <description>Get lightness</description>
          <long-description>Returns the lightness of this color</long-description>
          <tag name="return" line="158" description="lightness [0, 1]" type="float">
            <type>float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="172" package="Default">
        <name>setLightness</name>
        <full_name>\Chameleon\Colors\HSLColor::setLightness()</full_name>
        <docblock line="172">
          <description>Set lightness</description>
          <long-description>Sets the lightness of this color</long-description>
          <tag name="param" line="172" description="&lt;p&gt;The lightness [0, 1]&lt;/p&gt;" type="float|integer" variable="$lightness">
            <type>float</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="172" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
          <tag name="throws" line="172" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$lightness</name>
          <default></default>
          <type>float|integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Chameleon\Colors" line="183" package="Default">
        <name>makeRGB</name>
        <full_name>\Chameleon\Colors\HSLColor::makeRGB()</full_name>
        <docblock line="183">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Chameleon\Colors" line="201" package="Default">
        <name>hue2rgb</name>
        <full_name>\Chameleon\Colors\HSLColor::hue2rgb()</full_name>
        <docblock line="201">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$p</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$q</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$t</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="221" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\HSLColor::getRGBA()</full_name>
        <docblock line="221">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="225" package="Default">
        <name>lighten</name>
        <full_name>\Chameleon\Colors\HSLColor::lighten()</full_name>
        <docblock line="225">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="235" package="Default">
        <name>darken</name>
        <full_name>\Chameleon\Colors\HSLColor::darken()</full_name>
        <docblock line="235">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="26" code="PPC:ERR-50015">Argument $saturation is missing from the Docblock of __construct</error>
      <error line="26" code="PPC:ERR-50014">Name of argument $saturation does not match with the DocBlock's name $hue in __construct()</error>
      <error line="26" code="PPC:ERR-50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $saturation in __construct()</error>
      <error line="26" code="PPC:ERR-50015">Argument $lightness is missing from the Docblock of __construct</error>
      <error line="26" code="PPC:ERR-50014">Name of argument $lightness does not match with the DocBlock's name $hue in __construct()</error>
      <error line="26" code="PPC:ERR-50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $lightness in __construct()</error>
      <error line="37" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
      <error line="86" code="PPC:ERR-50008">No summary for method __toString()</error>
      <error line="183" code="PPC:ERR-50008">No summary for method makeRGB()</error>
      <error line="201" code="PPC:ERR-50015">Argument $p is missing from the Docblock of hue2rgb</error>
      <error line="201" code="PPC:ERR-50015">Argument $q is missing from the Docblock of hue2rgb</error>
      <error line="201" code="PPC:ERR-50015">Argument $t is missing from the Docblock of hue2rgb</error>
      <error line="201" code="PPC:ERR-50008">No summary for method hue2rgb()</error>
      <error line="221" code="PPC:ERR-50008">No summary for method getRGBA()</error>
      <error line="225" code="PPC:ERR-50015">Argument $percentage is missing from the Docblock of lighten</error>
      <error line="225" code="PPC:ERR-50008">No summary for method lighten()</error>
      <error line="235" code="PPC:ERR-50015">Argument $percentage is missing from the Docblock of darken</error>
      <error line="235" code="PPC:ERR-50008">No summary for method darken()</error>
      <error line="14" code="PPC:ERR-50007">No summary for property $hue</error>
      <error line="15" code="PPC:ERR-50007">No summary for property $saturation</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $lightness</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $red</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $green</error>
      <error line="20" code="PPC:ERR-50007">No summary for property $blue</error>
    </parse_markers>
  </file>
  <file path="Colors/RGBColor.php" generated-path="Colors.RGBColor.html" hash="fdb19a2fea0cd10fa97d2fde8b3bd1dd" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="6" package="Default">
      <extends>\Chameleon\Colors\Color</extends>
      <name>RGBColor</name>
      <full_name>\Chameleon\Colors\RGBColor</full_name>
      <docblock line="6">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="6" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="12" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\RGBColor::$red</full_name>
        <default></default>
        <docblock line="12">
          <description>The red channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="12" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="19" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\RGBColor::$green</full_name>
        <default></default>
        <docblock line="19">
          <description>The green channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="19" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="26" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\RGBColor::$blue</full_name>
        <default></default>
        <docblock line="26">
          <description>The blue channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="26" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="35" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\RGBColor::__construct()</full_name>
        <docblock line="35">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="35" description="&lt;p&gt;The red channel value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;The green channel value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;The blue channel value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="48" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\RGBColor::__toString()</full_name>
        <docblock line="48">
          <description>Get string representation of this color</description>
          <long-description>Format: rgb(red, green, blue)</long-description>
          <tag name="return" line="48" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="57" package="Default">
        <name>getRed</name>
        <full_name>\Chameleon\Colors\RGBColor::getRed()</full_name>
        <docblock line="57">
          <description>Get red channel value</description>
          <long-description></long-description>
          <tag name="return" line="57" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="69" package="Default">
        <name>setRed</name>
        <full_name>\Chameleon\Colors\RGBColor::setRed()</full_name>
        <docblock line="69">
          <description>Set the red channel value</description>
          <long-description></long-description>
          <tag name="param" line="69" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="return" line="69" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="throws" line="69" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="84" package="Default">
        <name>getGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::getGreen()</full_name>
        <docblock line="84">
          <description>Get green channel value</description>
          <long-description></long-description>
          <tag name="return" line="84" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="96" package="Default">
        <name>setGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::setGreen()</full_name>
        <docblock line="96">
          <description>Set green channel value</description>
          <long-description></long-description>
          <tag name="param" line="96" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="return" line="96" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="throws" line="96" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="111" package="Default">
        <name>getBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::getBlue()</full_name>
        <docblock line="111">
          <description>Get blue channel value</description>
          <long-description></long-description>
          <tag name="return" line="111" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="123" package="Default">
        <name>setBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::setBlue()</full_name>
        <docblock line="123">
          <description>Set blue channel value</description>
          <long-description></long-description>
          <tag name="param" line="123" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
          <tag name="return" line="123" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="throws" line="123" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="133" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\RGBColor::getRGBA()</full_name>
        <docblock line="133">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="137" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\RGBColor::fromRGBA()</full_name>
        <docblock line="137">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="141" package="Default">
        <name>lighten</name>
        <full_name>\Chameleon\Colors\RGBColor::lighten()</full_name>
        <docblock line="141">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="160" package="Default">
        <name>darken</name>
        <full_name>\Chameleon\Colors\RGBColor::darken()</full_name>
        <docblock line="160">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="6" code="PPC:ERR-50005">No summary for class \Chameleon\Colors\RGBColor</error>
      <error line="133" code="PPC:ERR-50008">No summary for method getRGBA()</error>
      <error line="137" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="137" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
      <error line="141" code="PPC:ERR-50015">Argument $percentage is missing from the Docblock of lighten</error>
      <error line="141" code="PPC:ERR-50008">No summary for method lighten()</error>
      <error line="160" code="PPC:ERR-50015">Argument $percentage is missing from the Docblock of darken</error>
      <error line="160" code="PPC:ERR-50008">No summary for method darken()</error>
    </parse_markers>
  </file>
  <file path="Filters/SelectiveBlurFilter.php" generated-path="Filters.SelectiveBlurFilter.html" hash="e12b395d523fb71738131fc6d72a06ca" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="7" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>SelectiveBlurFilter</name>
      <full_name>\Chameleon\Filters\SelectiveBlurFilter</full_name>
      <docblock line="7">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::$options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="8" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\SelectiveBlurFilter::__construct()</full_name>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="17" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\SelectiveBlurFilter::getFilterID()</full_name>
        <docblock line="17">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="17" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\SelectiveBlurFilter</error>
      <error line="8" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
  </file>
  <file path="Patterns/IPattern.php" generated-path="Patterns.IPattern.html" hash="e7b300f84928406b89ec911681ba4593" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <interface namespace="Chameleon\Patterns" line="7" package="Default">
      <name>IPattern</name>
      <full_name>\Chameleon\Patterns\IPattern</full_name>
      <docblock line="7">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="16" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\IPattern::getColorAt()</full_name>
        <docblock line="16">
          <description>Get color in this pattern at the given position</description>
          <long-description></long-description>
          <tag name="param" line="16" description="&lt;p&gt;The x coordinate&lt;/p&gt;" type="integer" variable="$x">
            <type>integer</type>
          </tag>
          <tag name="param" line="16" description="&lt;p&gt;The y coordinate&lt;/p&gt;" type="integer" variable="$y">
            <type>integer</type>
          </tag>
          <tag name="return" line="16" description="The color at this position" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50009">No summary for interface \Chameleon\Patterns\IPattern</error>
    </parse_markers>
  </file>
  <file path="Vector2.php" generated-path="Vector2.html" hash="52b1c7c2da493c1fb92e2896a33dfd5c" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Chameleon" line="8" package="Default">
      <extends/>
      <name>Vector2</name>
      <full_name>\Chameleon\Vector2</full_name>
      <docblock line="8">
        <description>The Vector2 class represents a vector in a two-dimensional cartesian coordinate system.</description>
        <long-description>It contains multiple methods to set and manipulate its coordinates.</long-description>
        <tag name="package" line="8" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon" line="9" package="Default">
        <name>$x</name>
        <full_name>\Chameleon\Vector2::$x</full_name>
        <default></default>
        <docblock line="9">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon" line="10" package="Default">
        <name>$y</name>
        <full_name>\Chameleon\Vector2::$y</full_name>
        <default></default>
        <docblock line="10">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="18" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Vector2::__construct()</full_name>
        <docblock line="18">
          <description>Vector2 constructor.</description>
          <long-description></long-description>
          <tag name="param" line="18" description="&lt;p&gt;The x coordinate&lt;/p&gt;" type="integer" variable="$x">
            <type>integer</type>
          </tag>
          <tag name="param" line="18" description="&lt;p&gt;The y coordinate&lt;/p&gt;" type="integer" variable="$y">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="28" package="Default">
        <name>getX</name>
        <full_name>\Chameleon\Vector2::getX()</full_name>
        <docblock line="28">
          <description>Get the X coordinate of the vector.</description>
          <long-description></long-description>
          <tag name="return" line="28" description="The X coordinate" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="37" package="Default">
        <name>getY</name>
        <full_name>\Chameleon\Vector2::getY()</full_name>
        <docblock line="37">
          <description>Get the Y coordinate of the vector.</description>
          <long-description></long-description>
          <tag name="return" line="37" description="The Y coordinate" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="48" package="Default">
        <name>setX</name>
        <full_name>\Chameleon\Vector2::setX()</full_name>
        <docblock line="48">
          <description>Set the vector's X coordinate.</description>
          <long-description></long-description>
          <tag name="param" line="48" description="&lt;p&gt;The x coordinate&lt;/p&gt;" type="integer" variable="$x">
            <type>integer</type>
          </tag>
          <tag name="return" line="48" description="" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="60" package="Default">
        <name>setY</name>
        <full_name>\Chameleon\Vector2::setY()</full_name>
        <docblock line="60">
          <description>Set the vector's Y coordinate.</description>
          <long-description></long-description>
          <tag name="param" line="60" description="&lt;p&gt;The y coordinate&lt;/p&gt;" type="integer" variable="$y">
            <type>integer</type>
          </tag>
          <tag name="return" line="60" description="" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="72" package="Default">
        <name>incX</name>
        <full_name>\Chameleon\Vector2::incX()</full_name>
        <docblock line="72">
          <description>Increment the vector's x coordinate by $inc.</description>
          <long-description></long-description>
          <tag name="param" line="72" description="&lt;p&gt;Defaults to 1&lt;/p&gt;" type="integer" variable="$inc">
            <type>integer</type>
          </tag>
          <tag name="return" line="72" description="" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$inc</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="84" package="Default">
        <name>incY</name>
        <full_name>\Chameleon\Vector2::incY()</full_name>
        <docblock line="84">
          <description>Increment the vector's y coordinate by $inc.</description>
          <long-description></long-description>
          <tag name="param" line="84" description="&lt;p&gt;Defaults to 1&lt;/p&gt;" type="integer" variable="$inc">
            <type>integer</type>
          </tag>
          <tag name="return" line="84" description="" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$inc</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="96" package="Default">
        <name>decX</name>
        <full_name>\Chameleon\Vector2::decX()</full_name>
        <docblock line="96">
          <description>Decrement the vector's x coordinate by $dec.</description>
          <long-description></long-description>
          <tag name="param" line="96" description="&lt;p&gt;Defaults to 1&lt;/p&gt;" type="integer" variable="$dec">
            <type>integer</type>
          </tag>
          <tag name="return" line="96" description="" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dec</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="108" package="Default">
        <name>decY</name>
        <full_name>\Chameleon\Vector2::decY()</full_name>
        <docblock line="108">
          <description>Decrement the vector's y coordinate by $dec.</description>
          <long-description></long-description>
          <tag name="param" line="108" description="&lt;p&gt;Defaults to 1&lt;/p&gt;" type="integer" variable="$dec">
            <type>integer</type>
          </tag>
          <tag name="return" line="108" description="" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dec</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="118" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Vector2::__toString()</full_name>
        <docblock line="118">
          <description>Returns a string representation of the vector</description>
          <long-description></long-description>
          <tag name="return" line="118" description="A string formatted as `(x, y)`" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="9" code="PPC:ERR-50007">No summary for property $x</error>
      <error line="10" code="PPC:ERR-50007">No summary for property $y</error>
    </parse_markers>
  </file>
  <file path="Filters/MeanRemovalFilter.php" generated-path="Filters.MeanRemovalFilter.html" hash="97a67f60d61b9a68b6f5c4db88e28715" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="8" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>MeanRemovalFilter</name>
      <full_name>\Chameleon\Filters\MeanRemovalFilter</full_name>
      <docblock line="8">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::$options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="9" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\MeanRemovalFilter::__construct()</full_name>
        <docblock line="9">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="18" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\MeanRemovalFilter::getFilterID()</full_name>
        <docblock line="18">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="18" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\MeanRemovalFilter</error>
      <error line="9" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
  </file>
  <file path="Options.php" generated-path="Options.html" hash="05276b19848013a68de4ab9aa58e2aab" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
  </file>
  <file path="Mask.php" generated-path="Mask.html" hash="204191d483f5ac23a76f1ad9f451bbd2" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
  </file>
  <file path="Colors/Hex6Color.php" generated-path="Colors.Hex6Color.html" hash="5201db17c70cfd69776a73a0be7a1a68" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="RGBColor">\Chameleon\Colors\RGBColor</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="8" package="Default">
      <extends>\Chameleon\Colors\RGBColor</extends>
      <name>Hex6Color</name>
      <full_name>\Chameleon\Colors\Hex6Color</full_name>
      <docblock line="8">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Colors\RGBColor" refers="\Chameleon\Colors\RGBColor" link="/classes/Chameleon.Colors.RGBColor.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="12" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\RGBColor::$red</full_name>
        <default></default>
        <docblock line="12">
          <description>The red channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="12" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="19" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\RGBColor::$green</full_name>
        <default></default>
        <docblock line="19">
          <description>The green channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="19" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="26" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\RGBColor::$blue</full_name>
        <default></default>
        <docblock line="26">
          <description>The blue channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="26" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="14" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\Hex6Color::__construct()</full_name>
        <docblock line="14">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="14" description="&lt;p&gt;The 6-digit hexstring, e.g. #fe0da7&lt;/p&gt;" type="string" variable="$hexstring">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\RGBColor::__construct()" refers="\Chameleon\Colors\RGBColor::__construct()" link="/classes/Chameleon.Colors.RGBColor.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hexstring</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="25" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\Hex6Color::__toString()</full_name>
        <docblock line="25">
          <description>Get string representation of this color</description>
          <long-description>Format: #rrggbb</long-description>
          <tag name="return" line="25" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\RGBColor::__toString()" refers="\Chameleon\Colors\RGBColor::__toString()" link="/classes/Chameleon.Colors.RGBColor.html#method___toString"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="35" package="Default">
        <name>getHex</name>
        <full_name>\Chameleon\Colors\Hex6Color::getHex()</full_name>
        <docblock line="35">
          <description>Get hexadecimal value for this color
Format: #rrggbb</description>
          <long-description></long-description>
          <tag name="return" line="35" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="49" package="Default">
        <name>setHex</name>
        <full_name>\Chameleon\Colors\Hex6Color::setHex()</full_name>
        <docblock line="49">
          <description>Set hexadecimal value for this color</description>
          <long-description></long-description>
          <tag name="param" line="49" description="&lt;p&gt;The hexadecimal color value, Fomat: #rrggbb&lt;/p&gt;" type="string" variable="$hexstring">
            <type>string</type>
          </tag>
          <tag name="return" line="49" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hexstring</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="56" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\Hex6Color::fromRGBA()</full_name>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\RGBColor::fromRGBA()" refers="\Chameleon\Colors\RGBColor::fromRGBA()" link="/classes/Chameleon.Colors.RGBColor.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="35" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\RGBColor::__construct()</full_name>
        <docblock line="35">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="35" description="&lt;p&gt;The red channel value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;The green channel value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;The blue channel value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="48" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\RGBColor::__toString()</full_name>
        <docblock line="48">
          <description>Get string representation of this color</description>
          <long-description>Format: rgb(red, green, blue)</long-description>
          <tag name="return" line="48" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="57" package="Default">
        <name>getRed</name>
        <full_name>\Chameleon\Colors\RGBColor::getRed()</full_name>
        <docblock line="57">
          <description>Get red channel value</description>
          <long-description></long-description>
          <tag name="return" line="57" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="69" package="Default">
        <name>setRed</name>
        <full_name>\Chameleon\Colors\RGBColor::setRed()</full_name>
        <docblock line="69">
          <description>Set the red channel value</description>
          <long-description></long-description>
          <tag name="param" line="69" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="return" line="69" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="throws" line="69" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="84" package="Default">
        <name>getGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::getGreen()</full_name>
        <docblock line="84">
          <description>Get green channel value</description>
          <long-description></long-description>
          <tag name="return" line="84" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="96" package="Default">
        <name>setGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::setGreen()</full_name>
        <docblock line="96">
          <description>Set green channel value</description>
          <long-description></long-description>
          <tag name="param" line="96" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="return" line="96" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="throws" line="96" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="111" package="Default">
        <name>getBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::getBlue()</full_name>
        <docblock line="111">
          <description>Get blue channel value</description>
          <long-description></long-description>
          <tag name="return" line="111" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="123" package="Default">
        <name>setBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::setBlue()</full_name>
        <docblock line="123">
          <description>Set blue channel value</description>
          <long-description></long-description>
          <tag name="param" line="123" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
          <tag name="return" line="123" description="" type="\Chameleon\Colors\Hex6Color">
            <type>\Chameleon\Colors\Hex6Color</type>
          </tag>
          <tag name="throws" line="123" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="133" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\RGBColor::getRGBA()</full_name>
        <docblock line="133">
          <description></description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="137" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\RGBColor::fromRGBA()</full_name>
        <docblock line="137">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="141" package="Default">
        <name>lighten</name>
        <full_name>\Chameleon\Colors\RGBColor::lighten()</full_name>
        <docblock line="141">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="160" package="Default">
        <name>darken</name>
        <full_name>\Chameleon\Colors\RGBColor::darken()</full_name>
        <docblock line="160">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Colors\Hex6Color</error>
      <error line="56" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="56" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
    </parse_markers>
  </file>
  <file path="Exceptions/ColorNotFoundException.php" generated-path="Exceptions.ColorNotFoundException.html" hash="b5815a20d101920e418c8120e6736e14" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Exception">\Exception</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Exceptions" line="6" package="Default">
      <extends>\Exception</extends>
      <name>ColorNotFoundException</name>
      <full_name>\Chameleon\Exceptions\ColorNotFoundException</full_name>
      <docblock line="6">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="6" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Exceptions" line="7" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Exceptions\ColorNotFoundException::__construct()</full_name>
        <docblock line="7">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="6" code="PPC:ERR-50005">No summary for class \Chameleon\Exceptions\ColorNotFoundException</error>
      <error line="7" code="PPC:ERR-50015">Argument $color is missing from the Docblock of __construct</error>
      <error line="7" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
  </file>
  <file path="Patterns/Pattern.php" generated-path="Patterns.Pattern.html" hash="c2a4fab866578e14b2e11d943ce34327" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="SplFixedArray">\SplFixedArray</namespace-alias>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <class final="false" abstract="true" namespace="Chameleon\Patterns" line="8" package="Default">
      <extends>\SplFixedArray</extends>
      <implements>\Chameleon\Patterns\IPattern</implements>
      <name>Pattern</name>
      <full_name>\Chameleon\Patterns\Pattern</full_name>
      <docblock line="8">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
      </docblock>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Patterns" line="9" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\Pattern::getColorAt()</full_name>
        <docblock line="9">
          <description>Get color in this pattern at the given position</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Patterns\IPattern::getColorAt()" refers="\Chameleon\Patterns\IPattern::getColorAt()" link="/classes/Chameleon.Patterns.IPattern.html#method_getColorAt"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="16" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\Pattern::__construct()</full_name>
        <docblock line="16">
          <description>Pattern constructor.</description>
          <long-description></long-description>
          <tag name="param" line="16" description="&lt;p&gt;Number of colors used in this pattern&lt;/p&gt;" type="integer" variable="$colors">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$colors</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="26" package="Default">
        <name>setColor</name>
        <full_name>\Chameleon\Patterns\Pattern::setColor()</full_name>
        <docblock line="26">
          <description>Set color at index.</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;index&lt;/p&gt;" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="param" line="26" description="&lt;p&gt;color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="37" package="Default">
        <name>getColor</name>
        <full_name>\Chameleon\Patterns\Pattern::getColor()</full_name>
        <docblock line="37">
          <description>Get color at index</description>
          <long-description></long-description>
          <tag name="param" line="37" description="&lt;p&gt;index&lt;/p&gt;" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="return" line="37" description="color" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Patterns\Pattern</error>
      <error line="9" code="PPC:ERR-50015">Argument $x is missing from the Docblock of getColorAt</error>
      <error line="9" code="PPC:ERR-50015">Argument $y is missing from the Docblock of getColorAt</error>
      <error line="9" code="PPC:ERR-50008">No summary for method getColorAt()</error>
    </parse_markers>
  </file>
  <file path="Primitives/Ellipse.php" generated-path="Primitives.Ellipse.html" hash="09ce090c7f65ce15d9713ee12a244992" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Vector2">\Chameleon\Vector2</namespace-alias>
    <namespace-alias name="Image">\Chameleon\Image</namespace-alias>
    <namespace-alias name="ColorFactory">\Chameleon\ColorFactory</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Primitives" line="14" package="Chameleon\Primitives">
      <extends>\Chameleon\Primitives\Primitive</extends>
      <name>Ellipse</name>
      <full_name>\Chameleon\Primitives\Ellipse</full_name>
      <docblock line="14">
        <description>Class Ellipse</description>
        <long-description></long-description>
        <tag name="deprecated" line="14" description=""/>
        <tag name="package" line="14" description="Chameleon\Primitives"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="15" package="Chameleon\Primitives">
        <name>$width</name>
        <full_name>\Chameleon\Primitives\Ellipse::$width</full_name>
        <default></default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="16" package="Chameleon\Primitives">
        <name>$height</name>
        <full_name>\Chameleon\Primitives\Ellipse::$height</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="25" package="Chameleon\Primitives">
        <name>__construct</name>
        <full_name>\Chameleon\Primitives\Ellipse::__construct()</full_name>
        <docblock line="25">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="25" description="&lt;p&gt;Center point&lt;/p&gt;" type="\Chameleon\Vector2" variable="$point">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="param" line="25" description="&lt;p&gt;width in px&lt;/p&gt;" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="param" line="25" description="&lt;p&gt;height in px&lt;/p&gt;" type="integer" variable="$height">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$point</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$height</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="40" package="Chameleon\Primitives">
        <name>getWidth</name>
        <full_name>\Chameleon\Primitives\Ellipse::getWidth()</full_name>
        <docblock line="40">
          <description>Get width in px</description>
          <long-description></long-description>
          <tag name="return" line="40" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="50" package="Chameleon\Primitives">
        <name>setWidth</name>
        <full_name>\Chameleon\Primitives\Ellipse::setWidth()</full_name>
        <docblock line="50">
          <description>Set width in px</description>
          <long-description></long-description>
          <tag name="param" line="50" description="" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="return" line="50" description="" type="\Chameleon\Primitives\Ellipse">
            <type>\Chameleon\Primitives\Ellipse</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="60" package="Chameleon\Primitives">
        <name>getHeight</name>
        <full_name>\Chameleon\Primitives\Ellipse::getHeight()</full_name>
        <docblock line="60">
          <description>Get height in px</description>
          <long-description></long-description>
          <tag name="return" line="60" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="70" package="Chameleon\Primitives">
        <name>setHeight</name>
        <full_name>\Chameleon\Primitives\Ellipse::setHeight()</full_name>
        <docblock line="70">
          <description>Set height in px</description>
          <long-description></long-description>
          <tag name="param" line="70" description="" type="integer" variable="$height">
            <type>integer</type>
          </tag>
          <tag name="return" line="70" description="" type="\Chameleon\Primitives\Ellipse">
            <type>\Chameleon\Primitives\Ellipse</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$height</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="84" package="Chameleon\Primitives">
        <name>draw</name>
        <full_name>\Chameleon\Primitives\Ellipse::draw()</full_name>
        <docblock line="84">
          <description>Draw the ellipse onto the image resource</description>
          <long-description>Draws the ellipse with border and background (if set).
By default, an ellipse has a 1px black border and no background</long-description>
          <tag name="param" line="84" description="" type="\Chameleon\Image" variable="$image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="return" line="84" description="" type="\Chameleon\Primitives\Ellipse">
            <type>\Chameleon\Primitives\Ellipse</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="15" code="PPC:ERR-50007">No summary for property $width</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $height</error>
    </parse_markers>
  </file>
  <file path="Colors/Hex8Color.php" generated-path="Colors.Hex8Color.html" hash="fd7c8ece1979964ce8a6d437602ef9cd" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="Hex6Color">\Chameleon\Colors\Hex6Color</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="8" package="Default">
      <extends>\Chameleon\Colors\Hex6Color</extends>
      <name>Hex8Color</name>
      <full_name>\Chameleon\Colors\Hex8Color</full_name>
      <docblock line="8">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color" refers="\Chameleon\Colors\Hex6Color" link="/classes/Chameleon.Colors.Hex6Color.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="14" package="Default">
        <name>$alpha</name>
        <full_name>\Chameleon\Colors\Hex8Color::$alpha</full_name>
        <default></default>
        <docblock line="14">
          <description>The alpha channel value [0, 127]</description>
          <long-description></long-description>
          <tag name="var" line="14" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="12" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\RGBColor::$red</full_name>
        <default></default>
        <docblock line="12">
          <description>The red channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="12" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="19" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\RGBColor::$green</full_name>
        <default></default>
        <docblock line="19">
          <description>The green channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="19" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="26" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\RGBColor::$blue</full_name>
        <default></default>
        <docblock line="26">
          <description>The blue channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="26" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="21" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\Hex8Color::__construct()</full_name>
        <docblock line="21">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="21" description="&lt;p&gt;The 8-digit hexstring, e.g. #fe0da722&lt;/p&gt;" type="string" variable="$hexstring">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color::__construct()" refers="\Chameleon\Colors\Hex6Color::__construct()" link="/classes/Chameleon.Colors.Hex6Color.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hexstring</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="25" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\Hex8Color::fromRGBA()</full_name>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color::fromRGBA()" refers="\Chameleon\Colors\Hex6Color::fromRGBA()" link="/classes/Chameleon.Colors.Hex6Color.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="41" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\Hex8Color::__toString()</full_name>
        <docblock line="41">
          <description>Get string representation of this color</description>
          <long-description>Format: #rrggbbaa</long-description>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color::__toString()" refers="\Chameleon\Colors\Hex6Color::__toString()" link="/classes/Chameleon.Colors.Hex6Color.html#method___toString"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="51" package="Default">
        <name>getHex</name>
        <full_name>\Chameleon\Colors\Hex8Color::getHex()</full_name>
        <docblock line="51">
          <description>Get hexadecimal value for this color
Format: #rrggbbaa</description>
          <long-description></long-description>
          <tag name="return" line="51" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color::getHex()" refers="\Chameleon\Colors\Hex6Color::getHex()" link="/classes/Chameleon.Colors.Hex6Color.html#method_getHex"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="63" package="Default">
        <name>setHex</name>
        <full_name>\Chameleon\Colors\Hex8Color::setHex()</full_name>
        <docblock line="63">
          <description>Set hexadecimal value for this color</description>
          <long-description></long-description>
          <tag name="param" line="63" description="&lt;p&gt;The hexadecimal color value, Fomat: #rrggbb&lt;/p&gt;" type="string" variable="$hexstring">
            <type>string</type>
          </tag>
          <tag name="return" line="63" description="" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color::setHex()" refers="\Chameleon\Colors\Hex6Color::setHex()" link="/classes/Chameleon.Colors.Hex6Color.html#method_setHex"/>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hexstring</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="77" package="Default">
        <name>getAlpha</name>
        <full_name>\Chameleon\Colors\Hex8Color::getAlpha()</full_name>
        <docblock line="77">
          <description>Get RGB alpha channel value</description>
          <long-description></long-description>
          <tag name="return" line="77" description="RGB alpha channel avalue [0, 127]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="86" package="Default">
        <name>setAlpha</name>
        <full_name>\Chameleon\Colors\Hex8Color::setAlpha()</full_name>
        <docblock line="86">
          <description>Set RGB alpha channel value</description>
          <long-description></long-description>
          <tag name="param" line="86" description="&lt;p&gt;RGB alpha channel avalue [0x00, 0x7F]&lt;/p&gt;" type="integer" variable="$alpha">
            <type>integer</type>
          </tag>
          <tag name="return" line="86" description="" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="96" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\Hex8Color::getRGBA()</full_name>
        <docblock line="96">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="35" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\RGBColor::__construct()</full_name>
        <docblock line="35">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="35" description="&lt;p&gt;The red channel value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;The green channel value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;The blue channel value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="48" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\RGBColor::__toString()</full_name>
        <docblock line="48">
          <description>Get string representation of this color</description>
          <long-description>Format: rgb(red, green, blue)</long-description>
          <tag name="return" line="48" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="35" package="Default">
        <name>getHex</name>
        <full_name>\Chameleon\Colors\Hex6Color::getHex()</full_name>
        <docblock line="35">
          <description>Get hexadecimal value for this color
Format: #rrggbb</description>
          <long-description></long-description>
          <tag name="return" line="35" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\Hex6Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="49" package="Default">
        <name>setHex</name>
        <full_name>\Chameleon\Colors\Hex6Color::setHex()</full_name>
        <docblock line="49">
          <description>Set hexadecimal value for this color</description>
          <long-description></long-description>
          <tag name="param" line="49" description="&lt;p&gt;The hexadecimal color value, Fomat: #rrggbb&lt;/p&gt;" type="string" variable="$hexstring">
            <type>string</type>
          </tag>
          <tag name="return" line="49" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hexstring</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Chameleon\Colors\Hex6Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="137" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\RGBColor::fromRGBA()</full_name>
        <docblock line="137">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="57" package="Default">
        <name>getRed</name>
        <full_name>\Chameleon\Colors\RGBColor::getRed()</full_name>
        <docblock line="57">
          <description>Get red channel value</description>
          <long-description></long-description>
          <tag name="return" line="57" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="69" package="Default">
        <name>setRed</name>
        <full_name>\Chameleon\Colors\RGBColor::setRed()</full_name>
        <docblock line="69">
          <description>Set the red channel value</description>
          <long-description></long-description>
          <tag name="param" line="69" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="return" line="69" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="throws" line="69" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="84" package="Default">
        <name>getGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::getGreen()</full_name>
        <docblock line="84">
          <description>Get green channel value</description>
          <long-description></long-description>
          <tag name="return" line="84" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="96" package="Default">
        <name>setGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::setGreen()</full_name>
        <docblock line="96">
          <description>Set green channel value</description>
          <long-description></long-description>
          <tag name="param" line="96" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="return" line="96" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="throws" line="96" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="111" package="Default">
        <name>getBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::getBlue()</full_name>
        <docblock line="111">
          <description>Get blue channel value</description>
          <long-description></long-description>
          <tag name="return" line="111" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="123" package="Default">
        <name>setBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::setBlue()</full_name>
        <docblock line="123">
          <description>Set blue channel value</description>
          <long-description></long-description>
          <tag name="param" line="123" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
          <tag name="return" line="123" description="" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
          <tag name="throws" line="123" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="133" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\RGBColor::getRGBA()</full_name>
        <docblock line="133">
          <description></description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="141" package="Default">
        <name>lighten</name>
        <full_name>\Chameleon\Colors\RGBColor::lighten()</full_name>
        <docblock line="141">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="160" package="Default">
        <name>darken</name>
        <full_name>\Chameleon\Colors\RGBColor::darken()</full_name>
        <docblock line="160">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Colors\Hex8Color</error>
      <error line="25" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="25" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
      <error line="96" code="PPC:ERR-50008">No summary for method getRGBA()</error>
    </parse_markers>
  </file>
  <file path="Colors/RGBAColor.php" generated-path="Colors.RGBAColor.html" hash="adfcd6eeb39acb487eca530263ff52de" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="RGBColor">\Chameleon\Colors\RGBColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="7" package="Default">
      <extends>\Chameleon\Colors\RGBColor</extends>
      <name>RGBAColor</name>
      <full_name>\Chameleon\Colors\RGBAColor</full_name>
      <docblock line="7">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Colors\RGBColor" refers="\Chameleon\Colors\RGBColor" link="/classes/Chameleon.Colors.RGBColor.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="13" package="Default">
        <name>$alpha</name>
        <full_name>\Chameleon\Colors\RGBAColor::$alpha</full_name>
        <default></default>
        <docblock line="13">
          <description>The alpha channel value [0, 127]</description>
          <long-description></long-description>
          <tag name="var" line="13" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="12" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\RGBColor::$red</full_name>
        <default></default>
        <docblock line="12">
          <description>The red channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="12" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="19" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\RGBColor::$green</full_name>
        <default></default>
        <docblock line="19">
          <description>The green channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="19" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="26" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\RGBColor::$blue</full_name>
        <default></default>
        <docblock line="26">
          <description>The blue channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="26" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="23" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\RGBAColor::__construct()</full_name>
        <docblock line="23">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="23" description="&lt;p&gt;RGB red channel value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="param" line="23" description="&lt;p&gt;RGB green channel value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="param" line="23" description="&lt;p&gt;RGB blue channel value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
          <tag name="param" line="23" description="&lt;p&gt;RGB alpha channel value [0, 127]&lt;/p&gt;" type="integer" variable="$alpha">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\RGBColor::__construct()" refers="\Chameleon\Colors\RGBColor::__construct()" link="/classes/Chameleon.Colors.RGBColor.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="37" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\RGBAColor::__toString()</full_name>
        <docblock line="37">
          <description>Get string representation of this color</description>
          <long-description>Format: rgba(red, green, blue, alpha)</long-description>
          <tag name="return" line="37" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\RGBColor::__toString()" refers="\Chameleon\Colors\RGBColor::__toString()" link="/classes/Chameleon.Colors.RGBColor.html#method___toString"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="46" package="Default">
        <name>getAlpha</name>
        <full_name>\Chameleon\Colors\RGBAColor::getAlpha()</full_name>
        <docblock line="46">
          <description>Get RGB alpha channel value</description>
          <long-description></long-description>
          <tag name="return" line="46" description="RGB alpha channel avalue [0, 127]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="56" package="Default">
        <name>setAlpha</name>
        <full_name>\Chameleon\Colors\RGBAColor::setAlpha()</full_name>
        <docblock line="56">
          <description>Set RGB alpha channel value</description>
          <long-description></long-description>
          <tag name="param" line="56" description="&lt;p&gt;RGB alpha channel avalue [0, 127]&lt;/p&gt;" type="integer" variable="$alpha">
            <type>integer</type>
          </tag>
          <tag name="return" line="56" description="" type="\Chameleon\Colors\RGBAColor">
            <type>\Chameleon\Colors\RGBAColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="66" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\RGBAColor::getRGBA()</full_name>
        <docblock line="66">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\RGBColor::getRGBA()" refers="\Chameleon\Colors\RGBColor::getRGBA()" link="/classes/Chameleon.Colors.RGBColor.html#method_getRGBA"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="70" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\RGBAColor::fromRGBA()</full_name>
        <docblock line="70">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\RGBColor::fromRGBA()" refers="\Chameleon\Colors\RGBColor::fromRGBA()" link="/classes/Chameleon.Colors.RGBColor.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="35" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\RGBColor::__construct()</full_name>
        <docblock line="35">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="35" description="&lt;p&gt;The red channel value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;The green channel value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;The blue channel value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="48" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\RGBColor::__toString()</full_name>
        <docblock line="48">
          <description>Get string representation of this color</description>
          <long-description>Format: rgb(red, green, blue)</long-description>
          <tag name="return" line="48" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="57" package="Default">
        <name>getRed</name>
        <full_name>\Chameleon\Colors\RGBColor::getRed()</full_name>
        <docblock line="57">
          <description>Get red channel value</description>
          <long-description></long-description>
          <tag name="return" line="57" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="69" package="Default">
        <name>setRed</name>
        <full_name>\Chameleon\Colors\RGBColor::setRed()</full_name>
        <docblock line="69">
          <description>Set the red channel value</description>
          <long-description></long-description>
          <tag name="param" line="69" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="return" line="69" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="throws" line="69" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="84" package="Default">
        <name>getGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::getGreen()</full_name>
        <docblock line="84">
          <description>Get green channel value</description>
          <long-description></long-description>
          <tag name="return" line="84" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="96" package="Default">
        <name>setGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::setGreen()</full_name>
        <docblock line="96">
          <description>Set green channel value</description>
          <long-description></long-description>
          <tag name="param" line="96" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="return" line="96" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="throws" line="96" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="111" package="Default">
        <name>getBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::getBlue()</full_name>
        <docblock line="111">
          <description>Get blue channel value</description>
          <long-description></long-description>
          <tag name="return" line="111" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="123" package="Default">
        <name>setBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::setBlue()</full_name>
        <docblock line="123">
          <description>Set blue channel value</description>
          <long-description></long-description>
          <tag name="param" line="123" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
          <tag name="return" line="123" description="" type="\Chameleon\Colors\RGBAColor">
            <type>\Chameleon\Colors\RGBAColor</type>
          </tag>
          <tag name="throws" line="123" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="133" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\RGBColor::getRGBA()</full_name>
        <docblock line="133">
          <description></description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="137" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\RGBColor::fromRGBA()</full_name>
        <docblock line="137">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="141" package="Default">
        <name>lighten</name>
        <full_name>\Chameleon\Colors\RGBColor::lighten()</full_name>
        <docblock line="141">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="160" package="Default">
        <name>darken</name>
        <full_name>\Chameleon\Colors\RGBColor::darken()</full_name>
        <docblock line="160">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Colors\RGBAColor</error>
      <error line="66" code="PPC:ERR-50008">No summary for method getRGBA()</error>
      <error line="70" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="70" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
    </parse_markers>
  </file>
  <file path="Patterns/BackgroundColor.php" generated-path="Patterns.BackgroundColor.html" hash="dd427aa2046659f747e41cb8338fa4e9" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Patterns" line="10" package="Default">
      <extends>\Chameleon\Patterns\Pattern</extends>
      <name>BackgroundColor</name>
      <full_name>\Chameleon\Patterns\BackgroundColor</full_name>
      <docblock line="10">
        <description>BackgroundColor represents a plain unicolor background, equivalent to background-color in CSS</description>
        <long-description></long-description>
        <tag name="package" line="10" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Patterns\Pattern" refers="\Chameleon\Patterns\Pattern" link="/classes/Chameleon.Patterns.Pattern.html"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="11" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\BackgroundColor::__construct()</full_name>
        <docblock line="11">
          <description>Pattern constructor.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Patterns\Pattern::__construct()" refers="\Chameleon\Patterns\Pattern::__construct()" link="/classes/Chameleon.Patterns.Pattern.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="16" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\BackgroundColor::getColorAt()</full_name>
        <docblock line="16">
          <description>Get color in this pattern at the given position</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Patterns\Pattern::getColorAt()" refers="\Chameleon\Patterns\Pattern::getColorAt()" link="/classes/Chameleon.Patterns.Pattern.html#method_getColorAt"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Patterns" line="9" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\Pattern::getColorAt()</full_name>
        <docblock line="9">
          <description>Get color in this pattern at the given position</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Patterns\IPattern::getColorAt()" refers="\Chameleon\Patterns\IPattern::getColorAt()" link="/classes/Chameleon.Patterns.IPattern.html#method_getColorAt"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="16" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\Pattern::__construct()</full_name>
        <docblock line="16">
          <description>Pattern constructor.</description>
          <long-description></long-description>
          <tag name="param" line="16" description="&lt;p&gt;Number of colors used in this pattern&lt;/p&gt;" type="integer" variable="$colors">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$colors</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="26" package="Default">
        <name>setColor</name>
        <full_name>\Chameleon\Patterns\Pattern::setColor()</full_name>
        <docblock line="26">
          <description>Set color at index.</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;index&lt;/p&gt;" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="param" line="26" description="&lt;p&gt;color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="37" package="Default">
        <name>getColor</name>
        <full_name>\Chameleon\Patterns\Pattern::getColor()</full_name>
        <docblock line="37">
          <description>Get color at index</description>
          <long-description></long-description>
          <tag name="param" line="37" description="&lt;p&gt;index&lt;/p&gt;" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="return" line="37" description="color" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="11" code="PPC:ERR-50015">Argument $color is missing from the Docblock of __construct</error>
      <error line="11" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="16" code="PPC:ERR-50015">Argument $x is missing from the Docblock of getColorAt</error>
      <error line="16" code="PPC:ERR-50015">Argument $y is missing from the Docblock of getColorAt</error>
      <error line="16" code="PPC:ERR-50008">No summary for method getColorAt()</error>
    </parse_markers>
  </file>
  <file path="Colors/IColor.php" generated-path="Colors.IColor.html" hash="59bcfd3d9b58540a0f4d17f14ab7771e" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <interface namespace="Chameleon\Colors" line="6" package="Default">
      <name>IColor</name>
      <full_name>\Chameleon\Colors\IColor</full_name>
      <docblock line="6">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="6" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="12" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\IColor::fromRGBA()</full_name>
        <docblock line="12">
          <description>Construct from an RGBAColor</description>
          <long-description></long-description>
          <tag name="return" line="12" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="19" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\IColor::getRGBA()</full_name>
        <docblock line="19">
          <description>Get the RGBA representation of the color</description>
          <long-description></long-description>
          <tag name="return" line="19" description="" type="\Chameleon\Colors\RGBAColor">
            <type>\Chameleon\Colors\RGBAColor</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="26" package="Default">
        <name>isTransparent</name>
        <full_name>\Chameleon\Colors\IColor::isTransparent()</full_name>
        <docblock line="26">
          <description>Find out if the color is transparent</description>
          <long-description></long-description>
          <tag name="return" line="26" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="34" package="Default">
        <name>lighten</name>
        <full_name>\Chameleon\Colors\IColor::lighten()</full_name>
        <docblock line="34">
          <description>Make the color lighter</description>
          <long-description></long-description>
          <tag name="param" line="34" description="" type="float" variable="$percentage">
            <type>float</type>
          </tag>
          <tag name="return" line="34" description="" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="42" package="Default">
        <name>darken</name>
        <full_name>\Chameleon\Colors\IColor::darken()</full_name>
        <docblock line="42">
          <description>Make the color darker</description>
          <long-description></long-description>
          <tag name="param" line="42" description="" type="float" variable="$percentage">
            <type>float</type>
          </tag>
          <tag name="return" line="42" description="" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="49" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\IColor::__toString()</full_name>
        <docblock line="49">
          <description>Return a string representation of the color.</description>
          <long-description></long-description>
          <tag name="return" line="49" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="6" code="PPC:ERR-50009">No summary for interface \Chameleon\Colors\IColor</error>
      <error line="12" code="PPC:ERR-50015">Argument $color is missing from the Docblock of fromRGBA</error>
    </parse_markers>
  </file>
  <file path="Colors/HSVColor.php" generated-path="Colors.HSVColor.html" hash="ae9eee9b75aa59fc9c4e41b19b590998" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="13" package="Default">
      <extends>\Chameleon\Colors\Color</extends>
      <name>HSVColor</name>
      <full_name>\Chameleon\Colors\HSVColor</full_name>
      <docblock line="13">
        <description>Color Class for HSV colors</description>
        <long-description>Represents a color based on the HSV (hue, saturation, value) system</long-description>
        <tag name="api" line="13" description=""/>
        <tag name="package" line="13" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="14" package="Default">
        <name>$hue</name>
        <full_name>\Chameleon\Colors\HSVColor::$hue</full_name>
        <default></default>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="15" package="Default">
        <name>$saturation</name>
        <full_name>\Chameleon\Colors\HSVColor::$saturation</full_name>
        <default></default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="16" package="Default">
        <name>$value</name>
        <full_name>\Chameleon\Colors\HSVColor::$value</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="18" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\HSVColor::$red</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="19" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\HSVColor::$green</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="20" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\HSVColor::$blue</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="29" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\HSVColor::__construct()</full_name>
        <docblock line="29">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="29" description="&lt;p&gt;Hue value [0, 359]&lt;/p&gt;" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
          <tag name="param" line="29" description="&lt;p&gt;Saturation [0, 1]&lt;/p&gt;" type="float" variable="$saturation">
            <type>float</type>
          </tag>
          <tag name="param" line="29" description="&lt;p&gt;Value [0, 1]&lt;/p&gt;" type="float" variable="$value">
            <type>float</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="35" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\HSVColor::fromRGBA()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="81" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\HSVColor::__toString()</full_name>
        <docblock line="81">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="91" package="Default">
        <name>getHue</name>
        <full_name>\Chameleon\Colors\HSVColor::getHue()</full_name>
        <docblock line="91">
          <description>Get hue value</description>
          <long-description>Returns the hue value of this color</long-description>
          <tag name="return" line="91" description="Hue value [0, 359]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="105" package="Default">
        <name>setHue</name>
        <full_name>\Chameleon\Colors\HSVColor::setHue()</full_name>
        <docblock line="105">
          <description>Set hue value</description>
          <long-description>Sets the hue value of this color</long-description>
          <tag name="param" line="105" description="&lt;p&gt;The hue value [0, 359]&lt;/p&gt;" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
          <tag name="return" line="105" description="" type="\Chameleon\Colors\HSVColor">
            <type>\Chameleon\Colors\HSVColor</type>
          </tag>
          <tag name="throws" line="105" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="122" package="Default">
        <name>getSaturation</name>
        <full_name>\Chameleon\Colors\HSVColor::getSaturation()</full_name>
        <docblock line="122">
          <description>Get saturation value</description>
          <long-description>Returns the saturation value of this color</long-description>
          <tag name="return" line="122" description="saturation value [0, 1]" type="float">
            <type>float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="136" package="Default">
        <name>setSaturation</name>
        <full_name>\Chameleon\Colors\HSVColor::setSaturation()</full_name>
        <docblock line="136">
          <description>Set saturation value</description>
          <long-description>Sets the saturation value of this color</long-description>
          <tag name="param" line="136" description="&lt;p&gt;The saturation value [0, 1]&lt;/p&gt;" type="float|integer" variable="$saturation">
            <type>float</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="136" description="" type="\Chameleon\Colors\HSVColor">
            <type>\Chameleon\Colors\HSVColor</type>
          </tag>
          <tag name="throws" line="136" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>float|integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="153" package="Default">
        <name>getValue</name>
        <full_name>\Chameleon\Colors\HSVColor::getValue()</full_name>
        <docblock line="153">
          <description>Get value</description>
          <long-description>Returns the value of this color</long-description>
          <tag name="return" line="153" description="value [0, 1]" type="float">
            <type>float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="167" package="Default">
        <name>setValue</name>
        <full_name>\Chameleon\Colors\HSVColor::setValue()</full_name>
        <docblock line="167">
          <description>Set value</description>
          <long-description>Sets the value of this color</long-description>
          <tag name="param" line="167" description="&lt;p&gt;The value [0, 1]&lt;/p&gt;" type="float|integer" variable="$value">
            <type>float</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="167" description="" type="\Chameleon\Colors\HSVColor">
            <type>\Chameleon\Colors\HSVColor</type>
          </tag>
          <tag name="throws" line="167" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>float|integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="230" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\HSVColor::getRGBA()</full_name>
        <docblock line="230">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="234" package="Default">
        <name>lighten</name>
        <full_name>\Chameleon\Colors\HSVColor::lighten()</full_name>
        <docblock line="234">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="244" package="Default">
        <name>darken</name>
        <full_name>\Chameleon\Colors\HSVColor::darken()</full_name>
        <docblock line="244">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="35" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="35" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
      <error line="81" code="PPC:ERR-50008">No summary for method __toString()</error>
      <error line="230" code="PPC:ERR-50008">No summary for method getRGBA()</error>
      <error line="234" code="PPC:ERR-50015">Argument $percentage is missing from the Docblock of lighten</error>
      <error line="234" code="PPC:ERR-50008">No summary for method lighten()</error>
      <error line="244" code="PPC:ERR-50015">Argument $percentage is missing from the Docblock of darken</error>
      <error line="244" code="PPC:ERR-50008">No summary for method darken()</error>
      <error line="14" code="PPC:ERR-50007">No summary for property $hue</error>
      <error line="15" code="PPC:ERR-50007">No summary for property $saturation</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $value</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $red</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $green</error>
      <error line="20" code="PPC:ERR-50007">No summary for property $blue</error>
    </parse_markers>
  </file>
  <file path="Filters/BrightnessFilter.php" generated-path="Filters.BrightnessFilter.html" hash="f7cf904a557f69d3592d5f53f470f04d" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="8" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>BrightnessFilter</name>
      <full_name>\Chameleon\Filters\BrightnessFilter</full_name>
      <docblock line="8">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::$options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="16" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BrightnessFilter::__construct()</full_name>
        <docblock line="16">
          <description>BrightnessFilter constructor.</description>
          <long-description></long-description>
          <tag name="param" line="16" description="&lt;p&gt;[-1, 1]&lt;/p&gt;" type="float" variable="$brightness">
            <type>float</type>
          </tag>
          <tag name="throws" line="16" description="If $brightness not e[-1, 1]" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$brightness</name>
          <default>0</default>
          <type>float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="26" package="Default">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BrightnessFilter::getArg1()</full_name>
        <docblock line="26">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getArg1()" refers="\Chameleon\Filters\BuiltinFilter::getArg1()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getArg1"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="35" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BrightnessFilter::getFilterID()</full_name>
        <docblock line="35">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="35" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\BrightnessFilter</error>
      <error line="26" code="PPC:ERR-50008">No summary for method getArg1()</error>
    </parse_markers>
  </file>
  <file path="Primitives/Line.php" generated-path="Primitives.Line.html" hash="9a996dfd573535ff70eff968c282753e" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Image">\Chameleon\Image</namespace-alias>
    <namespace-alias name="Vector2">\Chameleon\Vector2</namespace-alias>
    <namespace-alias name="ColorFactory">\Chameleon\ColorFactory</namespace-alias>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Primitives" line="9" package="Default">
      <extends/>
      <implements>\Chameleon\Primitives\IPrimitive</implements>
      <name>Line</name>
      <full_name>\Chameleon\Primitives\Line</full_name>
      <docblock line="9">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="9" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="10" package="Default">
        <name>$start</name>
        <full_name>\Chameleon\Primitives\Line::$start</full_name>
        <default></default>
        <docblock line="10">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="11" package="Default">
        <name>$end</name>
        <full_name>\Chameleon\Primitives\Line::$end</full_name>
        <default></default>
        <docblock line="11">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="12" package="Default">
        <name>$color</name>
        <full_name>\Chameleon\Primitives\Line::$color</full_name>
        <default></default>
        <docblock line="12">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="13" package="Default">
        <name>$thickness</name>
        <full_name>\Chameleon\Primitives\Line::$thickness</full_name>
        <default></default>
        <docblock line="13">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="21" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Primitives\Line::__construct()</full_name>
        <docblock line="21">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="21" description="&lt;p&gt;Start vector&lt;/p&gt;" type="\Chameleon\Vector2" variable="$start">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="param" line="21" description="&lt;p&gt;End vector&lt;/p&gt;" type="\Chameleon\Vector2" variable="$end">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$start</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$end</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="34" package="Default">
        <name>getStart</name>
        <full_name>\Chameleon\Primitives\Line::getStart()</full_name>
        <docblock line="34">
          <description>Get start vector</description>
          <long-description></long-description>
          <tag name="return" line="34" description="the start vector" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="44" package="Default">
        <name>setStart</name>
        <full_name>\Chameleon\Primitives\Line::setStart()</full_name>
        <docblock line="44">
          <description>Set start vector</description>
          <long-description></long-description>
          <tag name="param" line="44" description="&lt;p&gt;The start vector&lt;/p&gt;" type="\Chameleon\Vector2" variable="$start">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="return" line="44" description="" type="\Chameleon\Primitives\Line">
            <type>\Chameleon\Primitives\Line</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$start</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="55" package="Default">
        <name>getEnd</name>
        <full_name>\Chameleon\Primitives\Line::getEnd()</full_name>
        <docblock line="55">
          <description>Get end vector</description>
          <long-description></long-description>
          <tag name="return" line="55" description="The end vector" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="65" package="Default">
        <name>setEnd</name>
        <full_name>\Chameleon\Primitives\Line::setEnd()</full_name>
        <docblock line="65">
          <description>Set end vector</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;The end vector&lt;/p&gt;" type="\Chameleon\Vector2" variable="$end">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="return" line="65" description="" type="\Chameleon\Primitives\Line">
            <type>\Chameleon\Primitives\Line</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$end</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="76" package="Default">
        <name>getThickness</name>
        <full_name>\Chameleon\Primitives\Line::getThickness()</full_name>
        <docblock line="76">
          <description>Get line thickness in px</description>
          <long-description></long-description>
          <tag name="return" line="76" description="thickness in px" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="86" package="Default">
        <name>setThickness</name>
        <full_name>\Chameleon\Primitives\Line::setThickness()</full_name>
        <docblock line="86">
          <description>Set line thickness</description>
          <long-description></long-description>
          <tag name="param" line="86" description="&lt;p&gt;Thickness in px&lt;/p&gt;" type="integer" variable="$thickness">
            <type>integer</type>
          </tag>
          <tag name="return" line="86" description="" type="\Chameleon\Primitives\Line">
            <type>\Chameleon\Primitives\Line</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$thickness</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="97" package="Default">
        <name>getColor</name>
        <full_name>\Chameleon\Primitives\Line::getColor()</full_name>
        <docblock line="97">
          <description>Get line color</description>
          <long-description></long-description>
          <tag name="return" line="97" description="the color" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="107" package="Default">
        <name>setColor</name>
        <full_name>\Chameleon\Primitives\Line::setColor()</full_name>
        <docblock line="107">
          <description>Set line color</description>
          <long-description></long-description>
          <tag name="param" line="107" description="&lt;p&gt;The color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="return" line="107" description="" type="\Chameleon\Primitives\Line">
            <type>\Chameleon\Primitives\Line</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="118" package="Default">
        <name>getPosition</name>
        <full_name>\Chameleon\Primitives\Line::getPosition()</full_name>
        <docblock line="118">
          <description>Get position of the line (alias for Line::getStart)</description>
          <long-description></long-description>
          <tag name="return" line="118" description="" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Primitives\IPrimitive::getPosition()" refers="\Chameleon\Primitives\IPrimitive::getPosition()" link="/classes/Chameleon.Primitives.IPrimitive.html#method_getPosition"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="130" package="Default">
        <name>setPosition</name>
        <full_name>\Chameleon\Primitives\Line::setPosition()</full_name>
        <docblock line="130">
          <description>Set position of the line</description>
          <long-description>Moves the line to a new position, changing both the start and end vectors</long-description>
          <tag name="param" line="130" description="&lt;p&gt;The new position of the start vector&lt;/p&gt;" type="\Chameleon\Vector2" variable="$position">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="return" line="130" description="" type="\Chameleon\Primitives\Line">
            <type>\Chameleon\Primitives\Line</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Primitives\IPrimitive::setPosition()" refers="\Chameleon\Primitives\IPrimitive::setPosition()" link="/classes/Chameleon.Primitives.IPrimitive.html#method_setPosition"/>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$position</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="147" package="Default">
        <name>draw</name>
        <full_name>\Chameleon\Primitives\Line::draw()</full_name>
        <docblock line="147">
          <description>Draw the line onto the specified image</description>
          <long-description></long-description>
          <tag name="param" line="147" description="&lt;p&gt;The image&lt;/p&gt;" type="\Chameleon\Image" variable="$image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="return" line="147" description="" type="\Chameleon\Primitives\Line">
            <type>\Chameleon\Primitives\Line</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Primitives\IPrimitive::draw()" refers="\Chameleon\Primitives\IPrimitive::draw()" link="/classes/Chameleon.Primitives.IPrimitive.html#method_draw"/>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="9" code="PPC:ERR-50005">No summary for class \Chameleon\Primitives\Line</error>
      <error line="10" code="PPC:ERR-50007">No summary for property $start</error>
      <error line="11" code="PPC:ERR-50007">No summary for property $end</error>
      <error line="12" code="PPC:ERR-50007">No summary for property $color</error>
      <error line="13" code="PPC:ERR-50007">No summary for property $thickness</error>
    </parse_markers>
  </file>
  <file path="Exceptions/ValueOutOfBoundsException.php" generated-path="Exceptions.ValueOutOfBoundsException.html" hash="05229277680b9ddffbccd598f5b14982" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Exception">\Exception</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Exceptions" line="6" package="Default">
      <extends>\Exception</extends>
      <name>ValueOutOfBoundsException</name>
      <full_name>\Chameleon\Exceptions\ValueOutOfBoundsException</full_name>
      <docblock line="6">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="6" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Exceptions" line="7" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Exceptions\ValueOutOfBoundsException::__construct()</full_name>
        <docblock line="7">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$valueName</name>
          <default></default>
          <type>\Chameleon\Exceptions\string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>\Chameleon\Exceptions\float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type>\Chameleon\Exceptions\float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type>\Chameleon\Exceptions\float</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="6" code="PPC:ERR-50005">No summary for class \Chameleon\Exceptions\ValueOutOfBoundsException</error>
      <error line="7" code="PPC:ERR-50015">Argument $valueName is missing from the Docblock of __construct</error>
      <error line="7" code="PPC:ERR-50015">Argument $value is missing from the Docblock of __construct</error>
      <error line="7" code="PPC:ERR-50015">Argument $min is missing from the Docblock of __construct</error>
      <error line="7" code="PPC:ERR-50015">Argument $max is missing from the Docblock of __construct</error>
      <error line="7" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
  </file>
  <file path="Filters/EdgedetectFilter.php" generated-path="Filters.EdgedetectFilter.html" hash="62d8c1dc48efe9c23ef9614ff04d3fb4" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="7" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>EdgedetectFilter</name>
      <full_name>\Chameleon\Filters\EdgedetectFilter</full_name>
      <docblock line="7">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::$options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="8" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\EdgedetectFilter::__construct()</full_name>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="17" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\EdgedetectFilter::getFilterID()</full_name>
        <docblock line="17">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="17" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\EdgedetectFilter</error>
      <error line="8" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
  </file>
  <file path="Colors/HSLAColor.php" generated-path="Colors.HSLAColor.html" hash="bbf31686ee22741215ec20015d195bfb" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="HSLColor">\Chameleon\Colors\HSLColor</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="8" package="Default">
      <extends>\Chameleon\Colors\HSLColor</extends>
      <name>HSLAColor</name>
      <full_name>\Chameleon\Colors\HSLAColor</full_name>
      <docblock line="8">
        <description>Color Class for HSL colors</description>
        <long-description>Represents a color based on the HSL (hue, saturation, value) system</long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Colors\HSLColor" refers="\Chameleon\Colors\HSLColor" link="/classes/Chameleon.Colors.HSLColor.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="14" package="Default">
        <name>$alpha</name>
        <full_name>\Chameleon\Colors\HSLAColor::$alpha</full_name>
        <default></default>
        <docblock line="14">
          <description>The alpha channel value [0, 127]</description>
          <long-description></long-description>
          <tag name="var" line="14" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="14" package="Default">
        <name>$hue</name>
        <full_name>\Chameleon\Colors\HSLColor::$hue</full_name>
        <default></default>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="15" package="Default">
        <name>$saturation</name>
        <full_name>\Chameleon\Colors\HSLColor::$saturation</full_name>
        <default></default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="16" package="Default">
        <name>$lightness</name>
        <full_name>\Chameleon\Colors\HSLColor::$lightness</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="18" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\HSLColor::$red</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="19" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\HSLColor::$green</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="20" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\HSLColor::$blue</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="24" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\HSLAColor::__construct()</full_name>
        <docblock line="24">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="24" description="" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
          <tag name="param" line="24" description="" type="float" variable="$saturation">
            <type>float</type>
          </tag>
          <tag name="param" line="24" description="" type="float" variable="$lightness">
            <type>float</type>
          </tag>
          <tag name="param" line="24" description="&lt;p&gt;RGB alpha channel value [0, 127]&lt;/p&gt;" type="float|integer" variable="$alpha">
            <type>float</type>
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\HSLColor::__construct()" refers="\Chameleon\Colors\HSLColor::__construct()" link="/classes/Chameleon.Colors.HSLColor.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$lightness</name>
          <default></default>
          <type>float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default></default>
          <type>float|integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="29" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\HSLAColor::fromRGBA()</full_name>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\HSLColor::fromRGBA()" refers="\Chameleon\Colors\HSLColor::fromRGBA()" link="/classes/Chameleon.Colors.HSLColor.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="41" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\HSLAColor::__toString()</full_name>
        <docblock line="41">
          <description>Get string representation of this color</description>
          <long-description>Format: hsla(hue, saturation, lightness, alpha)</long-description>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\HSLColor::__toString()" refers="\Chameleon\Colors\HSLColor::__toString()" link="/classes/Chameleon.Colors.HSLColor.html#method___toString"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="50" package="Default">
        <name>getAlpha</name>
        <full_name>\Chameleon\Colors\HSLAColor::getAlpha()</full_name>
        <docblock line="50">
          <description>Get RGB alpha channel value</description>
          <long-description></long-description>
          <tag name="return" line="50" description="Alpha channel value [0, 1]" type="float">
            <type>float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="62" package="Default">
        <name>setAlpha</name>
        <full_name>\Chameleon\Colors\HSLAColor::setAlpha()</full_name>
        <docblock line="62">
          <description>Set RGB alpha channel value</description>
          <long-description></long-description>
          <tag name="param" line="62" description="&lt;p&gt;Alpha channel value [0, 1]&lt;/p&gt;" type="float" variable="$alpha">
            <type>float</type>
          </tag>
          <tag name="return" line="62" description="" type="\Chameleon\Colors\HSLAColor">
            <type>\Chameleon\Colors\HSLAColor</type>
          </tag>
          <tag name="throws" line="62" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default></default>
          <type>float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="72" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\HSLAColor::getRGBA()</full_name>
        <docblock line="72">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\HSLColor::getRGBA()" refers="\Chameleon\Colors\HSLColor::getRGBA()" link="/classes/Chameleon.Colors.HSLColor.html#method_getRGBA"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="26" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\HSLColor::__construct()</full_name>
        <docblock line="26">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;Hue value [0, 359]&lt;/p&gt;" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$lightness</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="37" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\HSLColor::fromRGBA()</full_name>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="37" description="" type="\Chameleon\Colors\RGBAColor" variable="$rgba">
            <type>\Chameleon\Colors\RGBAColor</type>
          </tag>
          <tag name="return" line="37" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="86" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\HSLColor::__toString()</full_name>
        <docblock line="86">
          <description></description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="96" package="Default">
        <name>getHue</name>
        <full_name>\Chameleon\Colors\HSLColor::getHue()</full_name>
        <docblock line="96">
          <description>Get hue value</description>
          <long-description>Returns the hue value of this color</long-description>
          <tag name="return" line="96" description="Hue value [0, 359]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="110" package="Default">
        <name>setHue</name>
        <full_name>\Chameleon\Colors\HSLColor::setHue()</full_name>
        <docblock line="110">
          <description>Set hue value</description>
          <long-description>Sets the hue value of this color</long-description>
          <tag name="param" line="110" description="&lt;p&gt;The hue value [0, 359]&lt;/p&gt;" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
          <tag name="return" line="110" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
          <tag name="throws" line="110" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="127" package="Default">
        <name>getSaturation</name>
        <full_name>\Chameleon\Colors\HSLColor::getSaturation()</full_name>
        <docblock line="127">
          <description>Get saturation value</description>
          <long-description>Returns the saturation value of this color</long-description>
          <tag name="return" line="127" description="saturation value [0, 1]" type="float">
            <type>float</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="141" package="Default">
        <name>setSaturation</name>
        <full_name>\Chameleon\Colors\HSLColor::setSaturation()</full_name>
        <docblock line="141">
          <description>Set saturation value</description>
          <long-description>Sets the saturation value of this color</long-description>
          <tag name="param" line="141" description="&lt;p&gt;The saturation value [0, 1]&lt;/p&gt;" type="float|integer" variable="$saturation">
            <type>float</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="141" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
          <tag name="throws" line="141" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>float|integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="158" package="Default">
        <name>getLightness</name>
        <full_name>\Chameleon\Colors\HSLColor::getLightness()</full_name>
        <docblock line="158">
          <description>Get lightness</description>
          <long-description>Returns the lightness of this color</long-description>
          <tag name="return" line="158" description="lightness [0, 1]" type="float">
            <type>float</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="172" package="Default">
        <name>setLightness</name>
        <full_name>\Chameleon\Colors\HSLColor::setLightness()</full_name>
        <docblock line="172">
          <description>Set lightness</description>
          <long-description>Sets the lightness of this color</long-description>
          <tag name="param" line="172" description="&lt;p&gt;The lightness [0, 1]&lt;/p&gt;" type="float|integer" variable="$lightness">
            <type>float</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="172" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
          <tag name="throws" line="172" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$lightness</name>
          <default></default>
          <type>float|integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Chameleon\Colors" line="183" package="Default">
        <name>makeRGB</name>
        <full_name>\Chameleon\Colors\HSLColor::makeRGB()</full_name>
        <docblock line="183">
          <description></description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Chameleon\Colors" line="201" package="Default">
        <name>hue2rgb</name>
        <full_name>\Chameleon\Colors\HSLColor::hue2rgb()</full_name>
        <docblock line="201">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$p</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$q</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$t</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="221" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\HSLColor::getRGBA()</full_name>
        <docblock line="221">
          <description></description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="225" package="Default">
        <name>lighten</name>
        <full_name>\Chameleon\Colors\HSLColor::lighten()</full_name>
        <docblock line="225">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="235" package="Default">
        <name>darken</name>
        <full_name>\Chameleon\Colors\HSLColor::darken()</full_name>
        <docblock line="235">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Colors\HSLAColor</error>
      <error line="29" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="29" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
      <error line="72" code="PPC:ERR-50008">No summary for method getRGBA()</error>
    </parse_markers>
  </file>
  <file path="Filters/EmbossFilter.php" generated-path="Filters.EmbossFilter.html" hash="cc5d42b2193c3145f25349448f8737c5" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="7" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>EmbossFilter</name>
      <full_name>\Chameleon\Filters\EmbossFilter</full_name>
      <docblock line="7">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::$options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="8" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\EmbossFilter::__construct()</full_name>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="17" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\EmbossFilter::getFilterID()</full_name>
        <docblock line="17">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="17" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\EmbossFilter</error>
      <error line="8" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
  </file>
  <file path="Filters/IFilter.php" generated-path="Filters.IFilter.html" hash="1b63dcbd681c255d4bf65c6a9fdd312a" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Image">\Chameleon\Image</namespace-alias>
    <interface namespace="Chameleon\Filters" line="11" package="Chameleon\Filters">
      <name>IFilter</name>
      <full_name>\Chameleon\Filters\IFilter</full_name>
      <docblock line="11">
        <description>Interface IFilter</description>
        <long-description></long-description>
        <tag name="package" line="11" description="Chameleon\Filters"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\IFilter::apply()</full_name>
        <docblock line="19">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="param" line="19" description="&lt;p&gt;The image to be applied to&lt;/p&gt;" type="\Chameleon\Image" variable="$image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="return" line="19" description="Returns TRUE on success or FALSE on failure." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
  </file>
  <file path="Filters/SmoothFilter.php" generated-path="Filters.SmoothFilter.html" hash="b9862619576821cc47952a305744b2ec" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="8" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>SmoothFilter</name>
      <full_name>\Chameleon\Filters\SmoothFilter</full_name>
      <docblock line="8">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::$options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="9" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\SmoothFilter::__construct()</full_name>
        <docblock line="9">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$smoothness</name>
          <default>0</default>
          <type>\Chameleon\Filters\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Default">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\SmoothFilter::getArg1()</full_name>
        <docblock line="19">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getArg1()" refers="\Chameleon\Filters\BuiltinFilter::getArg1()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getArg1"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\SmoothFilter::getFilterID()</full_name>
        <docblock line="28">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\SmoothFilter</error>
      <error line="9" code="PPC:ERR-50015">Argument $smoothness is missing from the Docblock of __construct</error>
      <error line="9" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="19" code="PPC:ERR-50008">No summary for method getArg1()</error>
    </parse_markers>
  </file>
  <file path="Colors/Color.php" generated-path="Colors.Color.html" hash="97a120dbdbb7ee01b883396eca750c5c" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
  </file>
  <file path="Primitives/Rectangle.php" generated-path="Primitives.Rectangle.html" hash="48edb2590f841114d76b94b59f679bd4" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Vector2">\Chameleon\Vector2</namespace-alias>
    <namespace-alias name="Image">\Chameleon\Image</namespace-alias>
    <namespace-alias name="Mask">\Chameleon\Mask</namespace-alias>
    <namespace-alias name="IPattern">\Chameleon\Patterns\IPattern</namespace-alias>
    <namespace-alias name="BackgroundColor">\Chameleon\Patterns\BackgroundColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Primitives" line="14" package="Default">
      <extends>\Chameleon\Primitives\Primitive</extends>
      <name>Rectangle</name>
      <full_name>\Chameleon\Primitives\Rectangle</full_name>
      <docblock line="14">
        <description>Rectangle, by default completely transparent</description>
        <long-description></long-description>
        <tag name="package" line="14" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="15" package="Default">
        <name>$width</name>
        <full_name>\Chameleon\Primitives\Rectangle::$width</full_name>
        <default></default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="16" package="Default">
        <name>$height</name>
        <full_name>\Chameleon\Primitives\Rectangle::$height</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="25" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Primitives\Rectangle::__construct()</full_name>
        <docblock line="25">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="25" description="&lt;p&gt;Top left start point&lt;/p&gt;" type="\Chameleon\Vector2" variable="$point">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="param" line="25" description="&lt;p&gt;width in px&lt;/p&gt;" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="param" line="25" description="&lt;p&gt;height in px&lt;/p&gt;" type="integer" variable="$height">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$point</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$height</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="40" package="Default">
        <name>getWidth</name>
        <full_name>\Chameleon\Primitives\Rectangle::getWidth()</full_name>
        <docblock line="40">
          <description>Get width in px</description>
          <long-description></long-description>
          <tag name="return" line="40" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="50" package="Default">
        <name>setWidth</name>
        <full_name>\Chameleon\Primitives\Rectangle::setWidth()</full_name>
        <docblock line="50">
          <description>Set width in px</description>
          <long-description></long-description>
          <tag name="param" line="50" description="" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="return" line="50" description="" type="\Chameleon\Primitives\Rectangle">
            <type>\Chameleon\Primitives\Rectangle</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="60" package="Default">
        <name>getHeight</name>
        <full_name>\Chameleon\Primitives\Rectangle::getHeight()</full_name>
        <docblock line="60">
          <description>Get height in px</description>
          <long-description></long-description>
          <tag name="return" line="60" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="70" package="Default">
        <name>setHeight</name>
        <full_name>\Chameleon\Primitives\Rectangle::setHeight()</full_name>
        <docblock line="70">
          <description>Set height in px</description>
          <long-description></long-description>
          <tag name="param" line="70" description="" type="integer" variable="$height">
            <type>integer</type>
          </tag>
          <tag name="return" line="70" description="" type="\Chameleon\Primitives\Rectangle">
            <type>\Chameleon\Primitives\Rectangle</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$height</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Chameleon\Primitives" line="75" package="Default">
        <name>drawPattern</name>
        <full_name>\Chameleon\Primitives\Rectangle::drawPattern()</full_name>
        <docblock line="75">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$pattern</name>
          <default></default>
          <type>\Chameleon\Patterns\IPattern</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mask</name>
          <default></default>
          <type>\Chameleon\Mask</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$startX</name>
          <default></default>
          <type>\Chameleon\Primitives\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$startY</name>
          <default></default>
          <type>\Chameleon\Primitives\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="112" package="Default">
        <name>draw</name>
        <full_name>\Chameleon\Primitives\Rectangle::draw()</full_name>
        <docblock line="112">
          <description>Draw the rectangle onto the image resource</description>
          <long-description>Draws the rectangle with border and background (if set).
By default, a rectangle has a 1px black border and no background</long-description>
          <tag name="param" line="112" description="" type="\Chameleon\Image" variable="$image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="return" line="112" description="" type="\Chameleon\Primitives\Rectangle">
            <type>\Chameleon\Primitives\Rectangle</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="75" code="PPC:ERR-50015">Argument $image is missing from the Docblock of drawPattern</error>
      <error line="75" code="PPC:ERR-50015">Argument $pattern is missing from the Docblock of drawPattern</error>
      <error line="75" code="PPC:ERR-50015">Argument $mask is missing from the Docblock of drawPattern</error>
      <error line="75" code="PPC:ERR-50015">Argument $startX is missing from the Docblock of drawPattern</error>
      <error line="75" code="PPC:ERR-50015">Argument $startY is missing from the Docblock of drawPattern</error>
      <error line="75" code="PPC:ERR-50008">No summary for method drawPattern()</error>
      <error line="15" code="PPC:ERR-50007">No summary for property $width</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $height</error>
    </parse_markers>
  </file>
  <file path="Filters/GrayscaleFilter.php" generated-path="Filters.GrayscaleFilter.html" hash="3c928c1e250d7654426cda314593e199" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="7" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>GrayscaleFilter</name>
      <full_name>\Chameleon\Filters\GrayscaleFilter</full_name>
      <docblock line="7">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::$options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="8" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\GrayscaleFilter::__construct()</full_name>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="17" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\GrayscaleFilter::getFilterID()</full_name>
        <docblock line="17">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="17" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\GrayscaleFilter</error>
      <error line="8" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
  </file>
  <file path="Transformations/ScaleMode.php" generated-path="Transformations.ScaleMode.html" hash="19eaadb94e9461bab0852e7e2ac1f7f9" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="true" namespace="Chameleon\Transformations" line="9" package="Chameleon\Transformations">
      <extends/>
      <name>ScaleMode</name>
      <full_name>\Chameleon\Transformations\ScaleMode</full_name>
      <docblock line="9">
        <description>Class ScaleMode</description>
        <long-description></long-description>
        <tag name="package" line="9" description="Chameleon\Transformations"/>
      </docblock>
      <constant namespace="Chameleon\Transformations" line="10" package="Chameleon\Transformations">
        <name>NEAREST_NEIGHBOUR</name>
        <full_name>\Chameleon\Transformations\ScaleMode::NEAREST_NEIGHBOUR</full_name>
        <value>1</value>
        <docblock line="10">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Chameleon\Transformations" line="11" package="Chameleon\Transformations">
        <name>BILINEAR_FIXED</name>
        <full_name>\Chameleon\Transformations\ScaleMode::BILINEAR_FIXED</full_name>
        <value>2</value>
        <docblock line="11">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Chameleon\Transformations" line="12" package="Chameleon\Transformations">
        <name>BICUBIC</name>
        <full_name>\Chameleon\Transformations\ScaleMode::BICUBIC</full_name>
        <value>4</value>
        <docblock line="12">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Chameleon\Transformations" line="13" package="Chameleon\Transformations">
        <name>BICUBIC_FIXED</name>
        <full_name>\Chameleon\Transformations\ScaleMode::BICUBIC_FIXED</full_name>
        <value>8</value>
        <docblock line="13">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
  </file>
  <file path="Patterns/RGBNoise.php" generated-path="Patterns.RGBNoise.html" hash="68dc28c05a149cdc56d5f0636683e2f7" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Patterns" line="8" package="Default">
      <extends>\Chameleon\Patterns\Pattern</extends>
      <name>RGBNoise</name>
      <full_name>\Chameleon\Patterns\RGBNoise</full_name>
      <docblock line="8">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Patterns\Pattern" refers="\Chameleon\Patterns\Pattern" link="/classes/Chameleon.Patterns.Pattern.html"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="15" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\RGBNoise::__construct()</full_name>
        <docblock line="15">
          <description>Pattern constructor</description>
          <long-description></long-description>
          <tag name="param" line="15" description="&lt;p&gt;Number of colors to be generated&lt;/p&gt;" type="integer" variable="$colors">
            <type>integer</type>
          </tag>
          <tag name="param" line="15" description="&lt;p&gt;Optional alpha channel value for the colors&lt;/p&gt;" type="integer" variable="$alpha">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Patterns\Pattern::__construct()" refers="\Chameleon\Patterns\Pattern::__construct()" link="/classes/Chameleon.Patterns.Pattern.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$colors</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="30" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\RGBNoise::getColorAt()</full_name>
        <docblock line="30">
          <description>Get a random color for the position.</description>
          <long-description></long-description>
          <tag name="param" line="30" description="&lt;p&gt;x coordinate&lt;/p&gt;" type="integer" variable="$x">
            <type>integer</type>
          </tag>
          <tag name="param" line="30" description="&lt;p&gt;y coordinate&lt;/p&gt;" type="integer" variable="$y">
            <type>integer</type>
          </tag>
          <tag name="return" line="30" description="The color for the given position" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Patterns\Pattern::getColorAt()" refers="\Chameleon\Patterns\Pattern::getColorAt()" link="/classes/Chameleon.Patterns.Pattern.html#method_getColorAt"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Patterns" line="9" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\Pattern::getColorAt()</full_name>
        <docblock line="9">
          <description>Get color in this pattern at the given position</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Patterns\IPattern::getColorAt()" refers="\Chameleon\Patterns\IPattern::getColorAt()" link="/classes/Chameleon.Patterns.IPattern.html#method_getColorAt"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="16" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\Pattern::__construct()</full_name>
        <docblock line="16">
          <description>Pattern constructor.</description>
          <long-description></long-description>
          <tag name="param" line="16" description="&lt;p&gt;Number of colors used in this pattern&lt;/p&gt;" type="integer" variable="$colors">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$colors</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="26" package="Default">
        <name>setColor</name>
        <full_name>\Chameleon\Patterns\Pattern::setColor()</full_name>
        <docblock line="26">
          <description>Set color at index.</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;index&lt;/p&gt;" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="param" line="26" description="&lt;p&gt;color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="37" package="Default">
        <name>getColor</name>
        <full_name>\Chameleon\Patterns\Pattern::getColor()</full_name>
        <docblock line="37">
          <description>Get color at index</description>
          <long-description></long-description>
          <tag name="param" line="37" description="&lt;p&gt;index&lt;/p&gt;" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="return" line="37" description="color" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Patterns\RGBNoise</error>
    </parse_markers>
  </file>
  <file path="Transformations/FlipMode.php" generated-path="Transformations.FlipMode.html" hash="fe8ef36bc65703d2452f298e985c80fe" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="true" namespace="Chameleon\Transformations" line="9" package="Chameleon\Transformations">
      <extends/>
      <name>FlipMode</name>
      <full_name>\Chameleon\Transformations\FlipMode</full_name>
      <docblock line="9">
        <description>Class FlipMode</description>
        <long-description></long-description>
        <tag name="package" line="9" description="Chameleon\Transformations"/>
      </docblock>
      <constant namespace="Chameleon\Transformations" line="10" package="Chameleon\Transformations">
        <name>HORIZONTAL</name>
        <full_name>\Chameleon\Transformations\FlipMode::HORIZONTAL</full_name>
        <value>1</value>
        <docblock line="10">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Chameleon\Transformations" line="11" package="Chameleon\Transformations">
        <name>VERTICAL</name>
        <full_name>\Chameleon\Transformations\FlipMode::VERTICAL</full_name>
        <value>2</value>
        <docblock line="11">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Chameleon\Transformations" line="12" package="Chameleon\Transformations">
        <name>BOTH</name>
        <full_name>\Chameleon\Transformations\FlipMode::BOTH</full_name>
        <value>4</value>
        <docblock line="12">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
  </file>
  <file path="Primitives/Primitive.php" generated-path="Primitives.Primitive.html" hash="6f4cebfb1b85751e637db654e21e9272" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
  </file>
  <file path="Filters/GaussianBlurFilter.php" generated-path="Filters.GaussianBlurFilter.html" hash="e7d9666529f85bd8111dd0ffe22bb58b" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="7" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>GaussianBlurFilter</name>
      <full_name>\Chameleon\Filters\GaussianBlurFilter</full_name>
      <docblock line="7">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::$options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="8" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\GaussianBlurFilter::__construct()</full_name>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="17" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\GaussianBlurFilter::getFilterID()</full_name>
        <docblock line="17">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="17" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\GaussianBlurFilter</error>
      <error line="8" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
  </file>
  <file path="ColorFactory.php" generated-path="ColorFactory.html" hash="680934e2dfe93860696b0fc1560272be" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Hex8Color">\Chameleon\Colors\Hex8Color</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon" line="15" package="Chameleon">
      <extends/>
      <name>ColorFactory</name>
      <full_name>\Chameleon\ColorFactory</full_name>
      <docblock line="15">
        <description>Class ColorFactory provides various helper functions for working with colors.</description>
        <long-description>There are 141 named colors available, the 141st color is 'transparent'.</long-description>
        <tag name="api" line="15" description=""/>
        <tag name="see" line="15" description="" link="https://www.w3schools.com/colors/colors_names.asp"/>
        <tag name="package" line="15" description="Chameleon"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="20" package="Chameleon">
        <name>transparent</name>
        <full_name>\Chameleon\ColorFactory::transparent()</full_name>
        <docblock line="20">
          <description>transparent</description>
          <long-description></long-description>
          <tag name="return" line="20" description="transparent" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="28" package="Chameleon">
        <name>aliceBlue</name>
        <full_name>\Chameleon\ColorFactory::aliceBlue()</full_name>
        <docblock line="28">
          <description>aliceBlue</description>
          <long-description></long-description>
          <tag name="return" line="28" description="aliceBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="36" package="Chameleon">
        <name>antiqueWhite</name>
        <full_name>\Chameleon\ColorFactory::antiqueWhite()</full_name>
        <docblock line="36">
          <description>antiqueWhite</description>
          <long-description></long-description>
          <tag name="return" line="36" description="antiqueWhite" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="44" package="Chameleon">
        <name>aqua</name>
        <full_name>\Chameleon\ColorFactory::aqua()</full_name>
        <docblock line="44">
          <description>aqua</description>
          <long-description></long-description>
          <tag name="return" line="44" description="aqua" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="52" package="Chameleon">
        <name>aquamarine</name>
        <full_name>\Chameleon\ColorFactory::aquamarine()</full_name>
        <docblock line="52">
          <description>aquamarine</description>
          <long-description></long-description>
          <tag name="return" line="52" description="aquamarine" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="60" package="Chameleon">
        <name>azure</name>
        <full_name>\Chameleon\ColorFactory::azure()</full_name>
        <docblock line="60">
          <description>azure</description>
          <long-description></long-description>
          <tag name="return" line="60" description="azure" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="68" package="Chameleon">
        <name>beige</name>
        <full_name>\Chameleon\ColorFactory::beige()</full_name>
        <docblock line="68">
          <description>beige</description>
          <long-description></long-description>
          <tag name="return" line="68" description="beige" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="76" package="Chameleon">
        <name>bisque</name>
        <full_name>\Chameleon\ColorFactory::bisque()</full_name>
        <docblock line="76">
          <description>bisque</description>
          <long-description></long-description>
          <tag name="return" line="76" description="bisque" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="84" package="Chameleon">
        <name>black</name>
        <full_name>\Chameleon\ColorFactory::black()</full_name>
        <docblock line="84">
          <description>black</description>
          <long-description></long-description>
          <tag name="return" line="84" description="black" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="92" package="Chameleon">
        <name>blanchedAlmond</name>
        <full_name>\Chameleon\ColorFactory::blanchedAlmond()</full_name>
        <docblock line="92">
          <description>blanchedAlmond</description>
          <long-description></long-description>
          <tag name="return" line="92" description="blanchedAlmond" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="100" package="Chameleon">
        <name>blue</name>
        <full_name>\Chameleon\ColorFactory::blue()</full_name>
        <docblock line="100">
          <description>blue</description>
          <long-description></long-description>
          <tag name="return" line="100" description="blue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="108" package="Chameleon">
        <name>blueViolet</name>
        <full_name>\Chameleon\ColorFactory::blueViolet()</full_name>
        <docblock line="108">
          <description>blueViolet</description>
          <long-description></long-description>
          <tag name="return" line="108" description="blueViolet" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="116" package="Chameleon">
        <name>brown</name>
        <full_name>\Chameleon\ColorFactory::brown()</full_name>
        <docblock line="116">
          <description>brown</description>
          <long-description></long-description>
          <tag name="return" line="116" description="brown" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="124" package="Chameleon">
        <name>burlyWood</name>
        <full_name>\Chameleon\ColorFactory::burlyWood()</full_name>
        <docblock line="124">
          <description>burlyWood</description>
          <long-description></long-description>
          <tag name="return" line="124" description="burlyWood" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="132" package="Chameleon">
        <name>cadetBlue</name>
        <full_name>\Chameleon\ColorFactory::cadetBlue()</full_name>
        <docblock line="132">
          <description>cadetBlue</description>
          <long-description></long-description>
          <tag name="return" line="132" description="cadetBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="140" package="Chameleon">
        <name>chartreuse</name>
        <full_name>\Chameleon\ColorFactory::chartreuse()</full_name>
        <docblock line="140">
          <description>chartreuse</description>
          <long-description></long-description>
          <tag name="return" line="140" description="chartreuse" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="148" package="Chameleon">
        <name>chocolate</name>
        <full_name>\Chameleon\ColorFactory::chocolate()</full_name>
        <docblock line="148">
          <description>chocolate</description>
          <long-description></long-description>
          <tag name="return" line="148" description="chocolate" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="156" package="Chameleon">
        <name>coral</name>
        <full_name>\Chameleon\ColorFactory::coral()</full_name>
        <docblock line="156">
          <description>coral</description>
          <long-description></long-description>
          <tag name="return" line="156" description="coral" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="164" package="Chameleon">
        <name>cornflowerBlue</name>
        <full_name>\Chameleon\ColorFactory::cornflowerBlue()</full_name>
        <docblock line="164">
          <description>cornflowerBlue</description>
          <long-description></long-description>
          <tag name="return" line="164" description="cornflowerBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="172" package="Chameleon">
        <name>cornsilk</name>
        <full_name>\Chameleon\ColorFactory::cornsilk()</full_name>
        <docblock line="172">
          <description>cornsilk</description>
          <long-description></long-description>
          <tag name="return" line="172" description="cornsilk" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="180" package="Chameleon">
        <name>crimson</name>
        <full_name>\Chameleon\ColorFactory::crimson()</full_name>
        <docblock line="180">
          <description>crimson</description>
          <long-description></long-description>
          <tag name="return" line="180" description="crimson" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="188" package="Chameleon">
        <name>cyan</name>
        <full_name>\Chameleon\ColorFactory::cyan()</full_name>
        <docblock line="188">
          <description>cyan</description>
          <long-description></long-description>
          <tag name="return" line="188" description="cyan" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="196" package="Chameleon">
        <name>darkBlue</name>
        <full_name>\Chameleon\ColorFactory::darkBlue()</full_name>
        <docblock line="196">
          <description>darkBlue</description>
          <long-description></long-description>
          <tag name="return" line="196" description="darkBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="204" package="Chameleon">
        <name>darkCyan</name>
        <full_name>\Chameleon\ColorFactory::darkCyan()</full_name>
        <docblock line="204">
          <description>darkCyan</description>
          <long-description></long-description>
          <tag name="return" line="204" description="darkCyan" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="212" package="Chameleon">
        <name>darkGoldenRod</name>
        <full_name>\Chameleon\ColorFactory::darkGoldenRod()</full_name>
        <docblock line="212">
          <description>darkGoldenRod</description>
          <long-description></long-description>
          <tag name="return" line="212" description="darkGoldenRod" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="220" package="Chameleon">
        <name>darkGray</name>
        <full_name>\Chameleon\ColorFactory::darkGray()</full_name>
        <docblock line="220">
          <description>darkGray</description>
          <long-description></long-description>
          <tag name="return" line="220" description="darkGray" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="228" package="Chameleon">
        <name>darkGrey</name>
        <full_name>\Chameleon\ColorFactory::darkGrey()</full_name>
        <docblock line="228">
          <description>darkGrey</description>
          <long-description></long-description>
          <tag name="return" line="228" description="darkGrey" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="236" package="Chameleon">
        <name>darkGreen</name>
        <full_name>\Chameleon\ColorFactory::darkGreen()</full_name>
        <docblock line="236">
          <description>darkGreen</description>
          <long-description></long-description>
          <tag name="return" line="236" description="darkGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="244" package="Chameleon">
        <name>darkKhaki</name>
        <full_name>\Chameleon\ColorFactory::darkKhaki()</full_name>
        <docblock line="244">
          <description>darkKhaki</description>
          <long-description></long-description>
          <tag name="return" line="244" description="darkKhaki" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="252" package="Chameleon">
        <name>darkMagenta</name>
        <full_name>\Chameleon\ColorFactory::darkMagenta()</full_name>
        <docblock line="252">
          <description>darkMagenta</description>
          <long-description></long-description>
          <tag name="return" line="252" description="darkMagenta" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="260" package="Chameleon">
        <name>darkOliveGreen</name>
        <full_name>\Chameleon\ColorFactory::darkOliveGreen()</full_name>
        <docblock line="260">
          <description>darkOliveGreen</description>
          <long-description></long-description>
          <tag name="return" line="260" description="darkOliveGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="268" package="Chameleon">
        <name>darkOrange</name>
        <full_name>\Chameleon\ColorFactory::darkOrange()</full_name>
        <docblock line="268">
          <description>darkOrange</description>
          <long-description></long-description>
          <tag name="return" line="268" description="darkOrange" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="276" package="Chameleon">
        <name>darkOrchid</name>
        <full_name>\Chameleon\ColorFactory::darkOrchid()</full_name>
        <docblock line="276">
          <description>darkOrchid</description>
          <long-description></long-description>
          <tag name="return" line="276" description="darkOrchid" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="284" package="Chameleon">
        <name>darkRed</name>
        <full_name>\Chameleon\ColorFactory::darkRed()</full_name>
        <docblock line="284">
          <description>darkRed</description>
          <long-description></long-description>
          <tag name="return" line="284" description="darkRed" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="292" package="Chameleon">
        <name>darkSalmon</name>
        <full_name>\Chameleon\ColorFactory::darkSalmon()</full_name>
        <docblock line="292">
          <description>darkSalmon</description>
          <long-description></long-description>
          <tag name="return" line="292" description="darkSalmon" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="300" package="Chameleon">
        <name>darkSeaGreen</name>
        <full_name>\Chameleon\ColorFactory::darkSeaGreen()</full_name>
        <docblock line="300">
          <description>darkSeaGreen</description>
          <long-description></long-description>
          <tag name="return" line="300" description="darkSeaGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="308" package="Chameleon">
        <name>darkSlateBlue</name>
        <full_name>\Chameleon\ColorFactory::darkSlateBlue()</full_name>
        <docblock line="308">
          <description>darkSlateBlue</description>
          <long-description></long-description>
          <tag name="return" line="308" description="darkSlateBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="316" package="Chameleon">
        <name>darkSlateGray</name>
        <full_name>\Chameleon\ColorFactory::darkSlateGray()</full_name>
        <docblock line="316">
          <description>darkSlateGray</description>
          <long-description></long-description>
          <tag name="return" line="316" description="darkSlateGray" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="324" package="Chameleon">
        <name>darkSlateGrey</name>
        <full_name>\Chameleon\ColorFactory::darkSlateGrey()</full_name>
        <docblock line="324">
          <description>darkSlateGrey</description>
          <long-description></long-description>
          <tag name="return" line="324" description="darkSlateGrey" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="332" package="Chameleon">
        <name>darkTurquoise</name>
        <full_name>\Chameleon\ColorFactory::darkTurquoise()</full_name>
        <docblock line="332">
          <description>darkTurquoise</description>
          <long-description></long-description>
          <tag name="return" line="332" description="darkTurquoise" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="340" package="Chameleon">
        <name>darkViolet</name>
        <full_name>\Chameleon\ColorFactory::darkViolet()</full_name>
        <docblock line="340">
          <description>darkViolet</description>
          <long-description></long-description>
          <tag name="return" line="340" description="darkViolet" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="348" package="Chameleon">
        <name>deepPink</name>
        <full_name>\Chameleon\ColorFactory::deepPink()</full_name>
        <docblock line="348">
          <description>deepPink</description>
          <long-description></long-description>
          <tag name="return" line="348" description="deepPink" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="356" package="Chameleon">
        <name>deepSkyBlue</name>
        <full_name>\Chameleon\ColorFactory::deepSkyBlue()</full_name>
        <docblock line="356">
          <description>deepSkyBlue</description>
          <long-description></long-description>
          <tag name="return" line="356" description="deepSkyBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="364" package="Chameleon">
        <name>dimGray</name>
        <full_name>\Chameleon\ColorFactory::dimGray()</full_name>
        <docblock line="364">
          <description>dimGray</description>
          <long-description></long-description>
          <tag name="return" line="364" description="dimGray" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="372" package="Chameleon">
        <name>dimGrey</name>
        <full_name>\Chameleon\ColorFactory::dimGrey()</full_name>
        <docblock line="372">
          <description>dimGrey</description>
          <long-description></long-description>
          <tag name="return" line="372" description="dimGrey" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="380" package="Chameleon">
        <name>dodgerBlue</name>
        <full_name>\Chameleon\ColorFactory::dodgerBlue()</full_name>
        <docblock line="380">
          <description>dodgerBlue</description>
          <long-description></long-description>
          <tag name="return" line="380" description="dodgerBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="388" package="Chameleon">
        <name>fireBrick</name>
        <full_name>\Chameleon\ColorFactory::fireBrick()</full_name>
        <docblock line="388">
          <description>fireBrick</description>
          <long-description></long-description>
          <tag name="return" line="388" description="fireBrick" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="396" package="Chameleon">
        <name>floralWhite</name>
        <full_name>\Chameleon\ColorFactory::floralWhite()</full_name>
        <docblock line="396">
          <description>floralWhite</description>
          <long-description></long-description>
          <tag name="return" line="396" description="floralWhite" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="404" package="Chameleon">
        <name>forestGreen</name>
        <full_name>\Chameleon\ColorFactory::forestGreen()</full_name>
        <docblock line="404">
          <description>forestGreen</description>
          <long-description></long-description>
          <tag name="return" line="404" description="forestGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="412" package="Chameleon">
        <name>fuchsia</name>
        <full_name>\Chameleon\ColorFactory::fuchsia()</full_name>
        <docblock line="412">
          <description>fuchsia</description>
          <long-description></long-description>
          <tag name="return" line="412" description="fuchsia" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="420" package="Chameleon">
        <name>gainsboro</name>
        <full_name>\Chameleon\ColorFactory::gainsboro()</full_name>
        <docblock line="420">
          <description>gainsboro</description>
          <long-description></long-description>
          <tag name="return" line="420" description="gainsboro" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="428" package="Chameleon">
        <name>ghostWhite</name>
        <full_name>\Chameleon\ColorFactory::ghostWhite()</full_name>
        <docblock line="428">
          <description>ghostWhite</description>
          <long-description></long-description>
          <tag name="return" line="428" description="ghostWhite" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="436" package="Chameleon">
        <name>gold</name>
        <full_name>\Chameleon\ColorFactory::gold()</full_name>
        <docblock line="436">
          <description>gold</description>
          <long-description></long-description>
          <tag name="return" line="436" description="gold" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="444" package="Chameleon">
        <name>goldenRod</name>
        <full_name>\Chameleon\ColorFactory::goldenRod()</full_name>
        <docblock line="444">
          <description>goldenRod</description>
          <long-description></long-description>
          <tag name="return" line="444" description="goldenRod" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="452" package="Chameleon">
        <name>gray</name>
        <full_name>\Chameleon\ColorFactory::gray()</full_name>
        <docblock line="452">
          <description>gray</description>
          <long-description></long-description>
          <tag name="return" line="452" description="gray" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="460" package="Chameleon">
        <name>grey</name>
        <full_name>\Chameleon\ColorFactory::grey()</full_name>
        <docblock line="460">
          <description>grey</description>
          <long-description></long-description>
          <tag name="return" line="460" description="grey" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="468" package="Chameleon">
        <name>green</name>
        <full_name>\Chameleon\ColorFactory::green()</full_name>
        <docblock line="468">
          <description>green</description>
          <long-description></long-description>
          <tag name="return" line="468" description="green" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="476" package="Chameleon">
        <name>greenYellow</name>
        <full_name>\Chameleon\ColorFactory::greenYellow()</full_name>
        <docblock line="476">
          <description>greenYellow</description>
          <long-description></long-description>
          <tag name="return" line="476" description="greenYellow" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="484" package="Chameleon">
        <name>honeyDew</name>
        <full_name>\Chameleon\ColorFactory::honeyDew()</full_name>
        <docblock line="484">
          <description>honeyDew</description>
          <long-description></long-description>
          <tag name="return" line="484" description="honeyDew" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="492" package="Chameleon">
        <name>hotPink</name>
        <full_name>\Chameleon\ColorFactory::hotPink()</full_name>
        <docblock line="492">
          <description>hotPink</description>
          <long-description></long-description>
          <tag name="return" line="492" description="hotPink" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="500" package="Chameleon">
        <name>indianRed</name>
        <full_name>\Chameleon\ColorFactory::indianRed()</full_name>
        <docblock line="500">
          <description>indianRed</description>
          <long-description></long-description>
          <tag name="return" line="500" description="indianRed" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="508" package="Chameleon">
        <name>indigo</name>
        <full_name>\Chameleon\ColorFactory::indigo()</full_name>
        <docblock line="508">
          <description>indigo</description>
          <long-description></long-description>
          <tag name="return" line="508" description="indigo" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="516" package="Chameleon">
        <name>ivory</name>
        <full_name>\Chameleon\ColorFactory::ivory()</full_name>
        <docblock line="516">
          <description>ivory</description>
          <long-description></long-description>
          <tag name="return" line="516" description="ivory" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="524" package="Chameleon">
        <name>khaki</name>
        <full_name>\Chameleon\ColorFactory::khaki()</full_name>
        <docblock line="524">
          <description>khaki</description>
          <long-description></long-description>
          <tag name="return" line="524" description="khaki" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="532" package="Chameleon">
        <name>lavender</name>
        <full_name>\Chameleon\ColorFactory::lavender()</full_name>
        <docblock line="532">
          <description>lavender</description>
          <long-description></long-description>
          <tag name="return" line="532" description="lavender" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="540" package="Chameleon">
        <name>lavenderBlush</name>
        <full_name>\Chameleon\ColorFactory::lavenderBlush()</full_name>
        <docblock line="540">
          <description>lavenderBlush</description>
          <long-description></long-description>
          <tag name="return" line="540" description="lavenderBlush" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="548" package="Chameleon">
        <name>lawnGreen</name>
        <full_name>\Chameleon\ColorFactory::lawnGreen()</full_name>
        <docblock line="548">
          <description>lawnGreen</description>
          <long-description></long-description>
          <tag name="return" line="548" description="lawnGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="556" package="Chameleon">
        <name>lemonChiffon</name>
        <full_name>\Chameleon\ColorFactory::lemonChiffon()</full_name>
        <docblock line="556">
          <description>lemonChiffon</description>
          <long-description></long-description>
          <tag name="return" line="556" description="lemonChiffon" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="564" package="Chameleon">
        <name>lightBlue</name>
        <full_name>\Chameleon\ColorFactory::lightBlue()</full_name>
        <docblock line="564">
          <description>lightBlue</description>
          <long-description></long-description>
          <tag name="return" line="564" description="lightBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="572" package="Chameleon">
        <name>lightCoral</name>
        <full_name>\Chameleon\ColorFactory::lightCoral()</full_name>
        <docblock line="572">
          <description>lightCoral</description>
          <long-description></long-description>
          <tag name="return" line="572" description="lightCoral" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="580" package="Chameleon">
        <name>lightCyan</name>
        <full_name>\Chameleon\ColorFactory::lightCyan()</full_name>
        <docblock line="580">
          <description>lightCyan</description>
          <long-description></long-description>
          <tag name="return" line="580" description="lightCyan" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="588" package="Chameleon">
        <name>lightGoldenRodYellow</name>
        <full_name>\Chameleon\ColorFactory::lightGoldenRodYellow()</full_name>
        <docblock line="588">
          <description>lightGoldenRodYellow</description>
          <long-description></long-description>
          <tag name="return" line="588" description="lightGoldenRodYellow" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="596" package="Chameleon">
        <name>lightGray</name>
        <full_name>\Chameleon\ColorFactory::lightGray()</full_name>
        <docblock line="596">
          <description>lightGray</description>
          <long-description></long-description>
          <tag name="return" line="596" description="lightGray" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="604" package="Chameleon">
        <name>lightGrey</name>
        <full_name>\Chameleon\ColorFactory::lightGrey()</full_name>
        <docblock line="604">
          <description>lightGrey</description>
          <long-description></long-description>
          <tag name="return" line="604" description="lightGrey" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="612" package="Chameleon">
        <name>lightGreen</name>
        <full_name>\Chameleon\ColorFactory::lightGreen()</full_name>
        <docblock line="612">
          <description>lightGreen</description>
          <long-description></long-description>
          <tag name="return" line="612" description="lightGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="620" package="Chameleon">
        <name>lightPink</name>
        <full_name>\Chameleon\ColorFactory::lightPink()</full_name>
        <docblock line="620">
          <description>lightPink</description>
          <long-description></long-description>
          <tag name="return" line="620" description="lightPink" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="628" package="Chameleon">
        <name>lightSalmon</name>
        <full_name>\Chameleon\ColorFactory::lightSalmon()</full_name>
        <docblock line="628">
          <description>lightSalmon</description>
          <long-description></long-description>
          <tag name="return" line="628" description="lightSalmon" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="636" package="Chameleon">
        <name>lightSeaGreen</name>
        <full_name>\Chameleon\ColorFactory::lightSeaGreen()</full_name>
        <docblock line="636">
          <description>lightSeaGreen</description>
          <long-description></long-description>
          <tag name="return" line="636" description="lightSeaGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="644" package="Chameleon">
        <name>lightSkyBlue</name>
        <full_name>\Chameleon\ColorFactory::lightSkyBlue()</full_name>
        <docblock line="644">
          <description>lightSkyBlue</description>
          <long-description></long-description>
          <tag name="return" line="644" description="lightSkyBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="652" package="Chameleon">
        <name>lightSlateGray</name>
        <full_name>\Chameleon\ColorFactory::lightSlateGray()</full_name>
        <docblock line="652">
          <description>lightSlateGray</description>
          <long-description></long-description>
          <tag name="return" line="652" description="lightSlateGray" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="660" package="Chameleon">
        <name>lightSlateGrey</name>
        <full_name>\Chameleon\ColorFactory::lightSlateGrey()</full_name>
        <docblock line="660">
          <description>lightSlateGrey</description>
          <long-description></long-description>
          <tag name="return" line="660" description="lightSlateGrey" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="668" package="Chameleon">
        <name>lightSteelBlue</name>
        <full_name>\Chameleon\ColorFactory::lightSteelBlue()</full_name>
        <docblock line="668">
          <description>lightSteelBlue</description>
          <long-description></long-description>
          <tag name="return" line="668" description="lightSteelBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="676" package="Chameleon">
        <name>lightYellow</name>
        <full_name>\Chameleon\ColorFactory::lightYellow()</full_name>
        <docblock line="676">
          <description>lightYellow</description>
          <long-description></long-description>
          <tag name="return" line="676" description="lightYellow" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="684" package="Chameleon">
        <name>lime</name>
        <full_name>\Chameleon\ColorFactory::lime()</full_name>
        <docblock line="684">
          <description>lime</description>
          <long-description></long-description>
          <tag name="return" line="684" description="lime" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="692" package="Chameleon">
        <name>limeGreen</name>
        <full_name>\Chameleon\ColorFactory::limeGreen()</full_name>
        <docblock line="692">
          <description>limeGreen</description>
          <long-description></long-description>
          <tag name="return" line="692" description="limeGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="700" package="Chameleon">
        <name>linen</name>
        <full_name>\Chameleon\ColorFactory::linen()</full_name>
        <docblock line="700">
          <description>linen</description>
          <long-description></long-description>
          <tag name="return" line="700" description="linen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="708" package="Chameleon">
        <name>magenta</name>
        <full_name>\Chameleon\ColorFactory::magenta()</full_name>
        <docblock line="708">
          <description>magenta</description>
          <long-description></long-description>
          <tag name="return" line="708" description="magenta" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="716" package="Chameleon">
        <name>maroon</name>
        <full_name>\Chameleon\ColorFactory::maroon()</full_name>
        <docblock line="716">
          <description>maroon</description>
          <long-description></long-description>
          <tag name="return" line="716" description="maroon" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="724" package="Chameleon">
        <name>mediumAquaMarine</name>
        <full_name>\Chameleon\ColorFactory::mediumAquaMarine()</full_name>
        <docblock line="724">
          <description>mediumAquaMarine</description>
          <long-description></long-description>
          <tag name="return" line="724" description="mediumAquaMarine" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="732" package="Chameleon">
        <name>mediumBlue</name>
        <full_name>\Chameleon\ColorFactory::mediumBlue()</full_name>
        <docblock line="732">
          <description>mediumBlue</description>
          <long-description></long-description>
          <tag name="return" line="732" description="mediumBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="740" package="Chameleon">
        <name>mediumOrchid</name>
        <full_name>\Chameleon\ColorFactory::mediumOrchid()</full_name>
        <docblock line="740">
          <description>mediumOrchid</description>
          <long-description></long-description>
          <tag name="return" line="740" description="mediumOrchid" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="748" package="Chameleon">
        <name>mediumPurple</name>
        <full_name>\Chameleon\ColorFactory::mediumPurple()</full_name>
        <docblock line="748">
          <description>mediumPurple</description>
          <long-description></long-description>
          <tag name="return" line="748" description="mediumPurple" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="756" package="Chameleon">
        <name>mediumSeaGreen</name>
        <full_name>\Chameleon\ColorFactory::mediumSeaGreen()</full_name>
        <docblock line="756">
          <description>mediumSeaGreen</description>
          <long-description></long-description>
          <tag name="return" line="756" description="mediumSeaGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="764" package="Chameleon">
        <name>mediumSlateBlue</name>
        <full_name>\Chameleon\ColorFactory::mediumSlateBlue()</full_name>
        <docblock line="764">
          <description>mediumSlateBlue</description>
          <long-description></long-description>
          <tag name="return" line="764" description="mediumSlateBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="772" package="Chameleon">
        <name>mediumSpringGreen</name>
        <full_name>\Chameleon\ColorFactory::mediumSpringGreen()</full_name>
        <docblock line="772">
          <description>mediumSpringGreen</description>
          <long-description></long-description>
          <tag name="return" line="772" description="mediumSpringGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="780" package="Chameleon">
        <name>mediumTurquoise</name>
        <full_name>\Chameleon\ColorFactory::mediumTurquoise()</full_name>
        <docblock line="780">
          <description>mediumTurquoise</description>
          <long-description></long-description>
          <tag name="return" line="780" description="mediumTurquoise" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="788" package="Chameleon">
        <name>mediumVioletRed</name>
        <full_name>\Chameleon\ColorFactory::mediumVioletRed()</full_name>
        <docblock line="788">
          <description>mediumVioletRed</description>
          <long-description></long-description>
          <tag name="return" line="788" description="mediumVioletRed" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="796" package="Chameleon">
        <name>midnightBlue</name>
        <full_name>\Chameleon\ColorFactory::midnightBlue()</full_name>
        <docblock line="796">
          <description>midnightBlue</description>
          <long-description></long-description>
          <tag name="return" line="796" description="midnightBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="804" package="Chameleon">
        <name>mintCream</name>
        <full_name>\Chameleon\ColorFactory::mintCream()</full_name>
        <docblock line="804">
          <description>mintCream</description>
          <long-description></long-description>
          <tag name="return" line="804" description="mintCream" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="812" package="Chameleon">
        <name>mistyRose</name>
        <full_name>\Chameleon\ColorFactory::mistyRose()</full_name>
        <docblock line="812">
          <description>mistyRose</description>
          <long-description></long-description>
          <tag name="return" line="812" description="mistyRose" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="820" package="Chameleon">
        <name>moccasin</name>
        <full_name>\Chameleon\ColorFactory::moccasin()</full_name>
        <docblock line="820">
          <description>moccasin</description>
          <long-description></long-description>
          <tag name="return" line="820" description="moccasin" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="828" package="Chameleon">
        <name>navajoWhite</name>
        <full_name>\Chameleon\ColorFactory::navajoWhite()</full_name>
        <docblock line="828">
          <description>navajoWhite</description>
          <long-description></long-description>
          <tag name="return" line="828" description="navajoWhite" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="836" package="Chameleon">
        <name>navy</name>
        <full_name>\Chameleon\ColorFactory::navy()</full_name>
        <docblock line="836">
          <description>navy</description>
          <long-description></long-description>
          <tag name="return" line="836" description="navy" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="844" package="Chameleon">
        <name>oldLace</name>
        <full_name>\Chameleon\ColorFactory::oldLace()</full_name>
        <docblock line="844">
          <description>oldLace</description>
          <long-description></long-description>
          <tag name="return" line="844" description="oldLace" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="852" package="Chameleon">
        <name>olive</name>
        <full_name>\Chameleon\ColorFactory::olive()</full_name>
        <docblock line="852">
          <description>olive</description>
          <long-description></long-description>
          <tag name="return" line="852" description="olive" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="860" package="Chameleon">
        <name>oliveDrab</name>
        <full_name>\Chameleon\ColorFactory::oliveDrab()</full_name>
        <docblock line="860">
          <description>oliveDrab</description>
          <long-description></long-description>
          <tag name="return" line="860" description="oliveDrab" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="868" package="Chameleon">
        <name>orange</name>
        <full_name>\Chameleon\ColorFactory::orange()</full_name>
        <docblock line="868">
          <description>orange</description>
          <long-description></long-description>
          <tag name="return" line="868" description="orange" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="876" package="Chameleon">
        <name>orangeRed</name>
        <full_name>\Chameleon\ColorFactory::orangeRed()</full_name>
        <docblock line="876">
          <description>orangeRed</description>
          <long-description></long-description>
          <tag name="return" line="876" description="orangeRed" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="884" package="Chameleon">
        <name>orchid</name>
        <full_name>\Chameleon\ColorFactory::orchid()</full_name>
        <docblock line="884">
          <description>orchid</description>
          <long-description></long-description>
          <tag name="return" line="884" description="orchid" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="892" package="Chameleon">
        <name>paleGoldenRod</name>
        <full_name>\Chameleon\ColorFactory::paleGoldenRod()</full_name>
        <docblock line="892">
          <description>paleGoldenRod</description>
          <long-description></long-description>
          <tag name="return" line="892" description="paleGoldenRod" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="900" package="Chameleon">
        <name>paleGreen</name>
        <full_name>\Chameleon\ColorFactory::paleGreen()</full_name>
        <docblock line="900">
          <description>paleGreen</description>
          <long-description></long-description>
          <tag name="return" line="900" description="paleGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="908" package="Chameleon">
        <name>paleTurquoise</name>
        <full_name>\Chameleon\ColorFactory::paleTurquoise()</full_name>
        <docblock line="908">
          <description>paleTurquoise</description>
          <long-description></long-description>
          <tag name="return" line="908" description="paleTurquoise" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="916" package="Chameleon">
        <name>paleVioletRed</name>
        <full_name>\Chameleon\ColorFactory::paleVioletRed()</full_name>
        <docblock line="916">
          <description>paleVioletRed</description>
          <long-description></long-description>
          <tag name="return" line="916" description="paleVioletRed" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="924" package="Chameleon">
        <name>papayaWhip</name>
        <full_name>\Chameleon\ColorFactory::papayaWhip()</full_name>
        <docblock line="924">
          <description>papayaWhip</description>
          <long-description></long-description>
          <tag name="return" line="924" description="papayaWhip" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="932" package="Chameleon">
        <name>peachPuff</name>
        <full_name>\Chameleon\ColorFactory::peachPuff()</full_name>
        <docblock line="932">
          <description>peachPuff</description>
          <long-description></long-description>
          <tag name="return" line="932" description="peachPuff" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="940" package="Chameleon">
        <name>peru</name>
        <full_name>\Chameleon\ColorFactory::peru()</full_name>
        <docblock line="940">
          <description>peru</description>
          <long-description></long-description>
          <tag name="return" line="940" description="peru" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="948" package="Chameleon">
        <name>pink</name>
        <full_name>\Chameleon\ColorFactory::pink()</full_name>
        <docblock line="948">
          <description>pink</description>
          <long-description></long-description>
          <tag name="return" line="948" description="pink" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="956" package="Chameleon">
        <name>plum</name>
        <full_name>\Chameleon\ColorFactory::plum()</full_name>
        <docblock line="956">
          <description>plum</description>
          <long-description></long-description>
          <tag name="return" line="956" description="plum" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="964" package="Chameleon">
        <name>powderBlue</name>
        <full_name>\Chameleon\ColorFactory::powderBlue()</full_name>
        <docblock line="964">
          <description>powderBlue</description>
          <long-description></long-description>
          <tag name="return" line="964" description="powderBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="972" package="Chameleon">
        <name>purple</name>
        <full_name>\Chameleon\ColorFactory::purple()</full_name>
        <docblock line="972">
          <description>purple</description>
          <long-description></long-description>
          <tag name="return" line="972" description="purple" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="980" package="Chameleon">
        <name>rebeccaPurple</name>
        <full_name>\Chameleon\ColorFactory::rebeccaPurple()</full_name>
        <docblock line="980">
          <description>rebeccaPurple</description>
          <long-description></long-description>
          <tag name="return" line="980" description="rebeccaPurple" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="988" package="Chameleon">
        <name>red</name>
        <full_name>\Chameleon\ColorFactory::red()</full_name>
        <docblock line="988">
          <description>red</description>
          <long-description></long-description>
          <tag name="return" line="988" description="red" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="996" package="Chameleon">
        <name>rosyBrown</name>
        <full_name>\Chameleon\ColorFactory::rosyBrown()</full_name>
        <docblock line="996">
          <description>rosyBrown</description>
          <long-description></long-description>
          <tag name="return" line="996" description="rosyBrown" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1004" package="Chameleon">
        <name>royalBlue</name>
        <full_name>\Chameleon\ColorFactory::royalBlue()</full_name>
        <docblock line="1004">
          <description>royalBlue</description>
          <long-description></long-description>
          <tag name="return" line="1004" description="royalBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1012" package="Chameleon">
        <name>saddleBrown</name>
        <full_name>\Chameleon\ColorFactory::saddleBrown()</full_name>
        <docblock line="1012">
          <description>saddleBrown</description>
          <long-description></long-description>
          <tag name="return" line="1012" description="saddleBrown" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1020" package="Chameleon">
        <name>salmon</name>
        <full_name>\Chameleon\ColorFactory::salmon()</full_name>
        <docblock line="1020">
          <description>salmon</description>
          <long-description></long-description>
          <tag name="return" line="1020" description="salmon" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1028" package="Chameleon">
        <name>sandyBrown</name>
        <full_name>\Chameleon\ColorFactory::sandyBrown()</full_name>
        <docblock line="1028">
          <description>sandyBrown</description>
          <long-description></long-description>
          <tag name="return" line="1028" description="sandyBrown" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1036" package="Chameleon">
        <name>seaGreen</name>
        <full_name>\Chameleon\ColorFactory::seaGreen()</full_name>
        <docblock line="1036">
          <description>seaGreen</description>
          <long-description></long-description>
          <tag name="return" line="1036" description="seaGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1044" package="Chameleon">
        <name>seaShell</name>
        <full_name>\Chameleon\ColorFactory::seaShell()</full_name>
        <docblock line="1044">
          <description>seaShell</description>
          <long-description></long-description>
          <tag name="return" line="1044" description="seaShell" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1052" package="Chameleon">
        <name>sienna</name>
        <full_name>\Chameleon\ColorFactory::sienna()</full_name>
        <docblock line="1052">
          <description>sienna</description>
          <long-description></long-description>
          <tag name="return" line="1052" description="sienna" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1060" package="Chameleon">
        <name>silver</name>
        <full_name>\Chameleon\ColorFactory::silver()</full_name>
        <docblock line="1060">
          <description>silver</description>
          <long-description></long-description>
          <tag name="return" line="1060" description="silver" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1068" package="Chameleon">
        <name>skyBlue</name>
        <full_name>\Chameleon\ColorFactory::skyBlue()</full_name>
        <docblock line="1068">
          <description>skyBlue</description>
          <long-description></long-description>
          <tag name="return" line="1068" description="skyBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1076" package="Chameleon">
        <name>slateBlue</name>
        <full_name>\Chameleon\ColorFactory::slateBlue()</full_name>
        <docblock line="1076">
          <description>slateBlue</description>
          <long-description></long-description>
          <tag name="return" line="1076" description="slateBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1084" package="Chameleon">
        <name>slateGray</name>
        <full_name>\Chameleon\ColorFactory::slateGray()</full_name>
        <docblock line="1084">
          <description>slateGray</description>
          <long-description></long-description>
          <tag name="return" line="1084" description="slateGray" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1092" package="Chameleon">
        <name>slateGrey</name>
        <full_name>\Chameleon\ColorFactory::slateGrey()</full_name>
        <docblock line="1092">
          <description>slateGrey</description>
          <long-description></long-description>
          <tag name="return" line="1092" description="slateGrey" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1100" package="Chameleon">
        <name>snow</name>
        <full_name>\Chameleon\ColorFactory::snow()</full_name>
        <docblock line="1100">
          <description>snow</description>
          <long-description></long-description>
          <tag name="return" line="1100" description="snow" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1108" package="Chameleon">
        <name>springGreen</name>
        <full_name>\Chameleon\ColorFactory::springGreen()</full_name>
        <docblock line="1108">
          <description>springGreen</description>
          <long-description></long-description>
          <tag name="return" line="1108" description="springGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1116" package="Chameleon">
        <name>steelBlue</name>
        <full_name>\Chameleon\ColorFactory::steelBlue()</full_name>
        <docblock line="1116">
          <description>steelBlue</description>
          <long-description></long-description>
          <tag name="return" line="1116" description="steelBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1124" package="Chameleon">
        <name>tan</name>
        <full_name>\Chameleon\ColorFactory::tan()</full_name>
        <docblock line="1124">
          <description>tan</description>
          <long-description></long-description>
          <tag name="return" line="1124" description="tan" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1132" package="Chameleon">
        <name>teal</name>
        <full_name>\Chameleon\ColorFactory::teal()</full_name>
        <docblock line="1132">
          <description>teal</description>
          <long-description></long-description>
          <tag name="return" line="1132" description="teal" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1140" package="Chameleon">
        <name>thistle</name>
        <full_name>\Chameleon\ColorFactory::thistle()</full_name>
        <docblock line="1140">
          <description>thistle</description>
          <long-description></long-description>
          <tag name="return" line="1140" description="thistle" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1148" package="Chameleon">
        <name>tomato</name>
        <full_name>\Chameleon\ColorFactory::tomato()</full_name>
        <docblock line="1148">
          <description>tomato</description>
          <long-description></long-description>
          <tag name="return" line="1148" description="tomato" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1156" package="Chameleon">
        <name>turquoise</name>
        <full_name>\Chameleon\ColorFactory::turquoise()</full_name>
        <docblock line="1156">
          <description>turquoise</description>
          <long-description></long-description>
          <tag name="return" line="1156" description="turquoise" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1164" package="Chameleon">
        <name>violet</name>
        <full_name>\Chameleon\ColorFactory::violet()</full_name>
        <docblock line="1164">
          <description>violet</description>
          <long-description></long-description>
          <tag name="return" line="1164" description="violet" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1172" package="Chameleon">
        <name>wheat</name>
        <full_name>\Chameleon\ColorFactory::wheat()</full_name>
        <docblock line="1172">
          <description>wheat</description>
          <long-description></long-description>
          <tag name="return" line="1172" description="wheat" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1180" package="Chameleon">
        <name>white</name>
        <full_name>\Chameleon\ColorFactory::white()</full_name>
        <docblock line="1180">
          <description>white</description>
          <long-description></long-description>
          <tag name="return" line="1180" description="white" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1188" package="Chameleon">
        <name>whiteSmoke</name>
        <full_name>\Chameleon\ColorFactory::whiteSmoke()</full_name>
        <docblock line="1188">
          <description>whiteSmoke</description>
          <long-description></long-description>
          <tag name="return" line="1188" description="whiteSmoke" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1196" package="Chameleon">
        <name>yellow</name>
        <full_name>\Chameleon\ColorFactory::yellow()</full_name>
        <docblock line="1196">
          <description>yellow</description>
          <long-description></long-description>
          <tag name="return" line="1196" description="yellow" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1204" package="Chameleon">
        <name>yellowGreen</name>
        <full_name>\Chameleon\ColorFactory::yellowGreen()</full_name>
        <docblock line="1204">
          <description>yellowGreen</description>
          <long-description></long-description>
          <tag name="return" line="1204" description="yellowGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
  </file>
  <file path="Filters/ColorizeFilter.php" generated-path="Filters.ColorizeFilter.html" hash="63a4cb8592cbd47ca96bcebf5e883253" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="8" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>ColorizeFilter</name>
      <full_name>\Chameleon\Filters\ColorizeFilter</full_name>
      <docblock line="8">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::$options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="9" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\ColorizeFilter::__construct()</full_name>
        <docblock line="9">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default>0</default>
          <type>\Chameleon\Filters\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default>0</default>
          <type>\Chameleon\Filters\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default>0</default>
          <type>\Chameleon\Filters\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default>0</default>
          <type>\Chameleon\Filters\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="31" package="Default">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\ColorizeFilter::getArg1()</full_name>
        <docblock line="31">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getArg1()" refers="\Chameleon\Filters\BuiltinFilter::getArg1()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getArg1"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="35" package="Default">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\ColorizeFilter::getArg2()</full_name>
        <docblock line="35">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getArg2()" refers="\Chameleon\Filters\BuiltinFilter::getArg2()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getArg2"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="39" package="Default">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\ColorizeFilter::getArg3()</full_name>
        <docblock line="39">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getArg3()" refers="\Chameleon\Filters\BuiltinFilter::getArg3()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getArg3"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="43" package="Default">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\ColorizeFilter::getArg4()</full_name>
        <docblock line="43">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getArg4()" refers="\Chameleon\Filters\BuiltinFilter::getArg4()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getArg4"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="52" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\ColorizeFilter::getFilterID()</full_name>
        <docblock line="52">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="52" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\ColorizeFilter</error>
      <error line="9" code="PPC:ERR-50015">Argument $red is missing from the Docblock of __construct</error>
      <error line="9" code="PPC:ERR-50015">Argument $green is missing from the Docblock of __construct</error>
      <error line="9" code="PPC:ERR-50015">Argument $blue is missing from the Docblock of __construct</error>
      <error line="9" code="PPC:ERR-50015">Argument $alpha is missing from the Docblock of __construct</error>
      <error line="9" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="31" code="PPC:ERR-50008">No summary for method getArg1()</error>
      <error line="35" code="PPC:ERR-50008">No summary for method getArg2()</error>
      <error line="39" code="PPC:ERR-50008">No summary for method getArg3()</error>
      <error line="43" code="PPC:ERR-50008">No summary for method getArg4()</error>
    </parse_markers>
  </file>
  <file path="Filters/InvertFilter.php" generated-path="Filters.InvertFilter.html" hash="17e1056cdba167577c264f19ad32bb18" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="7" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>InvertFilter</name>
      <full_name>\Chameleon\Filters\InvertFilter</full_name>
      <docblock line="7">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::$options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="8" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\InvertFilter::__construct()</full_name>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="17" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\InvertFilter::getFilterID()</full_name>
        <docblock line="17">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="17" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\InvertFilter</error>
      <error line="8" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
  </file>
  <file path="Primitives/IPrimitive.php" generated-path="Primitives.IPrimitive.html" hash="018ff62a81ced9c99096fa0d6b978da4" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Vector2">\Chameleon\Vector2</namespace-alias>
    <namespace-alias name="Image">\Chameleon\Image</namespace-alias>
    <interface namespace="Chameleon\Primitives" line="7" package="Default">
      <name>IPrimitive</name>
      <full_name>\Chameleon\Primitives\IPrimitive</full_name>
      <docblock line="7">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="13" package="Default">
        <name>getPosition</name>
        <full_name>\Chameleon\Primitives\IPrimitive::getPosition()</full_name>
        <docblock line="13">
          <description>Get Primitive position</description>
          <long-description></long-description>
          <tag name="return" line="13" description="position vector" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="21" package="Default">
        <name>setPosition</name>
        <full_name>\Chameleon\Primitives\IPrimitive::setPosition()</full_name>
        <docblock line="21">
          <description>Set the position of this primitive</description>
          <long-description></long-description>
          <tag name="param" line="21" description="&lt;p&gt;The position vector&lt;/p&gt;" type="\Chameleon\Vector2" variable="$point">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="return" line="21" description="" type="\Chameleon\Primitives\IPrimitive">
            <type>\Chameleon\Primitives\IPrimitive</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$point</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="29" package="Default">
        <name>draw</name>
        <full_name>\Chameleon\Primitives\IPrimitive::draw()</full_name>
        <docblock line="29">
          <description>Draw this primitive onto the image</description>
          <long-description></long-description>
          <tag name="param" line="29" description="" type="\Chameleon\Image" variable="$image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="return" line="29" description="" type="\Chameleon\Primitives\IPrimitive">
            <type>\Chameleon\Primitives\IPrimitive</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50009">No summary for interface \Chameleon\Primitives\IPrimitive</error>
    </parse_markers>
  </file>
  <file path="Patterns/Grid.php" generated-path="Patterns.Grid.html" hash="9f1b65d4609550f269a27dcc8eeeeec2" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Patterns" line="10" package="Default">
      <extends>\Chameleon\Patterns\Pattern</extends>
      <name>Grid</name>
      <full_name>\Chameleon\Patterns\Grid</full_name>
      <docblock line="10">
        <description>Grid pattern. Can be customized in width, height, x offset and y offset.</description>
        <long-description></long-description>
        <tag name="package" line="10" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Patterns\Pattern" refers="\Chameleon\Patterns\Pattern" link="/classes/Chameleon.Patterns.Pattern.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Patterns" line="11" package="Default">
        <name>$width</name>
        <full_name>\Chameleon\Patterns\Grid::$width</full_name>
        <default></default>
        <docblock line="11">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Patterns" line="12" package="Default">
        <name>$height</name>
        <full_name>\Chameleon\Patterns\Grid::$height</full_name>
        <default></default>
        <docblock line="12">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Patterns" line="13" package="Default">
        <name>$offsetX</name>
        <full_name>\Chameleon\Patterns\Grid::$offsetX</full_name>
        <default></default>
        <docblock line="13">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Patterns" line="14" package="Default">
        <name>$offsetY</name>
        <full_name>\Chameleon\Patterns\Grid::$offsetY</full_name>
        <default></default>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="28" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\Grid::__construct()</full_name>
        <docblock line="28">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="api" line="28" description=""/>
          <tag name="param" line="28" description="&lt;p&gt;Color for the background&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$background">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="param" line="28" description="&lt;p&gt;Color for the lines&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$line">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="param" line="28" description="&lt;p&gt;Horizontal line spacing&lt;/p&gt;" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="param" line="28" description="&lt;p&gt;Vertical line spacing&lt;/p&gt;" type="integer" variable="$height">
            <type>integer</type>
          </tag>
          <tag name="param" line="28" description="&lt;p&gt;Move grid on x axis&lt;/p&gt;" type="integer" variable="$offsetX">
            <type>integer</type>
          </tag>
          <tag name="param" line="28" description="&lt;p&gt;Move grid on y axis&lt;/p&gt;" type="integer" variable="$offsetY">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Patterns\Pattern::__construct()" refers="\Chameleon\Patterns\Pattern::__construct()" link="/classes/Chameleon.Patterns.Pattern.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$background</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$line</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default>2</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$height</name>
          <default>2</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offsetX</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offsetY</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="46" package="Default">
        <name>getWidth</name>
        <full_name>\Chameleon\Patterns\Grid::getWidth()</full_name>
        <docblock line="46">
          <description>Get horizontal spacing of lines</description>
          <long-description></long-description>
          <tag name="return" line="46" description="Horizontal spacing in px" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="56" package="Default">
        <name>setWidth</name>
        <full_name>\Chameleon\Patterns\Grid::setWidth()</full_name>
        <docblock line="56">
          <description>Set horizontal spacing of lines</description>
          <long-description></long-description>
          <tag name="param" line="56" description="&lt;p&gt;Horizontal spacing in px&lt;/p&gt;" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="return" line="56" description="" type="\Chameleon\Patterns\Grid">
            <type>\Chameleon\Patterns\Grid</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="68" package="Default">
        <name>getHeight</name>
        <full_name>\Chameleon\Patterns\Grid::getHeight()</full_name>
        <docblock line="68">
          <description>Get vertical spacing of lines</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Vertical spacing in px" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="92" package="Default">
        <name>getOffsetX</name>
        <full_name>\Chameleon\Patterns\Grid::getOffsetX()</full_name>
        <docblock line="92">
          <description>Get x-axis offset</description>
          <long-description></long-description>
          <tag name="return" line="92" description="X offset in px" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="105" package="Default">
        <name>setOffsetX</name>
        <full_name>\Chameleon\Patterns\Grid::setOffsetX()</full_name>
        <docblock line="105">
          <description>Set x-axis offset</description>
          <long-description>x-axis offset moves the whole grid to the left/right</long-description>
          <tag name="param" line="105" description="&lt;p&gt;x offset in px&lt;/p&gt;" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="return" line="105" description="" type="\Chameleon\Patterns\Grid">
            <type>\Chameleon\Patterns\Grid</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="115" package="Default">
        <name>getOffsetY</name>
        <full_name>\Chameleon\Patterns\Grid::getOffsetY()</full_name>
        <docblock line="115">
          <description>Get y-axis offset</description>
          <long-description></long-description>
          <tag name="return" line="115" description="Y offset in px" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="128" package="Default">
        <name>setOffsetY</name>
        <full_name>\Chameleon\Patterns\Grid::setOffsetY()</full_name>
        <docblock line="128">
          <description>Set y-axis offset</description>
          <long-description>y-axis offset moves the whole grid up/down</long-description>
          <tag name="param" line="128" description="&lt;p&gt;y offset in px&lt;/p&gt;" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="return" line="128" description="" type="\Chameleon\Patterns\Grid">
            <type>\Chameleon\Patterns\Grid</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="138" package="Default">
        <name>getBackgroundColor</name>
        <full_name>\Chameleon\Patterns\Grid::getBackgroundColor()</full_name>
        <docblock line="138">
          <description>Get background color</description>
          <long-description></long-description>
          <tag name="return" line="138" description="" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="148" package="Default">
        <name>setBackgroundColor</name>
        <full_name>\Chameleon\Patterns\Grid::setBackgroundColor()</full_name>
        <docblock line="148">
          <description>Set background color</description>
          <long-description></long-description>
          <tag name="param" line="148" description="" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="return" line="148" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="157" package="Default">
        <name>getLineColor</name>
        <full_name>\Chameleon\Patterns\Grid::getLineColor()</full_name>
        <docblock line="157">
          <description>Get grid line color</description>
          <long-description></long-description>
          <tag name="return" line="157" description="" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="167" package="Default">
        <name>setLineColor</name>
        <full_name>\Chameleon\Patterns\Grid::setLineColor()</full_name>
        <docblock line="167">
          <description>Set grid line color</description>
          <long-description></long-description>
          <tag name="param" line="167" description="" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="return" line="167" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="180" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\Grid::getColorAt()</full_name>
        <docblock line="180">
          <description>Get color in grid at the given position</description>
          <long-description>By default, all pixels have the background color, every nth pixel has the line color</long-description>
          <tag name="param" line="180" description="&lt;p&gt;x coordinate&lt;/p&gt;" type="integer" variable="$x">
            <type>integer</type>
          </tag>
          <tag name="param" line="180" description="&lt;p&gt;y coordinate&lt;/p&gt;" type="integer" variable="$y">
            <type>integer</type>
          </tag>
          <tag name="return" line="180" description="The color for the given position" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Patterns\Pattern::getColorAt()" refers="\Chameleon\Patterns\Pattern::getColorAt()" link="/classes/Chameleon.Patterns.Pattern.html#method_getColorAt"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Patterns" line="9" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\Pattern::getColorAt()</full_name>
        <docblock line="9">
          <description>Get color in this pattern at the given position</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Patterns\IPattern::getColorAt()" refers="\Chameleon\Patterns\IPattern::getColorAt()" link="/classes/Chameleon.Patterns.IPattern.html#method_getColorAt"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="16" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\Pattern::__construct()</full_name>
        <docblock line="16">
          <description>Pattern constructor.</description>
          <long-description></long-description>
          <tag name="param" line="16" description="&lt;p&gt;Number of colors used in this pattern&lt;/p&gt;" type="integer" variable="$colors">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$colors</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="26" package="Default">
        <name>setColor</name>
        <full_name>\Chameleon\Patterns\Pattern::setColor()</full_name>
        <docblock line="26">
          <description>Set color at index.</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;index&lt;/p&gt;" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="param" line="26" description="&lt;p&gt;color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="37" package="Default">
        <name>getColor</name>
        <full_name>\Chameleon\Patterns\Pattern::getColor()</full_name>
        <docblock line="37">
          <description>Get color at index</description>
          <long-description></long-description>
          <tag name="param" line="37" description="&lt;p&gt;index&lt;/p&gt;" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="return" line="37" description="color" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="11" code="PPC:ERR-50007">No summary for property $width</error>
      <error line="12" code="PPC:ERR-50007">No summary for property $height</error>
      <error line="13" code="PPC:ERR-50007">No summary for property $offsetX</error>
      <error line="14" code="PPC:ERR-50007">No summary for property $offsetY</error>
    </parse_markers>
  </file>
  <file path="Filters/ContrastFilter.php" generated-path="Filters.ContrastFilter.html" hash="9cdca9374507b773808aa7f7fb4bb677" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="8" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>ContrastFilter</name>
      <full_name>\Chameleon\Filters\ContrastFilter</full_name>
      <docblock line="8">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::$options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="9" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\ContrastFilter::__construct()</full_name>
        <docblock line="9">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$contrast</name>
          <default>0</default>
          <type>\Chameleon\Filters\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Default">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\ContrastFilter::getArg1()</full_name>
        <docblock line="19">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getArg1()" refers="\Chameleon\Filters\BuiltinFilter::getArg1()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getArg1"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\ContrastFilter::getFilterID()</full_name>
        <docblock line="28">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\ContrastFilter</error>
      <error line="9" code="PPC:ERR-50015">Argument $contrast is missing from the Docblock of __construct</error>
      <error line="9" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="19" code="PPC:ERR-50008">No summary for method getArg1()</error>
    </parse_markers>
  </file>
  <file path="Filters/BuiltinFilter.php" generated-path="Filters.BuiltinFilter.html" hash="eb36e589b2e1ef97688051e842661414" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Image">\Chameleon\Image</namespace-alias>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="false" abstract="true" namespace="Chameleon\Filters" line="13" package="Chameleon\Filters">
      <extends/>
      <implements>\Chameleon\Filters\IFilter</implements>
      <name>BuiltinFilter</name>
      <full_name>\Chameleon\Filters\BuiltinFilter</full_name>
      <docblock line="13">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="13" description="Chameleon\Filters"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::$options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="19" code="PPC:ERR-50015">Argument $options is missing from the Docblock of __construct</error>
      <error line="19" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="66" code="PPC:ERR-50015">Argument $image is missing from the Docblock of apply</error>
      <error line="66" code="PPC:ERR-50008">No summary for method apply()</error>
    </parse_markers>
  </file>
  <file path="Filters/PixelateFilter.php" generated-path="Filters.PixelateFilter.html" hash="713e327d89a75f1adb7512ca47dedb0f" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="7" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>PixelateFilter</name>
      <full_name>\Chameleon\Filters\PixelateFilter</full_name>
      <docblock line="7">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::$options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="8" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\PixelateFilter::__construct()</full_name>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$pixelate</name>
          <default>0</default>
          <type>\Chameleon\Filters\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="15" package="Default">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\PixelateFilter::getArg1()</full_name>
        <docblock line="15">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getArg1()" refers="\Chameleon\Filters\BuiltinFilter::getArg1()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getArg1"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Default">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\PixelateFilter::getArg2()</full_name>
        <docblock line="19">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getArg2()" refers="\Chameleon\Filters\BuiltinFilter::getArg2()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getArg2"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\PixelateFilter::getFilterID()</full_name>
        <docblock line="28">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\PixelateFilter</error>
      <error line="8" code="PPC:ERR-50015">Argument $pixelate is missing from the Docblock of __construct</error>
      <error line="8" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="15" code="PPC:ERR-50008">No summary for method getArg1()</error>
      <error line="19" code="PPC:ERR-50008">No summary for method getArg2()</error>
    </parse_markers>
  </file>
  <file path="Image.php" generated-path="Image.html" hash="bc516a9168671ea5de6cfaef6afd6f52" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ColorNotFoundException">\Chameleon\Exceptions\ColorNotFoundException</namespace-alias>
    <namespace-alias name="IFilter">\Chameleon\Filters\IFilter</namespace-alias>
    <namespace-alias name="IPrimitive">\Chameleon\Primitives\IPrimitive</namespace-alias>
    <namespace-alias name="Rectangle">\Chameleon\Primitives\Rectangle</namespace-alias>
    <namespace-alias name="IPattern">\Chameleon\Patterns\IPattern</namespace-alias>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <namespace-alias name="RGBColor">\Chameleon\Colors\RGBColor</namespace-alias>
    <namespace-alias name="Exception">\Exception</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon" line="18" package="Default">
      <extends/>
      <name>Image</name>
      <full_name>\Chameleon\Image</full_name>
      <docblock line="18">
        <description>Image class</description>
        <long-description></long-description>
        <tag name="package" line="18" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon" line="19" package="Default">
        <name>$imageResource</name>
        <full_name>\Chameleon\Image::$imageResource</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon" line="20" package="Default">
        <name>$colors</name>
        <full_name>\Chameleon\Image::$colors</full_name>
        <default>array()</default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="31" package="Default">
        <name>create</name>
        <full_name>\Chameleon\Image::create()</full_name>
        <docblock line="31">
          <description>Create an image from scratch</description>
          <long-description></long-description>
          <tag name="api" line="31" description=""/>
          <tag name="param" line="31" description="&lt;p&gt;width in px&lt;/p&gt;" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="param" line="31" description="&lt;p&gt;height in px&lt;/p&gt;" type="integer" variable="$height">
            <type>integer</type>
          </tag>
          <tag name="return" line="31" description="" type="\Chameleon\Image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$height</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="47" package="Default">
        <name>fromFile</name>
        <full_name>\Chameleon\Image::fromFile()</full_name>
        <docblock line="47">
          <description>Load an image from a file</description>
          <long-description></long-description>
          <tag name="api" line="47" description=""/>
          <tag name="param" line="47" description="&lt;p&gt;Path to the file&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="47" description="" type="\Chameleon\Image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="throws" line="47" description="If file not found" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="84" package="Default">
        <name>__destruct</name>
        <full_name>\Chameleon\Image::__destruct()</full_name>
        <docblock line="84">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="99" package="Default">
        <name>getWidth</name>
        <full_name>\Chameleon\Image::getWidth()</full_name>
        <docblock line="99">
          <description>Get image width in px</description>
          <long-description></long-description>
          <tag name="api" line="99" description=""/>
          <tag name="return" line="99" description="The width" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="110" package="Default">
        <name>getHeight</name>
        <full_name>\Chameleon\Image::getHeight()</full_name>
        <docblock line="110">
          <description>Get image height in px</description>
          <long-description></long-description>
          <tag name="api" line="110" description=""/>
          <tag name="return" line="110" description="The height" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="124" package="Default">
        <name>outputAs</name>
        <full_name>\Chameleon\Image::outputAs()</full_name>
        <docblock line="124">
          <description>Output image</description>
          <long-description></long-description>
          <tag name="api" line="124" description=""/>
          <tag name="param" line="124" description="&lt;p&gt;int One of the supported IMG_* constants&lt;/p&gt;" type="" variable="$type"/>
          <tag name="return" line="124" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="124" description="If using an unsupported image file format" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="149" package="Default">
        <name>getImageResource</name>
        <full_name>\Chameleon\Image::getImageResource()</full_name>
        <docblock line="149">
          <description>Get the underlying GD image resource</description>
          <long-description></long-description>
          <tag name="api" line="149" description=""/>
          <tag name="return" line="149" description="" type="resource">
            <type>resource</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="161" package="Default">
        <name>registerColor</name>
        <full_name>\Chameleon\Image::registerColor()</full_name>
        <docblock line="161">
          <description>Register a color with this image</description>
          <long-description></long-description>
          <tag name="api" line="161" description=""/>
          <tag name="param" line="161" description="&lt;p&gt;The color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="return" line="161" description="The internal GD color id" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="182" package="Default">
        <name>isColorRegistered</name>
        <full_name>\Chameleon\Image::isColorRegistered()</full_name>
        <docblock line="182">
          <description>Check if a color is registered with this image</description>
          <long-description></long-description>
          <tag name="api" line="182" description=""/>
          <tag name="param" line="182" description="&lt;p&gt;The color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="return" line="182" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="196" package="Default">
        <name>getRegisteredColor</name>
        <full_name>\Chameleon\Image::getRegisteredColor()</full_name>
        <docblock line="196">
          <description>Get the underlying GD color</description>
          <long-description></long-description>
          <tag name="api" line="196" description=""/>
          <tag name="param" line="196" description="&lt;p&gt;The high level color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="return" line="196" description="The low level color" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="196" description="If color is not registered with this image" type="\Chameleon\Exceptions\ColorNotFoundException">
            <type>\Chameleon\Exceptions\ColorNotFoundException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="213" package="Default">
        <name>registerColorIfUnknown</name>
        <full_name>\Chameleon\Image::registerColorIfUnknown()</full_name>
        <docblock line="213">
          <description>Register a color only if it has not been registered yet</description>
          <long-description></long-description>
          <tag name="param" line="213" description="" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="return" line="213" description="was unknown?" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="deprecated" line="213" description=""/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="233" package="Default">
        <name>setBackgroundPattern</name>
        <full_name>\Chameleon\Image::setBackgroundPattern()</full_name>
        <docblock line="233">
          <description>Fill the whole image with the given pattern.</description>
          <long-description>Only call this before drawing other elements onto the image unless you want them to be affected
by the pattern.</long-description>
          <tag name="api" line="233" description=""/>
          <tag name="param" line="233" description="&lt;p&gt;The pattern&lt;/p&gt;" type="\Chameleon\Patterns\IPattern" variable="$pattern">
            <type>\Chameleon\Patterns\IPattern</type>
          </tag>
          <tag name="return" line="233" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$pattern</name>
          <default></default>
          <type>\Chameleon\Patterns\IPattern</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="249" package="Default">
        <name>getPixel</name>
        <full_name>\Chameleon\Image::getPixel()</full_name>
        <docblock line="249">
          <description>Get color of a specific pixel</description>
          <long-description></long-description>
          <tag name="api" line="249" description=""/>
          <tag name="param" line="249" description="&lt;p&gt;X coordinate&lt;/p&gt;" type="integer" variable="$xCoordinate">
            <type>integer</type>
          </tag>
          <tag name="param" line="249" description="&lt;p&gt;Y coordinate&lt;/p&gt;" type="integer" variable="$yCoordinate">
            <type>integer</type>
          </tag>
          <tag name="return" line="249" description="The color" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xCoordinate</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$yCoordinate</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="270" package="Default">
        <name>setPixel</name>
        <full_name>\Chameleon\Image::setPixel()</full_name>
        <docblock line="270">
          <description>Set the color of a specific pixel.</description>
          <long-description>Make sure that the color is registered on the image! No additional tests will be performed!</long-description>
          <tag name="api" line="270" description=""/>
          <tag name="param" line="270" description="&lt;p&gt;The x coordinate&lt;/p&gt;" type="integer" variable="$xCoordinate">
            <type>integer</type>
          </tag>
          <tag name="param" line="270" description="&lt;p&gt;The y coordinate&lt;/p&gt;" type="integer" variable="$yCoordinate">
            <type>integer</type>
          </tag>
          <tag name="param" line="270" description="&lt;p&gt;The color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="return" line="270" description="" type="\Chameleon\Image">
            <type>\Chameleon\Image</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xCoordinate</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$yCoordinate</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="284" package="Default">
        <name>filter</name>
        <full_name>\Chameleon\Image::filter()</full_name>
        <docblock line="284">
          <description>Apply a filter to the image.</description>
          <long-description></long-description>
          <tag name="api" line="284" description=""/>
          <tag name="param" line="284" description="&lt;p&gt;The filter to be applied&lt;/p&gt;" type="\Chameleon\Filters\IFilter" variable="$filter">
            <type>\Chameleon\Filters\IFilter</type>
          </tag>
          <tag name="return" line="284" description="self" type="\Chameleon\Image">
            <type>\Chameleon\Image</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default></default>
          <type>\Chameleon\Filters\IFilter</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="298" package="Default">
        <name>draw</name>
        <full_name>\Chameleon\Image::draw()</full_name>
        <docblock line="298">
          <description>Draw one or more primitives onto the image</description>
          <long-description></long-description>
          <tag name="api" line="298" description=""/>
          <tag name="param" line="298" description="&lt;p&gt;Any number of primitives&lt;/p&gt;" type="\Chameleon\Primitives\IPrimitive|array&lt;mixed,\Chameleon\Primitives\IPrimitive&gt;" variable="$primitives">
            <type>\Chameleon\Primitives\IPrimitive</type>
            <type>array&lt;mixed,\Chameleon\Primitives\IPrimitive&gt;</type>
          </tag>
          <tag name="return" line="298" description="" type="\Chameleon\Image">
            <type>\Chameleon\Image</type>
          </tag>
        </docblock>
        <argument line="298" by_reference="false">
          <name>$primitives</name>
          <default></default>
          <type>\Chameleon\Primitives\IPrimitive|array&lt;mixed,\Chameleon\Primitives\IPrimitive&gt;</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="84" code="PPC:ERR-50008">No summary for method __destruct()</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $imageResource</error>
      <error line="20" code="PPC:ERR-50007">No summary for property $colors</error>
    </parse_markers>
  </file>
  <package name="Chameleon" full_name="Chameleon">
    <package name="Filters" full_name="Chameleon\Filters"/>
    <package name="Primitives" full_name="Chameleon\Primitives"/>
    <package name="Transformations" full_name="Chameleon\Transformations"/>
  </package>
  <package name="Default" full_name="Default"/>
  <package name="global" full_name="global"/>
  <namespace name="Chameleon" full_name="Chameleon">
    <namespace name="Colors" full_name="Chameleon\Colors"/>
    <namespace name="Exceptions" full_name="Chameleon\Exceptions"/>
    <namespace name="Filters" full_name="Chameleon\Filters"/>
    <namespace name="Patterns" full_name="Chameleon\Patterns"/>
    <namespace name="Primitives" full_name="Chameleon\Primitives"/>
    <namespace name="Transformations" full_name="Chameleon\Transformations"/>
  </namespace>
  <deprecated count="2"/>
</project>
