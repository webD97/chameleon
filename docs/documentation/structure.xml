<?xml version="1.0" encoding="utf-8"?>
<project title="API Documentation" version="2.8.5">
  <partials/>
  <file path="Options.php" generated-path="Options.html" hash="05276b19848013a68de4ab9aa58e2aab" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJydUsFugkAQvfsV78ABTcX0Wqs28dBjDz0SYsZlFSIuZHcxNa3/3t0FFCy2pnuAhZk38968eV4USTEAEHOWkeS+0jJleqWPBVezx+F0YIMQtOeqIMaxTMw147moI5PRyL0xwjIjpfBW6DQXCutSxBlXICiukW+Q14FNLkHCfHJJ9g9IYceP4wNlJUdBqVRwNMQWOsc+/eDxsOnxYkjsaNviUUcm7s06FD6rmDmFTA+kObyYNNXMO+yr6g2QmYeWJdO5DFrxdqohImkPkpKOYfQlyiwLIwRB4DkFrdTJhUW5zlKGTSmYE75anRv5C1fpUmDYYm+Pp5NUYTyHVYAZwqglwx4zVk4sgV/h7VTd7brQz1yXahzAbA7PudCH6ZAwllaz8i3woYFNf6BOg/6v000PXu22uNpwRf8woF4Uz25o7Z/b1lsoyXUpRbVVTb7rc5dj27Pudt/rcdU9OpaFLjOa3jGB9/9PoCfs3a9O9ao7u4snHPI0/m0xa5VmPytMW657fgM0LSr9</source>
  </file>
  <file path="Colors/HSLAColor.php" generated-path="Colors.HSLAColor.html" hash="bbf31686ee22741215ec20015d195bfb" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="HSLColor">\Chameleon\Colors\HSLColor</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="8" package="Default">
      <extends>\Chameleon\Colors\HSLColor</extends>
      <name>HSLAColor</name>
      <full_name>\Chameleon\Colors\HSLAColor</full_name>
      <docblock line="8">
        <description>Color Class for HSL colors</description>
        <long-description>Represents a color based on the HSL (hue, saturation, value) system</long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Colors\HSLColor" refers="\Chameleon\Colors\HSLColor" link="/classes/Chameleon.Colors.HSLColor.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="14" package="Default">
        <name>$alpha</name>
        <full_name>\Chameleon\Colors\HSLAColor::alpha</full_name>
        <default></default>
        <docblock line="14">
          <description>The alpha channel value [0, 127]</description>
          <long-description></long-description>
          <tag name="var" line="14" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="14" package="Default">
        <name>$hue</name>
        <full_name>\Chameleon\Colors\HSLColor::hue</full_name>
        <default></default>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="15" package="Default">
        <name>$saturation</name>
        <full_name>\Chameleon\Colors\HSLColor::saturation</full_name>
        <default></default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="16" package="Default">
        <name>$lightness</name>
        <full_name>\Chameleon\Colors\HSLColor::lightness</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="18" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\HSLColor::red</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="19" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\HSLColor::green</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="20" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\HSLColor::blue</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="24" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\HSLAColor::__construct()</full_name>
        <docblock line="24">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="24" description="" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
          <tag name="param" line="24" description="" type="float" variable="$saturation">
            <type>float</type>
          </tag>
          <tag name="param" line="24" description="" type="float" variable="$lightness">
            <type>float</type>
          </tag>
          <tag name="param" line="24" description="&lt;p&gt;RGB alpha channel value [0, 127]&lt;/p&gt;" type="float|integer" variable="$alpha">
            <type>float</type>
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\HSLColor::__construct()" refers="\Chameleon\Colors\HSLColor::__construct()" link="/classes/Chameleon.Colors.HSLColor.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$lightness</name>
          <default></default>
          <type>float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default></default>
          <type>float|integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="29" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\HSLAColor::fromRGBA()</full_name>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\HSLColor::fromRGBA()" refers="\Chameleon\Colors\HSLColor::fromRGBA()" link="/classes/Chameleon.Colors.HSLColor.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="41" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\HSLAColor::__toString()</full_name>
        <docblock line="41">
          <description>Get string representation of this color</description>
          <long-description>Format: hsla(hue, saturation, lightness, alpha)</long-description>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\HSLColor::__toString()" refers="\Chameleon\Colors\HSLColor::__toString()" link="/classes/Chameleon.Colors.HSLColor.html#method___toString"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="50" package="Default">
        <name>getAlpha</name>
        <full_name>\Chameleon\Colors\HSLAColor::getAlpha()</full_name>
        <docblock line="50">
          <description>Get RGB alpha channel value</description>
          <long-description></long-description>
          <tag name="return" line="50" description="Alpha channel value [0, 1]" type="float">
            <type>float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="62" package="Default">
        <name>setAlpha</name>
        <full_name>\Chameleon\Colors\HSLAColor::setAlpha()</full_name>
        <docblock line="62">
          <description>Set RGB alpha channel value</description>
          <long-description></long-description>
          <tag name="param" line="62" description="&lt;p&gt;Alpha channel value [0, 1]&lt;/p&gt;" type="float" variable="$alpha">
            <type>float</type>
          </tag>
          <tag name="return" line="62" description="" type="\Chameleon\Colors\HSLAColor">
            <type>\Chameleon\Colors\HSLAColor</type>
          </tag>
          <tag name="throws" line="62" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default></default>
          <type>float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="72" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\HSLAColor::getRGBA()</full_name>
        <docblock line="72">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\HSLColor::getRGBA()" refers="\Chameleon\Colors\HSLColor::getRGBA()" link="/classes/Chameleon.Colors.HSLColor.html#method_getRGBA"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="26" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\HSLColor::__construct()</full_name>
        <docblock line="26">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;Hue value [0, 359]&lt;/p&gt;" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$lightness</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="37" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\HSLColor::fromRGBA()</full_name>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="37" description="" type="\Chameleon\Colors\RGBAColor" variable="$rgba">
            <type>\Chameleon\Colors\RGBAColor</type>
          </tag>
          <tag name="return" line="37" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="86" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\HSLColor::__toString()</full_name>
        <docblock line="86">
          <description></description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="96" package="Default">
        <name>getHue</name>
        <full_name>\Chameleon\Colors\HSLColor::getHue()</full_name>
        <docblock line="96">
          <description>Get hue value</description>
          <long-description>Returns the hue value of this color</long-description>
          <tag name="return" line="96" description="Hue value [0, 359]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="110" package="Default">
        <name>setHue</name>
        <full_name>\Chameleon\Colors\HSLColor::setHue()</full_name>
        <docblock line="110">
          <description>Set hue value</description>
          <long-description>Sets the hue value of this color</long-description>
          <tag name="param" line="110" description="&lt;p&gt;The hue value [0, 359]&lt;/p&gt;" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
          <tag name="return" line="110" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
          <tag name="throws" line="110" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="127" package="Default">
        <name>getSaturation</name>
        <full_name>\Chameleon\Colors\HSLColor::getSaturation()</full_name>
        <docblock line="127">
          <description>Get saturation value</description>
          <long-description>Returns the saturation value of this color</long-description>
          <tag name="return" line="127" description="saturation value [0, 1]" type="float">
            <type>float</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="141" package="Default">
        <name>setSaturation</name>
        <full_name>\Chameleon\Colors\HSLColor::setSaturation()</full_name>
        <docblock line="141">
          <description>Set saturation value</description>
          <long-description>Sets the saturation value of this color</long-description>
          <tag name="param" line="141" description="&lt;p&gt;The saturation value [0, 1]&lt;/p&gt;" type="float|integer" variable="$saturation">
            <type>float</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="141" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
          <tag name="throws" line="141" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>float|integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="158" package="Default">
        <name>getLightness</name>
        <full_name>\Chameleon\Colors\HSLColor::getLightness()</full_name>
        <docblock line="158">
          <description>Get lightness</description>
          <long-description>Returns the lightness of this color</long-description>
          <tag name="return" line="158" description="lightness [0, 1]" type="float">
            <type>float</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="172" package="Default">
        <name>setLightness</name>
        <full_name>\Chameleon\Colors\HSLColor::setLightness()</full_name>
        <docblock line="172">
          <description>Set lightness</description>
          <long-description>Sets the lightness of this color</long-description>
          <tag name="param" line="172" description="&lt;p&gt;The lightness [0, 1]&lt;/p&gt;" type="float|integer" variable="$lightness">
            <type>float</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="172" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
          <tag name="throws" line="172" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$lightness</name>
          <default></default>
          <type>float|integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Chameleon\Colors" line="183" package="Default">
        <name>makeRGB</name>
        <full_name>\Chameleon\Colors\HSLColor::makeRGB()</full_name>
        <docblock line="183">
          <description></description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Chameleon\Colors" line="201" package="Default">
        <name>hue2rgb</name>
        <full_name>\Chameleon\Colors\HSLColor::hue2rgb()</full_name>
        <docblock line="201">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$p</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$q</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$t</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="221" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\HSLColor::getRGBA()</full_name>
        <docblock line="221">
          <description></description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="225" package="Default">
        <name>lighten</name>
        <full_name>\Chameleon\Colors\HSLColor::lighten()</full_name>
        <docblock line="225">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="235" package="Default">
        <name>darken</name>
        <full_name>\Chameleon\Colors\HSLColor::darken()</full_name>
        <docblock line="235">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Colors\HSLAColor</error>
      <error line="29" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="29" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
      <error line="72" code="PPC:ERR-50008">No summary for method getRGBA()</error>
    </parse_markers>
    <source>eJyVVU1v2zAMvedXcEEOduAt2y4DkrVdGmztoUCBZthlGQrFpWNjjmRIclug7X+fPmxFduzW0yFQRIp875Giv54VaTECtSjZoyhIjLBK1TZHRjcrljMuFiPjUArf9P0xxkJmjIrNL5KXeF3K6+SclfROONOi454NublcX5ndKy43F+fLysc4xTkRAtRFewr4KFFlgzoUPBk3vWbTqdvDFH6mCCQvUgJxSijFHO41ZPj9MYJPn7/88Xz9a9/uCYeMSu9s5vYFz+6JRJiYwBXEjtwrgzpWOklexpLxvmQF4WSv08EkLbHDlOSMKKMgsuREy9vvk2e7VFIUos/l2eSxmiidh6rj0S+3eRZDUtJYQ4HbW0cxqDlEx5CjI4TuxEAIvSKaNIQjlfO5H96GbgQ9hAsXjfsTmWYC3p+CQLnUCYIqz8HtZdQmJaQK63FLONvrZgxcR8KE77ZHYCepyOHEYXbXrHMTGEeFngLFh0NHByaAArtDeVliEEbgnawd35bhquZuznWuymAJhzDTZexm3GrWC5SKPc/oTgEsOApFxKQEloCRMtZA/Sv+/gfjeyLnoLCRwFTJL5JXcluDvpdQaWOBDOw+ydbGXdGd1xSeuhQfG3Bj+HDojVpudTaOoG3yde/28ArQ7VAXQhnD8dA69DzLN0Szj2nZ95yHPWYP8ryK2Kml41jNwLeJrf+fWGOw2XuD6HWp455awyhTzh4E9H7GBmnmBkxznKlmxDxpyZclELxz4sUpxn9vCN1hNZwi0FzC9njRy0A1U6MXbTA2QVQbNqI1x89L41/3yLRanxx/4fTyO+C1Wer3lBmGWpLDHO1sK03PuQQOD8e7yHtWHJF6/7e5+So0wU+PJp/9PTv9Bwnucck=</source>
  </file>
  <file path="Colors/RGBColor.php" generated-path="Colors.RGBColor.html" hash="fdb19a2fea0cd10fa97d2fde8b3bd1dd" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="6" package="Default">
      <extends>\Chameleon\Colors\Color</extends>
      <name>RGBColor</name>
      <full_name>\Chameleon\Colors\RGBColor</full_name>
      <docblock line="6">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="6" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="12" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\RGBColor::red</full_name>
        <default></default>
        <docblock line="12">
          <description>The red channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="12" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="19" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\RGBColor::green</full_name>
        <default></default>
        <docblock line="19">
          <description>The green channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="19" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="26" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\RGBColor::blue</full_name>
        <default></default>
        <docblock line="26">
          <description>The blue channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="26" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="35" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\RGBColor::__construct()</full_name>
        <docblock line="35">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="35" description="&lt;p&gt;The red channel value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;The green channel value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;The blue channel value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="48" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\RGBColor::__toString()</full_name>
        <docblock line="48">
          <description>Get string representation of this color</description>
          <long-description>Format: rgb(red, green, blue)</long-description>
          <tag name="return" line="48" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="57" package="Default">
        <name>getRed</name>
        <full_name>\Chameleon\Colors\RGBColor::getRed()</full_name>
        <docblock line="57">
          <description>Get red channel value</description>
          <long-description></long-description>
          <tag name="return" line="57" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="69" package="Default">
        <name>setRed</name>
        <full_name>\Chameleon\Colors\RGBColor::setRed()</full_name>
        <docblock line="69">
          <description>Set the red channel value</description>
          <long-description></long-description>
          <tag name="param" line="69" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="return" line="69" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="throws" line="69" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="84" package="Default">
        <name>getGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::getGreen()</full_name>
        <docblock line="84">
          <description>Get green channel value</description>
          <long-description></long-description>
          <tag name="return" line="84" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="96" package="Default">
        <name>setGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::setGreen()</full_name>
        <docblock line="96">
          <description>Set green channel value</description>
          <long-description></long-description>
          <tag name="param" line="96" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="return" line="96" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="throws" line="96" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="111" package="Default">
        <name>getBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::getBlue()</full_name>
        <docblock line="111">
          <description>Get blue channel value</description>
          <long-description></long-description>
          <tag name="return" line="111" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="123" package="Default">
        <name>setBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::setBlue()</full_name>
        <docblock line="123">
          <description>Set blue channel value</description>
          <long-description></long-description>
          <tag name="param" line="123" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
          <tag name="return" line="123" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="throws" line="123" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="133" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\RGBColor::getRGBA()</full_name>
        <docblock line="133">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="137" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\RGBColor::fromRGBA()</full_name>
        <docblock line="137">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="141" package="Default">
        <name>lighten</name>
        <full_name>\Chameleon\Colors\RGBColor::lighten()</full_name>
        <docblock line="141">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="160" package="Default">
        <name>darken</name>
        <full_name>\Chameleon\Colors\RGBColor::darken()</full_name>
        <docblock line="160">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="6" code="PPC:ERR-50005">No summary for class \Chameleon\Colors\RGBColor</error>
      <error line="133" code="PPC:ERR-50008">No summary for method getRGBA()</error>
      <error line="137" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="137" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
      <error line="141" code="PPC:ERR-50015">Argument $percentage is missing from the Docblock of lighten</error>
      <error line="141" code="PPC:ERR-50008">No summary for method lighten()</error>
      <error line="160" code="PPC:ERR-50015">Argument $percentage is missing from the Docblock of darken</error>
      <error line="160" code="PPC:ERR-50008">No summary for method darken()</error>
    </parse_markers>
    <source>eJzNV8lu2zAQvecrpkYOcqosKJBLEietg9boKUBc9NIUgSJTCyJTAkUlAYr+ezkkLZPaZcRAeTAkajjz5vHNkL66yaLsAMSg3prkmecTuI3EY0JS+nCbJinLLw+kQZGbn76++STjcUrzh59eUpC7gt8F87Sgq7z8pBf6iZfncL+YS3dA3jgRVqDe/kgTHKdHR+UzHMGPiAAjK/Ajj1KSwAtGgV9nLnw6P/9tWJqLPr94DGLKjbnT8jljKSc+Fz4PhWMNriVyyAih+4ktXXdHf8JwewmOnttj38qd8sWmclb4PGVt0TKPeWuMJ6kcvlfWSsXxCLat1ZKj4WQZbBRPSexDUFAfRQqPj2XCziYj10DobuNNDbniOORRnMPxNeSE35OVg0unl60mC3TnKK8dZnMRyVHxtkZ/WzdtQTgI+DENxR5kjOSEck9mlgYg3fpYaeYS8/lbytYevwAWPjkyc520jN+2/4zwglEddiDLPF1Kc2cKFxvANp3a6wShTOBkSwpq6wQmLlizSjX1eSkIMT2dDKWvpt2evFEQKL0d1BYqpSAH6KWRADPvISksRQq8qQRHlO+wLqMBbnq59Y1HLH3NofU0GESPLqQNNCkVkgQVnuIAnA8lS35E/Od7j4bEUbWrkphWqxWHBAmUvLbjdCbCidCU5cuuVmMrcFg6nVVPl+rGDhVlQ1PcqyxVdxomTH2G9SeyHJdI4+nw/0hTUbSFV1VYuy51U30nZdreqto035p1qrid1e8iOHbRav0M3qtU5Qk5TKnqwtOfxXJUFk33kFEyxaa2F4lKalovLO0CRet306flbFjrlDTOahfU6pY2bmXTGbuYf5EKwYfqPw3DKeZTmjhmI3cr5eLaWEV6zbczDSbHO5iBKWDpWoLaAjoU9xyvSrWNS8NCQwlEXx5cMKd047YnVYl0QiyxJXEYif9kTpCknhBORpiPd8iQIIHfm9izTryPM9xnIWJj5WVNdtaSa6mMBpVVjlJhNUw+qqOVSAZCUauuesFs+mUDHPOtQ9kjOZJr+nHpouljaXQBrTz2vLsejsfr4UpUU78azsZo4XhHLXQD2SihBsV869DBSG60DroxaRV0s9OmAfV7c/0P73Z6ug==</source>
  </file>
  <file path="Colors/RGBAColor.php" generated-path="Colors.RGBAColor.html" hash="adfcd6eeb39acb487eca530263ff52de" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="RGBColor">\Chameleon\Colors\RGBColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="7" package="Default">
      <extends>\Chameleon\Colors\RGBColor</extends>
      <name>RGBAColor</name>
      <full_name>\Chameleon\Colors\RGBAColor</full_name>
      <docblock line="7">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Colors\RGBColor" refers="\Chameleon\Colors\RGBColor" link="/classes/Chameleon.Colors.RGBColor.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="13" package="Default">
        <name>$alpha</name>
        <full_name>\Chameleon\Colors\RGBAColor::alpha</full_name>
        <default></default>
        <docblock line="13">
          <description>The alpha channel value [0, 127]</description>
          <long-description></long-description>
          <tag name="var" line="13" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="12" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\RGBColor::red</full_name>
        <default></default>
        <docblock line="12">
          <description>The red channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="12" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="19" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\RGBColor::green</full_name>
        <default></default>
        <docblock line="19">
          <description>The green channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="19" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="26" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\RGBColor::blue</full_name>
        <default></default>
        <docblock line="26">
          <description>The blue channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="26" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="23" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\RGBAColor::__construct()</full_name>
        <docblock line="23">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="23" description="&lt;p&gt;RGB red channel value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="param" line="23" description="&lt;p&gt;RGB green channel value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="param" line="23" description="&lt;p&gt;RGB blue channel value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
          <tag name="param" line="23" description="&lt;p&gt;RGB alpha channel value [0, 127]&lt;/p&gt;" type="integer" variable="$alpha">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\RGBColor::__construct()" refers="\Chameleon\Colors\RGBColor::__construct()" link="/classes/Chameleon.Colors.RGBColor.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="37" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\RGBAColor::__toString()</full_name>
        <docblock line="37">
          <description>Get string representation of this color</description>
          <long-description>Format: rgba(red, green, blue, alpha)</long-description>
          <tag name="return" line="37" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\RGBColor::__toString()" refers="\Chameleon\Colors\RGBColor::__toString()" link="/classes/Chameleon.Colors.RGBColor.html#method___toString"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="46" package="Default">
        <name>getAlpha</name>
        <full_name>\Chameleon\Colors\RGBAColor::getAlpha()</full_name>
        <docblock line="46">
          <description>Get RGB alpha channel value</description>
          <long-description></long-description>
          <tag name="return" line="46" description="RGB alpha channel avalue [0, 127]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="56" package="Default">
        <name>setAlpha</name>
        <full_name>\Chameleon\Colors\RGBAColor::setAlpha()</full_name>
        <docblock line="56">
          <description>Set RGB alpha channel value</description>
          <long-description></long-description>
          <tag name="param" line="56" description="&lt;p&gt;RGB alpha channel avalue [0, 127]&lt;/p&gt;" type="integer" variable="$alpha">
            <type>integer</type>
          </tag>
          <tag name="return" line="56" description="" type="\Chameleon\Colors\RGBAColor">
            <type>\Chameleon\Colors\RGBAColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="66" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\RGBAColor::getRGBA()</full_name>
        <docblock line="66">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\RGBColor::getRGBA()" refers="\Chameleon\Colors\RGBColor::getRGBA()" link="/classes/Chameleon.Colors.RGBColor.html#method_getRGBA"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="70" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\RGBAColor::fromRGBA()</full_name>
        <docblock line="70">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\RGBColor::fromRGBA()" refers="\Chameleon\Colors\RGBColor::fromRGBA()" link="/classes/Chameleon.Colors.RGBColor.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="35" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\RGBColor::__construct()</full_name>
        <docblock line="35">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="35" description="&lt;p&gt;The red channel value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;The green channel value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;The blue channel value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="48" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\RGBColor::__toString()</full_name>
        <docblock line="48">
          <description>Get string representation of this color</description>
          <long-description>Format: rgb(red, green, blue)</long-description>
          <tag name="return" line="48" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="57" package="Default">
        <name>getRed</name>
        <full_name>\Chameleon\Colors\RGBColor::getRed()</full_name>
        <docblock line="57">
          <description>Get red channel value</description>
          <long-description></long-description>
          <tag name="return" line="57" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="69" package="Default">
        <name>setRed</name>
        <full_name>\Chameleon\Colors\RGBColor::setRed()</full_name>
        <docblock line="69">
          <description>Set the red channel value</description>
          <long-description></long-description>
          <tag name="param" line="69" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="return" line="69" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="throws" line="69" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="84" package="Default">
        <name>getGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::getGreen()</full_name>
        <docblock line="84">
          <description>Get green channel value</description>
          <long-description></long-description>
          <tag name="return" line="84" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="96" package="Default">
        <name>setGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::setGreen()</full_name>
        <docblock line="96">
          <description>Set green channel value</description>
          <long-description></long-description>
          <tag name="param" line="96" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="return" line="96" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="throws" line="96" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="111" package="Default">
        <name>getBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::getBlue()</full_name>
        <docblock line="111">
          <description>Get blue channel value</description>
          <long-description></long-description>
          <tag name="return" line="111" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="123" package="Default">
        <name>setBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::setBlue()</full_name>
        <docblock line="123">
          <description>Set blue channel value</description>
          <long-description></long-description>
          <tag name="param" line="123" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
          <tag name="return" line="123" description="" type="\Chameleon\Colors\RGBAColor">
            <type>\Chameleon\Colors\RGBAColor</type>
          </tag>
          <tag name="throws" line="123" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="133" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\RGBColor::getRGBA()</full_name>
        <docblock line="133">
          <description></description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="137" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\RGBColor::fromRGBA()</full_name>
        <docblock line="137">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="141" package="Default">
        <name>lighten</name>
        <full_name>\Chameleon\Colors\RGBColor::lighten()</full_name>
        <docblock line="141">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="160" package="Default">
        <name>darken</name>
        <full_name>\Chameleon\Colors\RGBColor::darken()</full_name>
        <docblock line="160">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Colors\RGBAColor</error>
      <error line="66" code="PPC:ERR-50008">No summary for method getRGBA()</error>
      <error line="70" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="70" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
    </parse_markers>
    <source>eJydVU1v2zAMvfdXcEYOduCtW4FiQLK1a4ItxwLpsMtSFIpCx8YcyZDktMCw/17rI7bsxGkyHRKCIh/JR9L6clukxQVUh5ENyoJQhGlaiTlytpjynAs5vjAGpfSvvr9QLFTGmVz8InmJ96W6Tya8ZCtZX40P+FnIxXw2MZLDpjmREirlndECviiskGBnBn+NmT6Xw2EtwxB+pggkL1ICNCWMYQ5bnQ78/hjDp6vPj56t7/ZtSwRkTHm6y1ouRLYlCmFggF2KB2JPTda04kCJkiou+oIVRJCNDgcDgStdFej//Yyvrq8f+zzXApEZXyud573URtrZCOf5Wn6184lMe1SWyzyjkJSM6omAp6earnDHR+zVFzfZxl7wyBsAfQYqzSS8vwGJao6rUMNE416TmYYObYQjZpMqamhiHzG60/mELq3G7F/vlMxQQVVxxtZV0wuBEpkihgyegAGmesR9F1/+wcWGqBGI9ZKEhi1HlOXI5tE3eAJVKZgLf2KDFH8w5mEEo13ibfYdamBSCuBDw8/atiOqdEEM3Svbhp5LQ37PneXcXEbBqZz3zOsbVOmZ2/ck/zHqXt4jA3uQxLpM9615u7aH82s7YZf7K2ymCPPkpMrrLfEXeGT8OyRkCYTvagpoivTPnLA1uv2KwaYTdfdfH5UK/gwMn6H3AQoDA1NNVAevvd4e1/q0WwJf99+Bbv8Otu3APOgHzoxD89L1D8UxUKm/IB52IvjGgDfAA72dXd4cviattgyNpb+9Mfgqt7Vtpd3Wts5Ne+ujaH9vb14BJg07SA==</source>
  </file>
  <file path="Colors/HSLColor.php" generated-path="Colors.HSLColor.html" hash="aa7d2cadd7b7c487d27214254ff2252e" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="13" package="Default">
      <extends>\Chameleon\Colors\Color</extends>
      <name>HSLColor</name>
      <full_name>\Chameleon\Colors\HSLColor</full_name>
      <docblock line="13">
        <description>Color Class for HSL colors</description>
        <long-description>Represents a color based on the HSL (hue, saturation, value) system</long-description>
        <tag name="api" line="13" description=""/>
        <tag name="package" line="13" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="14" package="Default">
        <name>$hue</name>
        <full_name>\Chameleon\Colors\HSLColor::hue</full_name>
        <default></default>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="15" package="Default">
        <name>$saturation</name>
        <full_name>\Chameleon\Colors\HSLColor::saturation</full_name>
        <default></default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="16" package="Default">
        <name>$lightness</name>
        <full_name>\Chameleon\Colors\HSLColor::lightness</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="18" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\HSLColor::red</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="19" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\HSLColor::green</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="20" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\HSLColor::blue</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="26" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\HSLColor::__construct()</full_name>
        <docblock line="26">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;Hue value [0, 359]&lt;/p&gt;" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$lightness</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="37" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\HSLColor::fromRGBA()</full_name>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
          <tag name="param" line="37" description="" type="\Chameleon\Colors\RGBAColor" variable="$rgba">
            <type>\Chameleon\Colors\RGBAColor</type>
          </tag>
          <tag name="return" line="37" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="86" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\HSLColor::__toString()</full_name>
        <docblock line="86">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="96" package="Default">
        <name>getHue</name>
        <full_name>\Chameleon\Colors\HSLColor::getHue()</full_name>
        <docblock line="96">
          <description>Get hue value</description>
          <long-description>Returns the hue value of this color</long-description>
          <tag name="return" line="96" description="Hue value [0, 359]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="110" package="Default">
        <name>setHue</name>
        <full_name>\Chameleon\Colors\HSLColor::setHue()</full_name>
        <docblock line="110">
          <description>Set hue value</description>
          <long-description>Sets the hue value of this color</long-description>
          <tag name="param" line="110" description="&lt;p&gt;The hue value [0, 359]&lt;/p&gt;" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
          <tag name="return" line="110" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
          <tag name="throws" line="110" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="127" package="Default">
        <name>getSaturation</name>
        <full_name>\Chameleon\Colors\HSLColor::getSaturation()</full_name>
        <docblock line="127">
          <description>Get saturation value</description>
          <long-description>Returns the saturation value of this color</long-description>
          <tag name="return" line="127" description="saturation value [0, 1]" type="float">
            <type>float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="141" package="Default">
        <name>setSaturation</name>
        <full_name>\Chameleon\Colors\HSLColor::setSaturation()</full_name>
        <docblock line="141">
          <description>Set saturation value</description>
          <long-description>Sets the saturation value of this color</long-description>
          <tag name="param" line="141" description="&lt;p&gt;The saturation value [0, 1]&lt;/p&gt;" type="float|integer" variable="$saturation">
            <type>float</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="141" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
          <tag name="throws" line="141" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>float|integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="158" package="Default">
        <name>getLightness</name>
        <full_name>\Chameleon\Colors\HSLColor::getLightness()</full_name>
        <docblock line="158">
          <description>Get lightness</description>
          <long-description>Returns the lightness of this color</long-description>
          <tag name="return" line="158" description="lightness [0, 1]" type="float">
            <type>float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="172" package="Default">
        <name>setLightness</name>
        <full_name>\Chameleon\Colors\HSLColor::setLightness()</full_name>
        <docblock line="172">
          <description>Set lightness</description>
          <long-description>Sets the lightness of this color</long-description>
          <tag name="param" line="172" description="&lt;p&gt;The lightness [0, 1]&lt;/p&gt;" type="float|integer" variable="$lightness">
            <type>float</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="172" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
          <tag name="throws" line="172" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$lightness</name>
          <default></default>
          <type>float|integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Chameleon\Colors" line="183" package="Default">
        <name>makeRGB</name>
        <full_name>\Chameleon\Colors\HSLColor::makeRGB()</full_name>
        <docblock line="183">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Chameleon\Colors" line="201" package="Default">
        <name>hue2rgb</name>
        <full_name>\Chameleon\Colors\HSLColor::hue2rgb()</full_name>
        <docblock line="201">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$p</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$q</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$t</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="221" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\HSLColor::getRGBA()</full_name>
        <docblock line="221">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="225" package="Default">
        <name>lighten</name>
        <full_name>\Chameleon\Colors\HSLColor::lighten()</full_name>
        <docblock line="225">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="235" package="Default">
        <name>darken</name>
        <full_name>\Chameleon\Colors\HSLColor::darken()</full_name>
        <docblock line="235">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="26" code="PPC:ERR-50015">Argument $saturation is missing from the Docblock of __construct</error>
      <error line="26" code="PPC:ERR-50014">Name of argument $saturation does not match with the DocBlock's name $hue in __construct()</error>
      <error line="26" code="PPC:ERR-50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $saturation in __construct()</error>
      <error line="26" code="PPC:ERR-50015">Argument $lightness is missing from the Docblock of __construct</error>
      <error line="26" code="PPC:ERR-50014">Name of argument $lightness does not match with the DocBlock's name $hue in __construct()</error>
      <error line="26" code="PPC:ERR-50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $lightness in __construct()</error>
      <error line="37" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
      <error line="86" code="PPC:ERR-50008">No summary for method __toString()</error>
      <error line="183" code="PPC:ERR-50008">No summary for method makeRGB()</error>
      <error line="201" code="PPC:ERR-50015">Argument $p is missing from the Docblock of hue2rgb</error>
      <error line="201" code="PPC:ERR-50015">Argument $q is missing from the Docblock of hue2rgb</error>
      <error line="201" code="PPC:ERR-50015">Argument $t is missing from the Docblock of hue2rgb</error>
      <error line="201" code="PPC:ERR-50008">No summary for method hue2rgb()</error>
      <error line="221" code="PPC:ERR-50008">No summary for method getRGBA()</error>
      <error line="225" code="PPC:ERR-50015">Argument $percentage is missing from the Docblock of lighten</error>
      <error line="225" code="PPC:ERR-50008">No summary for method lighten()</error>
      <error line="235" code="PPC:ERR-50015">Argument $percentage is missing from the Docblock of darken</error>
      <error line="235" code="PPC:ERR-50008">No summary for method darken()</error>
      <error line="14" code="PPC:ERR-50007">No summary for property $hue</error>
      <error line="15" code="PPC:ERR-50007">No summary for property $saturation</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $lightness</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $red</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $green</error>
      <error line="20" code="PPC:ERR-50007">No summary for property $blue</error>
    </parse_markers>
    <source>eJzFWFtP4zgUfudXnK36kJa2gSCQlk6BBa2YkUaaFaB9WUYoBLepaJNM4g6g3fnv62Mnjm9JA+wlEjSxj8/98zn2h9MsznaAPUm4JkUWRgQuYva6Imlye5Gu0ryY7nCCTaFO/fockYwu06S4/T1cbciXDf0yP083yUMhp6aOdYLl7dXl+S/8tWTuD4f8dwh8FC5WYVHAnL19vP4MEV8kCEqyK5LlpCAJLSAU83AfFuQB0gRoTPgyL96QERQh3eQh6jOC76jqAIqXgpJ1yekszJbi1ec/ERfN1gtNyDMlzKhSrz85CT5ZvvweUgJ9JmRqj9ZSHZOr5SKmCSkq14rJlJKIMgv6OXmYusYXOSGJc+Z+hUrImcqbpUe5QRELFc03EU1zZe4sC/NwDcuEckPgI/vjToI/9kZwcPjz15rYryVv7lfLCOabJEIL4e5OcvcqViOYr9KQqp6QQ9L+geJQfPo0XhYwPoGCUKaKh4wG00aSa8naU8S0LPhcCfYUHWryH24X1n66bU5kFrbFfais0ZbnhGmXyKxS5iyvFpRZoTh3nqdrlOIZokzf+T7ElGbHvv/09DRZEPL4sk6TR/IyidK1/1ueLpgF62Wy8C+u4zDPfMYvYArdsb+AvU9iutYdx/IQZkIY+m9B6BV58AbgQ3B4aDiZ56ZBfYljDfSYsQb5ORvSqfUlMV+xZzCq4+6YlEG253TCdfjMSNh/D60elfaMhJ5mQjEnIvEy6UL8QFY0REtRxJgvblNE1TjH7dTzuLxdzoB7ZwTBQAE7Pss5KBkNH5i1ZnqIp8zDhDzJXPQEWjWcOtGBD0NIi/uFsVNbNYXqxK2aSuLPLGsmhwM4ZaPoxF3uxAEcgxegR7lQQ09bN+FMzcrAMk79IitWuP4dH6pfFuQCmJWGjvk3xtzlWJF1GjUfaaTH7NTIebo2UNsx5LvBrExDRwAFPL1qJ5iVUTqFQ4yYEH4M+1LPYJvzuVSF2xa5Ykepxe6jWO7PYziozN0qtE2C9IAQcIACyiAcMytFuFol2BvacAZHewaa35NgSgmzqzRNr2nOKoCH4Cn4q2FvKboXFyuvB5O6eKKuE+iNQBtVEGZP1ghmc4Pe1jI7hEtCuSDegdTjCsUV16/gLZ6khHQOXGik1da67GJP8rbOZiH6EPQXMnE6S/VRl17i2mklmDTdjARXmyLbuRuNg2V45yYFzmicp08FNPb6bR2N9GbZ1VXq8Swkq7nhVsT9T9KpUUyix6swWZASA8KIgWsv4Epy3DTq6fUYE5apGi+rxqmfGgRmRr+vEazDR8IaKc+szmqedEkQhIGCrLY8UfFgLmnMGBlp0Y5b6zBP9r92iuhCa8IxoIJnO1Bch6N2vHR0h4RNZ1840MMt+IsnqcLmxsXV8tR/jifF+9Z5q8JXV3ipxQUNezvGak49o2hxvt3wpreWrpzRyP8R9Anwycq1tQbVNW5bDRLRqemN1GnHWH1u7Qox5Yphi8klwmybG6C1zeRtmKrX32jc/n8s1V627yleWankyvciSTLqqQ3fq3CkHin7jrzQiN+MoupySzpUcjLveMo66uyaOIEO/Laiwck1+1ryHx8jfNrJdIanZkf7X7Esr0OqT3njUQ1UVxoNorudNb6Bcfitzr7K2BA8frjRd3qFQJvDc4m6tnEn5fIzJj9AqnoJW//Nptzmp/K8rUQ5yBf3Xj9jefxtBLyZY4ruB3t4BD042hu4jvCms7tw7cKvjFUnJcctSv7Ysd+aIWHy79OBvaH0KQbdedSlsDuD/ba0KhmcsM3BzWC8hYFbnX3/yMWv3BSYPSySHstdlirZgGXPEWYQxTfr5s+pL0oIWiQw1t1ZBf7Bq5T12AL84PoedVC6UiozSVsO33h5ipe4iNT6ItdZw7EiSBJPhdXIAMRIT2hWFbrdBHBsE9kxZiSPSELDBT+RfXKp5igmLBWVla4LSXtNY146SpWVpq+sR4bND2H++F6Tx28wuRHLDpP33mSy+H968jflWwyc</source>
  </file>
  <file path="Colors/Hex8Color.php" generated-path="Colors.Hex8Color.html" hash="fd7c8ece1979964ce8a6d437602ef9cd" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="Hex6Color">\Chameleon\Colors\Hex6Color</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="8" package="Default">
      <extends>\Chameleon\Colors\Hex6Color</extends>
      <name>Hex8Color</name>
      <full_name>\Chameleon\Colors\Hex8Color</full_name>
      <docblock line="8">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color" refers="\Chameleon\Colors\Hex6Color" link="/classes/Chameleon.Colors.Hex6Color.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="14" package="Default">
        <name>$alpha</name>
        <full_name>\Chameleon\Colors\Hex8Color::alpha</full_name>
        <default></default>
        <docblock line="14">
          <description>The alpha channel value [0, 127]</description>
          <long-description></long-description>
          <tag name="var" line="14" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="12" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\RGBColor::red</full_name>
        <default></default>
        <docblock line="12">
          <description>The red channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="12" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="19" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\RGBColor::green</full_name>
        <default></default>
        <docblock line="19">
          <description>The green channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="19" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="26" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\RGBColor::blue</full_name>
        <default></default>
        <docblock line="26">
          <description>The blue channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="26" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="21" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\Hex8Color::__construct()</full_name>
        <docblock line="21">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="21" description="&lt;p&gt;The 8-digit hexstring, e.g. #fe0da722&lt;/p&gt;" type="string" variable="$hexstring">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color::__construct()" refers="\Chameleon\Colors\Hex6Color::__construct()" link="/classes/Chameleon.Colors.Hex6Color.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hexstring</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="25" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\Hex8Color::fromRGBA()</full_name>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color::fromRGBA()" refers="\Chameleon\Colors\Hex6Color::fromRGBA()" link="/classes/Chameleon.Colors.Hex6Color.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="41" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\Hex8Color::__toString()</full_name>
        <docblock line="41">
          <description>Get string representation of this color</description>
          <long-description>Format: #rrggbbaa</long-description>
          <tag name="return" line="41" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color::__toString()" refers="\Chameleon\Colors\Hex6Color::__toString()" link="/classes/Chameleon.Colors.Hex6Color.html#method___toString"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="51" package="Default">
        <name>getHex</name>
        <full_name>\Chameleon\Colors\Hex8Color::getHex()</full_name>
        <docblock line="51">
          <description>Get hexadecimal value for this color
Format: #rrggbbaa</description>
          <long-description></long-description>
          <tag name="return" line="51" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color::getHex()" refers="\Chameleon\Colors\Hex6Color::getHex()" link="/classes/Chameleon.Colors.Hex6Color.html#method_getHex"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="63" package="Default">
        <name>setHex</name>
        <full_name>\Chameleon\Colors\Hex8Color::setHex()</full_name>
        <docblock line="63">
          <description>Set hexadecimal value for this color</description>
          <long-description></long-description>
          <tag name="param" line="63" description="&lt;p&gt;The hexadecimal color value, Fomat: #rrggbb&lt;/p&gt;" type="string" variable="$hexstring">
            <type>string</type>
          </tag>
          <tag name="return" line="63" description="" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color::setHex()" refers="\Chameleon\Colors\Hex6Color::setHex()" link="/classes/Chameleon.Colors.Hex6Color.html#method_setHex"/>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hexstring</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="77" package="Default">
        <name>getAlpha</name>
        <full_name>\Chameleon\Colors\Hex8Color::getAlpha()</full_name>
        <docblock line="77">
          <description>Get RGB alpha channel value</description>
          <long-description></long-description>
          <tag name="return" line="77" description="RGB alpha channel avalue [0, 127]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="86" package="Default">
        <name>setAlpha</name>
        <full_name>\Chameleon\Colors\Hex8Color::setAlpha()</full_name>
        <docblock line="86">
          <description>Set RGB alpha channel value</description>
          <long-description></long-description>
          <tag name="param" line="86" description="&lt;p&gt;RGB alpha channel avalue [0x00, 0x7F]&lt;/p&gt;" type="integer" variable="$alpha">
            <type>integer</type>
          </tag>
          <tag name="return" line="86" description="" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="96" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\Hex8Color::getRGBA()</full_name>
        <docblock line="96">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="35" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\RGBColor::__construct()</full_name>
        <docblock line="35">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="35" description="&lt;p&gt;The red channel value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;The green channel value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;The blue channel value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="48" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\RGBColor::__toString()</full_name>
        <docblock line="48">
          <description>Get string representation of this color</description>
          <long-description>Format: rgb(red, green, blue)</long-description>
          <tag name="return" line="48" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="35" package="Default">
        <name>getHex</name>
        <full_name>\Chameleon\Colors\Hex6Color::getHex()</full_name>
        <docblock line="35">
          <description>Get hexadecimal value for this color
Format: #rrggbb</description>
          <long-description></long-description>
          <tag name="return" line="35" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\Hex6Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="49" package="Default">
        <name>setHex</name>
        <full_name>\Chameleon\Colors\Hex6Color::setHex()</full_name>
        <docblock line="49">
          <description>Set hexadecimal value for this color</description>
          <long-description></long-description>
          <tag name="param" line="49" description="&lt;p&gt;The hexadecimal color value, Fomat: #rrggbb&lt;/p&gt;" type="string" variable="$hexstring">
            <type>string</type>
          </tag>
          <tag name="return" line="49" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hexstring</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Chameleon\Colors\Hex6Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="137" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\RGBColor::fromRGBA()</full_name>
        <docblock line="137">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="57" package="Default">
        <name>getRed</name>
        <full_name>\Chameleon\Colors\RGBColor::getRed()</full_name>
        <docblock line="57">
          <description>Get red channel value</description>
          <long-description></long-description>
          <tag name="return" line="57" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="69" package="Default">
        <name>setRed</name>
        <full_name>\Chameleon\Colors\RGBColor::setRed()</full_name>
        <docblock line="69">
          <description>Set the red channel value</description>
          <long-description></long-description>
          <tag name="param" line="69" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="return" line="69" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="throws" line="69" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="84" package="Default">
        <name>getGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::getGreen()</full_name>
        <docblock line="84">
          <description>Get green channel value</description>
          <long-description></long-description>
          <tag name="return" line="84" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="96" package="Default">
        <name>setGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::setGreen()</full_name>
        <docblock line="96">
          <description>Set green channel value</description>
          <long-description></long-description>
          <tag name="param" line="96" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="return" line="96" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="throws" line="96" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="111" package="Default">
        <name>getBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::getBlue()</full_name>
        <docblock line="111">
          <description>Get blue channel value</description>
          <long-description></long-description>
          <tag name="return" line="111" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="123" package="Default">
        <name>setBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::setBlue()</full_name>
        <docblock line="123">
          <description>Set blue channel value</description>
          <long-description></long-description>
          <tag name="param" line="123" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
          <tag name="return" line="123" description="" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
          <tag name="throws" line="123" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="133" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\RGBColor::getRGBA()</full_name>
        <docblock line="133">
          <description></description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="141" package="Default">
        <name>lighten</name>
        <full_name>\Chameleon\Colors\RGBColor::lighten()</full_name>
        <docblock line="141">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="160" package="Default">
        <name>darken</name>
        <full_name>\Chameleon\Colors\RGBColor::darken()</full_name>
        <docblock line="160">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Colors\Hex8Color</error>
      <error line="25" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="25" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
      <error line="96" code="PPC:ERR-50008">No summary for method getRGBA()</error>
    </parse_markers>
    <source>eJy1VklP20AUvudXvIYcbBSCyQFQwlJAhd6QoOqlIDRxnhfVsa3xGCwh/nvfjJeMnUlqVHUkSyP7e9v3Np9dpkE6ADoxW2GWMhfhJqBrhEn8dJNECc/mAwXIM/3Tt8LFVIRJnD39ZFGO97m4966TPF5mzae5Qa5U+fQdi2N13YF5uLu+qjAK5EYsy4AkT9VbwEIgmYNGF7wrnDyH+/vNHfbhR4DAojRg4AYsjjGCV+k0/HLGcDQ9edawutjXV8YhjIX27rC5pzwR6Apcwkiprrw0WL9RjrvEleC5KxK+zVzKOFsBocLYh1GARXWV7p8eLEM/FNC8HQNO/Anseegs2cl0anYyX0ShC14euzIj8PLSuGFt2LE1AuUZiSDM4OACMhREsqUh5w3wY9A1lgkmdJseT1Yyl1aTUBhxf8G65jiKnMcQ49s6ydZwbwgTaOHkWaIbSI+kHumhj+IBl5Ztw6QP9o4jxr3R11QqvcFXshYI3cKa+eqUyR2KOvccU44ZxpJJYjDxQKXClZToIvr9NuErJmawx7nvLxaMbauyiufSVM+qEcmjgls2zGonjdlrasYva6Z35MQjIzrDFaub06NCMYf9H0Ot3d4WpuwBOAfqVMrObLYZZQOanEsNIsnTFLllNcSUc+gMnOLIseESho6s8LqSWijphflDx2BNPiH78P34Ob57zyhdp1JSah5TwvR8GVOEkdcrQdUsMgyvmVLSTledJ9ME20hZpVPl7YVaMKJtKAfQGIb0GKefEtXGZNn9hCQarCxfkIBmdAzHY5jadte43jt9+4WGqWml/aUTaJkZJNnWbbizUapRR8RLtbvHQbUi17FtCe3x86GVFSldKBfxrgALh2J0ipPb538twjL4tdW6/jo8hB5YXxoWqJXd3w8s9tEqpcgZxbndXYbyiIAnb2ofbv3FsoZKjSzPtr52iX4MzBVbsnS++QfTTeGufa+XhNrzkor1ru/MT7UqWwO0lJkbYHpPdQagef5JqW6RfQwuL/4AhWTjkA==</source>
  </file>
  <file path="Colors/Hex6Color.php" generated-path="Colors.Hex6Color.html" hash="5201db17c70cfd69776a73a0be7a1a68" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="RGBColor">\Chameleon\Colors\RGBColor</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="8" package="Default">
      <extends>\Chameleon\Colors\RGBColor</extends>
      <name>Hex6Color</name>
      <full_name>\Chameleon\Colors\Hex6Color</full_name>
      <docblock line="8">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Colors\RGBColor" refers="\Chameleon\Colors\RGBColor" link="/classes/Chameleon.Colors.RGBColor.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="12" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\RGBColor::red</full_name>
        <default></default>
        <docblock line="12">
          <description>The red channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="12" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="19" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\RGBColor::green</full_name>
        <default></default>
        <docblock line="19">
          <description>The green channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="19" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="26" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\RGBColor::blue</full_name>
        <default></default>
        <docblock line="26">
          <description>The blue channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="26" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="14" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\Hex6Color::__construct()</full_name>
        <docblock line="14">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="14" description="&lt;p&gt;The 6-digit hexstring, e.g. #fe0da7&lt;/p&gt;" type="string" variable="$hexstring">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\RGBColor::__construct()" refers="\Chameleon\Colors\RGBColor::__construct()" link="/classes/Chameleon.Colors.RGBColor.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hexstring</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="25" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\Hex6Color::__toString()</full_name>
        <docblock line="25">
          <description>Get string representation of this color</description>
          <long-description>Format: #rrggbb</long-description>
          <tag name="return" line="25" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\RGBColor::__toString()" refers="\Chameleon\Colors\RGBColor::__toString()" link="/classes/Chameleon.Colors.RGBColor.html#method___toString"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="35" package="Default">
        <name>getHex</name>
        <full_name>\Chameleon\Colors\Hex6Color::getHex()</full_name>
        <docblock line="35">
          <description>Get hexadecimal value for this color
Format: #rrggbb</description>
          <long-description></long-description>
          <tag name="return" line="35" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="49" package="Default">
        <name>setHex</name>
        <full_name>\Chameleon\Colors\Hex6Color::setHex()</full_name>
        <docblock line="49">
          <description>Set hexadecimal value for this color</description>
          <long-description></long-description>
          <tag name="param" line="49" description="&lt;p&gt;The hexadecimal color value, Fomat: #rrggbb&lt;/p&gt;" type="string" variable="$hexstring">
            <type>string</type>
          </tag>
          <tag name="return" line="49" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hexstring</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="56" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\Hex6Color::fromRGBA()</full_name>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\RGBColor::fromRGBA()" refers="\Chameleon\Colors\RGBColor::fromRGBA()" link="/classes/Chameleon.Colors.RGBColor.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="35" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\RGBColor::__construct()</full_name>
        <docblock line="35">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="35" description="&lt;p&gt;The red channel value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;The green channel value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;The blue channel value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="48" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\RGBColor::__toString()</full_name>
        <docblock line="48">
          <description>Get string representation of this color</description>
          <long-description>Format: rgb(red, green, blue)</long-description>
          <tag name="return" line="48" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="57" package="Default">
        <name>getRed</name>
        <full_name>\Chameleon\Colors\RGBColor::getRed()</full_name>
        <docblock line="57">
          <description>Get red channel value</description>
          <long-description></long-description>
          <tag name="return" line="57" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="69" package="Default">
        <name>setRed</name>
        <full_name>\Chameleon\Colors\RGBColor::setRed()</full_name>
        <docblock line="69">
          <description>Set the red channel value</description>
          <long-description></long-description>
          <tag name="param" line="69" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="return" line="69" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="throws" line="69" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="84" package="Default">
        <name>getGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::getGreen()</full_name>
        <docblock line="84">
          <description>Get green channel value</description>
          <long-description></long-description>
          <tag name="return" line="84" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="96" package="Default">
        <name>setGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::setGreen()</full_name>
        <docblock line="96">
          <description>Set green channel value</description>
          <long-description></long-description>
          <tag name="param" line="96" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="return" line="96" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="throws" line="96" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="111" package="Default">
        <name>getBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::getBlue()</full_name>
        <docblock line="111">
          <description>Get blue channel value</description>
          <long-description></long-description>
          <tag name="return" line="111" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="123" package="Default">
        <name>setBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::setBlue()</full_name>
        <docblock line="123">
          <description>Set blue channel value</description>
          <long-description></long-description>
          <tag name="param" line="123" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
          <tag name="return" line="123" description="" type="\Chameleon\Colors\Hex6Color">
            <type>\Chameleon\Colors\Hex6Color</type>
          </tag>
          <tag name="throws" line="123" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="133" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\RGBColor::getRGBA()</full_name>
        <docblock line="133">
          <description></description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="137" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\RGBColor::fromRGBA()</full_name>
        <docblock line="137">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="141" package="Default">
        <name>lighten</name>
        <full_name>\Chameleon\Colors\RGBColor::lighten()</full_name>
        <docblock line="141">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="160" package="Default">
        <name>darken</name>
        <full_name>\Chameleon\Colors\RGBColor::darken()</full_name>
        <docblock line="160">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Colors\Hex6Color</error>
      <error line="56" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="56" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
    </parse_markers>
    <source>eJy1VV1r2zAUfc+vuCR5sEOaZmVk0HTNlrClb4V27CkQZPv6A2zJSHIXGPvvk+SPKq1jew8TJAjp3KN7j4+u7jZ5nI9ADUoyFDnxEXaxmqbI6GHHUsbFemQAhbC3vp18zGXCqDj8JGmBj4V8DLesoIFottYtcSXl4Wm/NbNuyNcKY0B+SoSABzytzCrgSaI6DWoq+G1gelzPZs0cZrAzkb7KVfLCl4xbmzbuS044yUChEhrBNMZTNf0RI6yugiRKJDSrc8BFtIBJiMuAfLJ4rpt5Xnhp4kNYUF/rAcdjk4Tz7hTXKkCPqYwTAVf3IFCqqh0LuW6Af0aXit6jrCvhmHMUSCUxWbAQDLWvVbND7Pl3xjMib2HCeRR53iXFOMqC0+qggRpI9mzgjgu3dYrnpVesjQJRqcDgupVSJEA/yUgKL9qdECp/tBf93wqtk+4pUu1JVuQ5cmc8GcPiDKOH4zQ6cAzgDj6sXNjAeKnAoKqMtTcshD6wbdnt5o44Iu1hN5g2/nKj5wRPf4juAzSkjd+su2fkg8zw/G9mGNwMbE5DUjLPlZsumKlx0AtLgkH+qa59f594Te2zTveornuq+ri20xzG6tfaOUyo1WKeMHAUTlXliMJTcKvhzGE5hxvX7Qjfawd0ENz0EWyVfh3xH9/GWx+9Uk7o/mYJGHKW6UfEaV4SmPLII28FrD4MxV+vr0t5F+GdnWtjap6qM2nhWq3fgi1VGoo2knTZvvzf3P8Ff+MYzA==</source>
  </file>
  <file path="Colors/IColor.php" generated-path="Colors.IColor.html" hash="59bcfd3d9b58540a0f4d17f14ab7771e" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <interface namespace="Chameleon\Colors" line="6" package="Default">
      <name>IColor</name>
      <full_name>\Chameleon\Colors\IColor</full_name>
      <docblock line="6">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="6" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="12" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\IColor::fromRGBA()</full_name>
        <docblock line="12">
          <description>Construct from an RGBAColor</description>
          <long-description></long-description>
          <tag name="return" line="12" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="19" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\IColor::getRGBA()</full_name>
        <docblock line="19">
          <description>Get the RGBA representation of the color</description>
          <long-description></long-description>
          <tag name="return" line="19" description="" type="\Chameleon\Colors\RGBAColor">
            <type>\Chameleon\Colors\RGBAColor</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="26" package="Default">
        <name>isTransparent</name>
        <full_name>\Chameleon\Colors\IColor::isTransparent()</full_name>
        <docblock line="26">
          <description>Find out if the color is transparent</description>
          <long-description></long-description>
          <tag name="return" line="26" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="34" package="Default">
        <name>lighten</name>
        <full_name>\Chameleon\Colors\IColor::lighten()</full_name>
        <docblock line="34">
          <description>Make the color lighter</description>
          <long-description></long-description>
          <tag name="param" line="34" description="" type="float" variable="$percentage">
            <type>float</type>
          </tag>
          <tag name="return" line="34" description="" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="42" package="Default">
        <name>darken</name>
        <full_name>\Chameleon\Colors\IColor::darken()</full_name>
        <docblock line="42">
          <description>Make the color darker</description>
          <long-description></long-description>
          <tag name="param" line="42" description="" type="float" variable="$percentage">
            <type>float</type>
          </tag>
          <tag name="return" line="42" description="" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="49" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\IColor::__toString()</full_name>
        <docblock line="49">
          <description>Return a string representation of the color.</description>
          <long-description></long-description>
          <tag name="return" line="49" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="6" code="PPC:ERR-50009">No summary for interface \Chameleon\Colors\IColor</error>
      <error line="12" code="PPC:ERR-50015">Argument $color is missing from the Docblock of fromRGBA</error>
    </parse_markers>
    <source>eJy9k7FuAjEMhneewkMHYCh7qUpbpCKGLrQjEgrBdxcRkpPj61L13Zv40PUERzl1aJZYjv37i+Pcz8qiHEBcTh0wlEojzItoWvRuPffWU5gOJKAK50fr1eL5ScxjkHGMlCWVpbjhU9xpTcbjxoYxzL0LTJVmyMgfQDlotFph7YxHQq7IwYc3u5Z/0thltbVGQ2DFccsqp9l4J/pJe9gUgBudttERuoNugQxcoDABYUkY0CXdqOczOdI9ULuudMbbgObIwjmCOzhtbAfji3E78BWDaQGBCcCkXHxKisRX+Lbe215oJrz/iApgSr3M9qr22IKyJi/iYFyiibLqAJn1iuGmRNKp1zl2EQe0WS/iuqQbnqkm+OWV1p7g7xTt/5deKv4RflXXUvEjkHH5b+N7e2U+aoVexJsN+zcJl/GoM6cS/jWYPXwDBusshA==</source>
  </file>
  <file path="Colors/HSVColor.php" generated-path="Colors.HSVColor.html" hash="ae9eee9b75aa59fc9c4e41b19b590998" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="13" package="Default">
      <extends>\Chameleon\Colors\Color</extends>
      <name>HSVColor</name>
      <full_name>\Chameleon\Colors\HSVColor</full_name>
      <docblock line="13">
        <description>Color Class for HSV colors</description>
        <long-description>Represents a color based on the HSV (hue, saturation, value) system</long-description>
        <tag name="api" line="13" description=""/>
        <tag name="package" line="13" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="14" package="Default">
        <name>$hue</name>
        <full_name>\Chameleon\Colors\HSVColor::hue</full_name>
        <default></default>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="15" package="Default">
        <name>$saturation</name>
        <full_name>\Chameleon\Colors\HSVColor::saturation</full_name>
        <default></default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="16" package="Default">
        <name>$value</name>
        <full_name>\Chameleon\Colors\HSVColor::value</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="18" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\HSVColor::red</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="19" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\HSVColor::green</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="20" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\HSVColor::blue</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="29" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\HSVColor::__construct()</full_name>
        <docblock line="29">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="29" description="&lt;p&gt;Hue value [0, 359]&lt;/p&gt;" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
          <tag name="param" line="29" description="&lt;p&gt;Saturation [0, 1]&lt;/p&gt;" type="float" variable="$saturation">
            <type>float</type>
          </tag>
          <tag name="param" line="29" description="&lt;p&gt;Value [0, 1]&lt;/p&gt;" type="float" variable="$value">
            <type>float</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="35" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\HSVColor::fromRGBA()</full_name>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="81" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\HSVColor::__toString()</full_name>
        <docblock line="81">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="91" package="Default">
        <name>getHue</name>
        <full_name>\Chameleon\Colors\HSVColor::getHue()</full_name>
        <docblock line="91">
          <description>Get hue value</description>
          <long-description>Returns the hue value of this color</long-description>
          <tag name="return" line="91" description="Hue value [0, 359]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="105" package="Default">
        <name>setHue</name>
        <full_name>\Chameleon\Colors\HSVColor::setHue()</full_name>
        <docblock line="105">
          <description>Set hue value</description>
          <long-description>Sets the hue value of this color</long-description>
          <tag name="param" line="105" description="&lt;p&gt;The hue value [0, 359]&lt;/p&gt;" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
          <tag name="return" line="105" description="" type="\Chameleon\Colors\HSVColor">
            <type>\Chameleon\Colors\HSVColor</type>
          </tag>
          <tag name="throws" line="105" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="122" package="Default">
        <name>getSaturation</name>
        <full_name>\Chameleon\Colors\HSVColor::getSaturation()</full_name>
        <docblock line="122">
          <description>Get saturation value</description>
          <long-description>Returns the saturation value of this color</long-description>
          <tag name="return" line="122" description="saturation value [0, 1]" type="float">
            <type>float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="136" package="Default">
        <name>setSaturation</name>
        <full_name>\Chameleon\Colors\HSVColor::setSaturation()</full_name>
        <docblock line="136">
          <description>Set saturation value</description>
          <long-description>Sets the saturation value of this color</long-description>
          <tag name="param" line="136" description="&lt;p&gt;The saturation value [0, 1]&lt;/p&gt;" type="float|integer" variable="$saturation">
            <type>float</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="136" description="" type="\Chameleon\Colors\HSVColor">
            <type>\Chameleon\Colors\HSVColor</type>
          </tag>
          <tag name="throws" line="136" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>float|integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="153" package="Default">
        <name>getValue</name>
        <full_name>\Chameleon\Colors\HSVColor::getValue()</full_name>
        <docblock line="153">
          <description>Get value</description>
          <long-description>Returns the value of this color</long-description>
          <tag name="return" line="153" description="value [0, 1]" type="float">
            <type>float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="167" package="Default">
        <name>setValue</name>
        <full_name>\Chameleon\Colors\HSVColor::setValue()</full_name>
        <docblock line="167">
          <description>Set value</description>
          <long-description>Sets the value of this color</long-description>
          <tag name="param" line="167" description="&lt;p&gt;The value [0, 1]&lt;/p&gt;" type="float|integer" variable="$value">
            <type>float</type>
            <type>integer</type>
          </tag>
          <tag name="return" line="167" description="" type="\Chameleon\Colors\HSVColor">
            <type>\Chameleon\Colors\HSVColor</type>
          </tag>
          <tag name="throws" line="167" description="" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>float|integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="230" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\HSVColor::getRGBA()</full_name>
        <docblock line="230">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="234" package="Default">
        <name>lighten</name>
        <full_name>\Chameleon\Colors\HSVColor::lighten()</full_name>
        <docblock line="234">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="244" package="Default">
        <name>darken</name>
        <full_name>\Chameleon\Colors\HSVColor::darken()</full_name>
        <docblock line="244">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$percentage</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="35" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="35" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
      <error line="81" code="PPC:ERR-50008">No summary for method __toString()</error>
      <error line="230" code="PPC:ERR-50008">No summary for method getRGBA()</error>
      <error line="234" code="PPC:ERR-50015">Argument $percentage is missing from the Docblock of lighten</error>
      <error line="234" code="PPC:ERR-50008">No summary for method lighten()</error>
      <error line="244" code="PPC:ERR-50015">Argument $percentage is missing from the Docblock of darken</error>
      <error line="244" code="PPC:ERR-50008">No summary for method darken()</error>
      <error line="14" code="PPC:ERR-50007">No summary for property $hue</error>
      <error line="15" code="PPC:ERR-50007">No summary for property $saturation</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $value</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $red</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $green</error>
      <error line="20" code="PPC:ERR-50007">No summary for property $blue</error>
    </parse_markers>
    <source>eJzVWFtP4zgUfudXnK36kJaUlutq6JRhB62YfRoJEC/LaOSmbhORJiFxgdXu/Pe1j9PEdpw0LWi0Wwmaxuf2HZ/PPvbHT4mf7AH/RGRJs4R4FK58/hjSOHq4isM4zcZ7KLDK1KHfXz2asCCOsod7Eq7o1xX7Ov8cr6JZVgyNLXrS5MPN9eff8DE3Puz38bsP+BauQpJlMOdPX27vwUMlKZCL3dAkpRmNWAZEjsOUZHQGcQTMp6jm+CvqQkbYKiUiHheeRag9yP7KGF3mli5JEsjHIX556Jrry0joK6McVB7X3ygiPkkaPBNGocudjKtvS6+WQQwjRy4HYkY9xqPvpnQ2tr1fpJRG1pGpbmudScjTiWg8Pk8sXXksTpVBVe4yISlZQhAxRARf+B+GCX+OXDg+/fDNIj0PY8JUrHBbPgq9wwYtaf2+8KHJDkukq2kYeDBfRR6a/f69AOOso3Wrkbiam54yceLTZX6QweACMso4UkcY6Y1rRUpUjuKiQQFRObnvUuzHngkrY9yUgm6exkvBDacgCC+JxZT04LwsSR3LcAg+Y0l2Phxya95j/ExTjv3lwIuXQzI8+3A8Ohn9qofKqwwm0rKIeEHZDZ05PRjC0empAQsrz5C+Fu9q5EU9GuKfRTas0rrqMhCO+H9HROjmvl1p00z3krwKYfLaIKxryIqbQCqWKUcYcOHINDujISMifmF/gDE1hBzMwVmrTGBk1hlaVOjBRcZVAR+jsoyklGtGENGXYvIdWe9apVfqTHx+bAhawLtoE3EOb4gZafJBQ77S/z/wO5IBcpatKZAxOXn1D/KqElnAdGzKA6Y4Z85GL0ewz6WRNwPkZns/9UZP0KiAOcip0Wx1r2KjP4GzkYVHIn1i/GNN9Yix/Qkcn402+tlyggu9hhVV2ShYfMvSIFo4YvXM8NGIN/ff8bNnpwMH5RouMBxAxwXtrVLJ1UG5uvD3vY51xVc35j5cU4ZOUKt8r0jcYGwZdjOFJMRzQIfY8ijSlzkUsSU27N0NG+tCboUiV8KINVFqfjaC5FHdWlGCKdMOZHPDcqdZsDQtmnKOZ1102hjz0/glg9q2tlWbkjcW6/CwAmk4N9IqlolfiqR6PvUeb0i0oDkJJIiejWUYJBKnNk6nw43wKtVsmZS0tzByCdFbW01gSR4pb1Gc3nivtk5askAhVTsymAobOSE7wYqa0XQ2U0NpAcVcSpPNHLEdAZqpUpuKGsa0zISVOIjgH6xPxcydzWqlO//pVFKyX+n0t6aWurMIZLvzq7TUMXYstNuOa3qzZSsaTfwdmdeObttwbAdiyaNSW07lJ+cN8HI6teLQW4gjde98+p8hisymfvTdkh6o9VZmoJHOunPbig/rU1rXmGtN6J1YIKqEmwH6tAq4Oxqxusnj803TiIS2cb0ZES03P00rJcFPvd9+hrBSGflNk1oaIl22k3Ld1Yi8I8jPyuJHX7iru/RY3xLk8vJno8ZUO4zjL1O+nt5XJPRWoYC48/Q1ZKuoLs6d5ziYmSnyAx44J5k4ragt05AfmEy4czxGVqTEqcwPjOrtJqLudSL0wTkUwtXtwvT0tI0yH+rOK1OzpQU5NO+ZLMxeAub5HLYf2FYQj/CD6+jc/v6s+l7GVt6uYSVrYfJaZvwvMQCtP9OUksfqEPo7bOnvyYWKz138HbX0l1j8sR38HW/hr4JxB38nbedP5O8d/J3uWC+Idzt/xvZVPjX1N3ibKxaS8kbX2uKIDbUQcdRV2DVWWVdfQ/nm2njFXAQTBguf0aKDTmjq8RWTLLBF+MMWmrEW7E9ULYPzeOOly1/wPd92QWTu9IeNjcHGLd3EOSPp41tgDraEWXcPZsKsXIe1gin/f7r4F6AJ3+Y=</source>
  </file>
  <file path="Colors/Color.php" generated-path="Colors.Color.html" hash="97a120dbdbb7ee01b883396eca750c5c" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJylVEtv2zAMvvdX8BB0dpC22C4D3CZZ18MWYNihzbFAIKuMrVaWDEnuVmz776MkN9bivoDpYEsiPz4+UjxbtnV7ALQUa9C2jCNc1LSVqNX1hZba2NODoNDZsej68svn87DtlVhpnWHcAZfMWggiEE0rsUHlLKziza+g7FfblVJwsI45+u3g205xJ7SCrdGNd5LtPMHEVCXLT/dNjLEVugDNoYAk0FdxUlS1Q5VtpWYOJi0aTsEzVaG3tHqrmRtm7v7fymbj9JUzQlVZXhBPfteTneB26sKuDVNUSEPOQual1jIh3C+DrjMKJq4WFo4WCVHxcC7bmtFpPof3Hz4OQf4Z/J5Mp4PJKTUG8jsQW2Bwz2SHFAcIRSeJFZNgfNqJfgr9RLGyBnqaAvp5cSPUC0L28zkffcaei+T+ZKDRaIfc4c3AJPcpXfrAszS2WRLKLPH8CtWRlcU84ODw8PHmbB7Qb+JYq3s0jkjl4R04DUxpV6PpL+yDddi8THNsIJjE97muERT+iPh3tn+1fhTMAI+rY/h69S00alEE0VOcxk7+rTop4fujLdDlLfEJtAsC6ozeJTUGBU1JjGZJNPR0efa6nEcq1jr7Jx9fg+VoxPhF/jOhNswY9pCt0pRmMenNMKSy3lie7xlJ6xlUimI3nsZvKZlQe3VN7Hhy0trH73LxF5V5oOo=</source>
  </file>
  <file path="Image.php" generated-path="Image.html" hash="83bd84c6f55e7ffd0a03618ed8dd437a" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ColorNotFoundException">\Chameleon\Exceptions\ColorNotFoundException</namespace-alias>
    <namespace-alias name="IFilter">\Chameleon\Filters\IFilter</namespace-alias>
    <namespace-alias name="IPrimitive">\Chameleon\Primitives\IPrimitive</namespace-alias>
    <namespace-alias name="Rectangle">\Chameleon\Primitives\Rectangle</namespace-alias>
    <namespace-alias name="IPattern">\Chameleon\Patterns\IPattern</namespace-alias>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <namespace-alias name="RGBColor">\Chameleon\Colors\RGBColor</namespace-alias>
    <namespace-alias name="FlipMode">\Chameleon\Transformations\FlipMode</namespace-alias>
    <namespace-alias name="RotateMode">\Chameleon\Transformations\RotateMode</namespace-alias>
    <namespace-alias name="ScaleMode">\Chameleon\Transformations\ScaleMode</namespace-alias>
    <namespace-alias name="Exception">\Exception</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon" line="21" package="Default">
      <extends/>
      <name>Image</name>
      <full_name>\Chameleon\Image</full_name>
      <docblock line="21">
        <description>Image class</description>
        <long-description></long-description>
        <tag name="package" line="21" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon" line="22" package="Default">
        <name>$imageResource</name>
        <full_name>\Chameleon\Image::imageResource</full_name>
        <default></default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon" line="23" package="Default">
        <name>$colors</name>
        <full_name>\Chameleon\Image::colors</full_name>
        <default>array()</default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="34" package="Default">
        <name>create</name>
        <full_name>\Chameleon\Image::create()</full_name>
        <docblock line="34">
          <description>Create an image from scratch</description>
          <long-description></long-description>
          <tag name="api" line="34" description=""/>
          <tag name="param" line="34" description="&lt;p&gt;width in px&lt;/p&gt;" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="param" line="34" description="&lt;p&gt;height in px&lt;/p&gt;" type="integer" variable="$height">
            <type>integer</type>
          </tag>
          <tag name="return" line="34" description="" type="\Chameleon\Image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$height</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="50" package="Default">
        <name>fromFile</name>
        <full_name>\Chameleon\Image::fromFile()</full_name>
        <docblock line="50">
          <description>Load an image from a file</description>
          <long-description></long-description>
          <tag name="api" line="50" description=""/>
          <tag name="param" line="50" description="&lt;p&gt;Path to the file&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="50" description="" type="\Chameleon\Image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="throws" line="50" description="If file not found" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="87" package="Default">
        <name>__destruct</name>
        <full_name>\Chameleon\Image::__destruct()</full_name>
        <docblock line="87">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="102" package="Default">
        <name>getWidth</name>
        <full_name>\Chameleon\Image::getWidth()</full_name>
        <docblock line="102">
          <description>Get image width in px</description>
          <long-description></long-description>
          <tag name="api" line="102" description=""/>
          <tag name="return" line="102" description="The width" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="113" package="Default">
        <name>getHeight</name>
        <full_name>\Chameleon\Image::getHeight()</full_name>
        <docblock line="113">
          <description>Get image height in px</description>
          <long-description></long-description>
          <tag name="api" line="113" description=""/>
          <tag name="return" line="113" description="The height" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="127" package="Default">
        <name>outputAs</name>
        <full_name>\Chameleon\Image::outputAs()</full_name>
        <docblock line="127">
          <description>Output image</description>
          <long-description></long-description>
          <tag name="api" line="127" description=""/>
          <tag name="param" line="127" description="&lt;p&gt;int One of the supported IMG_* constants&lt;/p&gt;" type="" variable="$type"/>
          <tag name="return" line="127" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="127" description="If using an unsupported image file format" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="152" package="Default">
        <name>getImageResource</name>
        <full_name>\Chameleon\Image::getImageResource()</full_name>
        <docblock line="152">
          <description>Get the underlying GD image resource</description>
          <long-description></long-description>
          <tag name="api" line="152" description=""/>
          <tag name="return" line="152" description="" type="resource">
            <type>resource</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="164" package="Default">
        <name>registerColor</name>
        <full_name>\Chameleon\Image::registerColor()</full_name>
        <docblock line="164">
          <description>Register a color with this image</description>
          <long-description></long-description>
          <tag name="api" line="164" description=""/>
          <tag name="param" line="164" description="&lt;p&gt;The color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="return" line="164" description="The internal GD color id" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="185" package="Default">
        <name>isColorRegistered</name>
        <full_name>\Chameleon\Image::isColorRegistered()</full_name>
        <docblock line="185">
          <description>Check if a color is registered with this image</description>
          <long-description></long-description>
          <tag name="api" line="185" description=""/>
          <tag name="param" line="185" description="&lt;p&gt;The color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="return" line="185" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="199" package="Default">
        <name>getRegisteredColor</name>
        <full_name>\Chameleon\Image::getRegisteredColor()</full_name>
        <docblock line="199">
          <description>Get the underlying GD color</description>
          <long-description></long-description>
          <tag name="api" line="199" description=""/>
          <tag name="param" line="199" description="&lt;p&gt;The high level color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="return" line="199" description="The low level color" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="199" description="If color is not registered with this image" type="\Chameleon\Exceptions\ColorNotFoundException">
            <type>\Chameleon\Exceptions\ColorNotFoundException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="216" package="Default">
        <name>registerColorIfUnknown</name>
        <full_name>\Chameleon\Image::registerColorIfUnknown()</full_name>
        <docblock line="216">
          <description>Register a color only if it has not been registered yet</description>
          <long-description></long-description>
          <tag name="param" line="216" description="" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="return" line="216" description="was unknown?" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="deprecated" line="216" description=""/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="236" package="Default">
        <name>setBackgroundPattern</name>
        <full_name>\Chameleon\Image::setBackgroundPattern()</full_name>
        <docblock line="236">
          <description>Fill the whole image with the given pattern.</description>
          <long-description>Only call this before drawing other elements onto the image unless you want them to be affected
by the pattern.</long-description>
          <tag name="api" line="236" description=""/>
          <tag name="param" line="236" description="&lt;p&gt;The pattern&lt;/p&gt;" type="\Chameleon\Patterns\IPattern" variable="$pattern">
            <type>\Chameleon\Patterns\IPattern</type>
          </tag>
          <tag name="return" line="236" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$pattern</name>
          <default></default>
          <type>\Chameleon\Patterns\IPattern</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="252" package="Default">
        <name>getPixel</name>
        <full_name>\Chameleon\Image::getPixel()</full_name>
        <docblock line="252">
          <description>Get color of a specific pixel</description>
          <long-description></long-description>
          <tag name="api" line="252" description=""/>
          <tag name="param" line="252" description="&lt;p&gt;X coordinate&lt;/p&gt;" type="integer" variable="$xCoordinate">
            <type>integer</type>
          </tag>
          <tag name="param" line="252" description="&lt;p&gt;Y coordinate&lt;/p&gt;" type="integer" variable="$yCoordinate">
            <type>integer</type>
          </tag>
          <tag name="return" line="252" description="The color" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xCoordinate</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$yCoordinate</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="273" package="Default">
        <name>setPixel</name>
        <full_name>\Chameleon\Image::setPixel()</full_name>
        <docblock line="273">
          <description>Set the color of a specific pixel.</description>
          <long-description>Make sure that the color is registered on the image! No additional tests will be performed!</long-description>
          <tag name="api" line="273" description=""/>
          <tag name="param" line="273" description="&lt;p&gt;The x coordinate&lt;/p&gt;" type="integer" variable="$xCoordinate">
            <type>integer</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;The y coordinate&lt;/p&gt;" type="integer" variable="$yCoordinate">
            <type>integer</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;The color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="return" line="273" description="" type="\Chameleon\Image">
            <type>\Chameleon\Image</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$xCoordinate</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$yCoordinate</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="287" package="Default">
        <name>filter</name>
        <full_name>\Chameleon\Image::filter()</full_name>
        <docblock line="287">
          <description>Apply a filter to the image.</description>
          <long-description></long-description>
          <tag name="api" line="287" description=""/>
          <tag name="param" line="287" description="&lt;p&gt;The filter to be applied&lt;/p&gt;" type="\Chameleon\Filters\IFilter" variable="$filter">
            <type>\Chameleon\Filters\IFilter</type>
          </tag>
          <tag name="return" line="287" description="self" type="\Chameleon\Image">
            <type>\Chameleon\Image</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default></default>
          <type>\Chameleon\Filters\IFilter</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="301" package="Default">
        <name>flip</name>
        <full_name>\Chameleon\Image::flip()</full_name>
        <docblock line="301">
          <description>Flip the image</description>
          <long-description></long-description>
          <tag name="api" line="301" description=""/>
          <tag name="param" line="301" description="&lt;p&gt;FlipMode::HORIZONTAL, FlipMode::VERTICAL or FlipMode::BOTH&lt;/p&gt;" type="\Chameleon\Transformations\FlipMode" variable="$flipMode">
            <type>\Chameleon\Transformations\FlipMode</type>
          </tag>
          <tag name="return" line="301" description="" type="\Chameleon\Image">
            <type>\Chameleon\Image</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$flipMode</name>
          <default></default>
          <type>\Chameleon\Transformations\FlipMode</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="321" package="Default">
        <name>scale</name>
        <full_name>\Chameleon\Image::scale()</full_name>
        <docblock line="321">
          <description>Scale the image</description>
          <long-description></long-description>
          <tag name="api" line="321" description=""/>
          <tag name="param" line="321" description="&lt;p&gt;New width&lt;/p&gt;" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="param" line="321" description="&lt;p&gt;(optional) New height. If omitted or negative, the aspect ratio will be preserved.&lt;/p&gt;" type="integer" variable="$height">
            <type>integer</type>
          </tag>
          <tag name="param" line="321" description="&lt;p&gt;(optional) If true, the existing image will be overridden, otherwise a new Image will be returned.&lt;/p&gt;" type="boolean" variable="$override">
            <type>boolean</type>
          </tag>
          <tag name="param" line="321" description="&lt;p&gt;(optional) The desired interpolation algorithm, default: ScaleMode::BICUBIC_FIXED().&lt;/p&gt;" type="\Chameleon\Transformations\ScaleMode|null" variable="$mode">
            <type>\Chameleon\Transformations\ScaleMode</type>
            <type>null</type>
          </tag>
          <tag name="return" line="321" description="" type="\Chameleon\Image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="throws" line="321" description="If the call to imagescale() fails" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$height</name>
          <default>-1</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$override</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mode</name>
          <default>null</default>
          <type>\Chameleon\Transformations\ScaleMode|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="350" package="Default">
        <name>crop</name>
        <full_name>\Chameleon\Image::crop()</full_name>
        <docblock line="350">
          <description>Crop the image to a given box</description>
          <long-description></long-description>
          <tag name="api" line="350" description=""/>
          <tag name="param" line="350" description="&lt;p&gt;The top left start position.&lt;/p&gt;" type="\Chameleon\Vector2" variable="$start">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="param" line="350" description="&lt;p&gt;The bottom right end position.&lt;/p&gt;" type="\Chameleon\Vector2" variable="$end">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="param" line="350" description="&lt;p&gt;(optional) If true, the existing image will be overridden, otherwise a new Image will be returned.&lt;/p&gt;" type="boolean" variable="$override">
            <type>boolean</type>
          </tag>
          <tag name="return" line="350" description="" type="\Chameleon\Image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="throws" line="350" description="If call to imagecrop() fails" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$start</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$end</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$override</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="383" package="Default">
        <name>rotate</name>
        <full_name>\Chameleon\Image::rotate()</full_name>
        <docblock line="383">
          <description>Rotate the image.</description>
          <long-description></long-description>
          <tag name="param" line="383" description="&lt;p&gt;Degrees [0, 360]&lt;/p&gt;" type="integer" variable="$degrees">
            <type>integer</type>
          </tag>
          <tag name="param" line="383" description="&lt;p&gt;(optional) Rotation orientation, defaults to RotateMode::CLOCKWISE()&lt;/p&gt;" type="\Chameleon\Transformations\RotateMode|null" variable="$rotateMode">
            <type>\Chameleon\Transformations\RotateMode</type>
            <type>null</type>
          </tag>
          <tag name="param" line="383" description="&lt;p&gt;(optional) The background color for areas that are not covered by the image, defaults to ColorFactory::black()&lt;/p&gt;" type="\Chameleon\Colors\IColor|null" variable="$backgroundColor">
            <type>\Chameleon\Colors\IColor</type>
            <type>null</type>
          </tag>
          <tag name="param" line="383" description="&lt;p&gt;(optional) If true, the existing image will be overridden, otherwise a new Image will be returned.&lt;/p&gt;" type="boolean" variable="$override">
            <type>boolean</type>
          </tag>
          <tag name="return" line="383" description="" type="\Chameleon\Image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="throws" line="383" description="If call to imagerotate() fails" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$degrees</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$rotateMode</name>
          <default>null</default>
          <type>\Chameleon\Transformations\RotateMode|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$backgroundColor</name>
          <default>null</default>
          <type>\Chameleon\Colors\IColor|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$override</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="422" package="Default">
        <name>draw</name>
        <full_name>\Chameleon\Image::draw()</full_name>
        <docblock line="422">
          <description>Draw one or more primitives onto the image</description>
          <long-description></long-description>
          <tag name="api" line="422" description=""/>
          <tag name="param" line="422" description="&lt;p&gt;Any number of primitives&lt;/p&gt;" type="\Chameleon\Primitives\IPrimitive|array&lt;mixed,\Chameleon\Primitives\IPrimitive&gt;" variable="$primitives">
            <type>\Chameleon\Primitives\IPrimitive</type>
            <type>array&lt;mixed,\Chameleon\Primitives\IPrimitive&gt;</type>
          </tag>
          <tag name="return" line="422" description="" type="\Chameleon\Image">
            <type>\Chameleon\Image</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$primitives</name>
          <default></default>
          <type>\Chameleon\Primitives\IPrimitive|array&lt;mixed,\Chameleon\Primitives\IPrimitive&gt;</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="87" code="PPC:ERR-50008">No summary for method __destruct()</error>
      <error line="22" code="PPC:ERR-50007">No summary for property $imageResource</error>
      <error line="23" code="PPC:ERR-50007">No summary for property $colors</error>
    </parse_markers>
    <source>eJztW/9v27oR/71/BRtkg1y4SboBD0OytEvTJvXWNkWavteurwhomba1yKJA0XGMvf7vuztS3yhKkd0ADxiegMY2dbw73h0/d/zSv79I5+kjBs9EhDFXIsi0ikJ9rdepyNgxezY4otcJX4gs5aFgp3P4GguZHD2iN8us0vbr67tQpDqSSfbrqYylei/1mVwmk6Ld2+ssirVQ2a8j8+XIQ/JBRYtIR7cCqIrv9xBeilDzZBb76bgGUQmyM998RDQGIKHPDoLL85etJFeKJ9lUqgU3djmLo/SdnHiVcmkvpeZa9KX+GPLYIXbtvv/kCX2yJ2y04DPBwOtZZpv26ZNa7Nv/mjfwpCq6BVXYboQvLkUmlyq0gmrvQ7IIhA5Xiq+DgRVcE24UOFUCe/CEEU82VXLBslBxHc4rdNUu/+Bp1PYq5YovWJRotruKJnrOzN8oYeldG+FcRLO5ZvajSaqEXqqEZSKeVtr3y1Evx3EUsgy8BB/TZRKirVlIIwtKXYZVcQN2SBwr1sXHWBYMl4iVMX9ALYaZVktBpg1yjjm3wVGNjVXZcCtffX/U6oe3kk8cL3A2jWKxtRMQRJIZ2005OOAD/tGS6bno5GoVp5HXXui5kqusDGU2mhIjlkjNpogum/gGxwcwY5AuV7LFJdGUBSjpWtxFmc4CQztwqMh5iq9Guf+WcXzUoMhWEcQ1CxbRQlyHMtEiMTDbwRWfkMM03iHf7KfJbOfQS+XqUIkcHDB0tGKaiuXPGKhv/K+rOvwnFVsqgT0fSotZNN1OCei4rQ7fvR0ajRg0j0kqxEw5a3OVWh1NXVJAcMhGWvp6bq2SnVolsLTx/P6o9pNmXoDdiskX7ODksVO7mIB7O1UY6sAam3QgW8EAQy3VHnu3zDRxGgtASZiuiY7AWRODRHKps2gi9tpQA3AVcjePuwGpnrXAHvbLFWDS+SuLfHmrH01sfitw5Pq6GEVQZ+86eFfPo4w9fc7qShy35tKKFyyIVaROhBXqioFCQHBEmEKeTcU8s1nZF3lmeuDbieBxLENMXH6NhzkbN2aqvx41mJPCct3CdOAdthM150JbH/lzet/sZOcB5mL0PDHryh2F2WdC/4LEASYK7F43ZM4XVczuHmakLTXJlkM13PqO9Q1R9xnsD7n1YqnTpR3v1rUGTC9IoqTnRSKYnFKhkS3TVCpEkdG78+snBnEAWbJ77DWWMq61+4qPZYaFA1RMy6SUY6snBEdTkvcytiQTnGSmVsSRoNFRC8fqeflgaZoTmbIjDvbD+3N/Zqw6jgqC+zxXfWxObBf7zw8esZW3r3toZSqELdRqlXs+OrtfLNUEPyi1T+b81BUujRSaf/UgBEY4ZF2h4jVGYlcG2xAvunNgEylGVWs1UlK+FvHats9gL8E3GSR4WJBQ6gHIxsUEsvsx1DArepvQCCHpWxeE5pUGmtt0izoXHoWZlB0EiQxqkv0IayrILBPazeVfrcLQcH2t5UdawgSDby1rktmYY5lR9AGHXZ6/PAk8Yb1Lao0mRcWMP/OCgMfpnLdXBSTHsheTYFBvOldCJG7jy3gp3LYTkuKuZ3ODFAo+Pj5mUx5nXhSkofSzGVrG8vTP8jx6W4ma1bft8vRZV4nkIWqfAadzEd6gAfIZAEPLAwpg5HeYD06KbI/7KCOml4W2zdj3JLp81m0U/tsDpzvMHzXbHConFotbEXezdsAllquWXkUJ4t9PxXqkCAxcRfUKjk5MLx22EWKV8NDwu+3qm7Buiuh2dNe0EgAJHgFkPVr6+g0Y3LOo2SA5ySReoykizeY8s2takVRdshZ6g4hqm35sBeyXyU0iV8mLNn4TkSqB6L1FlhpNPxnuvaYs5avt3F/0qidJr0/wsUbA3ZHO+svSUZ7oAw5nURwTOqzmEkqyfLFJ80ewWXQLbkzNOUHbVsQFej/kxAfGNBa4IGcTxVcINRL4KIhRsRCwCoFQsTuiRtIyiUWWsbVcgmsTwqkF7pmOBePTqQjrTmTjNfW9R6Ee8GWPPmg7h75clWx9wXcre9Y8AN4veXgzUzjXrJSgIQ7jCVm6GyYqP7ixu+HFQQ5V1D8L3Dj6S3AwZAdYQuQhVC7S6435atYJp4oUoPMqXOjZ1RM9bMCvdxqycIFJPUtFGE3BdGl0J1p3sfode9ydSqkmUYL7VJ9BSP6jjX5dof/ip/cFQX7Y5S0TOjPLBxxj4Oo6bGiDcVFIcWNjNq7XqLq9MK0JqQloOBQL34CYP3/Onv00YH9mB3cH8JydObQzrGer1H/rIB5DnYuFJpJWiXxgRZFuRx2gSkMrbGj49Aqvj7bKaQ2xKlqwd/wG90oAp/ScVzvWq0zwXoFVj9l7yfhkEqFTYTWkRQZ4tkL8BLRKhcLlrJg8frhQxjC72zCcsc+6u8/9Ja8v+N3jqU4I7BvvQ9ZIs77TKNpxE5rcuEXQD/tWWS0niti5TwiepClkQjpCxOqomuh+IFWZqwFs13K9MqeJVgDmSZAa1dJkq/vuPc8tDwtJQuAIR/+45+P45LqBPVGbdSMrbGNNvC5QGnBr++W3DkDJ/FvedHj45uJy9O+L91cnb4eV1p9fX16NTk/eMgiRsvXlxdWbB5sjqEvQVK1rAlAXsp4n9ouxwbtbTnsMAz/YNu3fiqh4q+IBPFC5mfAekN49fPDdSwhkalB2QF1M6x4u+eQi0riNCK5JxIzjfZch6cgR7WEViFdCSlRWgBvqVkz2PAKpoN+Vt0KpCCxXkQlysNA2jOkIHCvZvDY2rG2/CWYpqnFXESzDeHnWWFAaw/t1KG6u/IaH52x3Ieua4GyfiCzCZET7cKmM6dIL4/FMKqjTF0MgmPJlrA9LbhCto9NP8O/6bPT59atg0Io/G10+oDRJhb60oIwCgwEsN6I46xX4pkfLBREoGJ4+G7qOObbOKEZnzWQuHLRdKrEk5vPFiw7bOPNkFzxYO0M3KremnfqtlKGV2D4PacugkNG5qUekpR2MIe7d/WuctubCunf76riQP87ystKhcqieC+hxqM6cowGblwhqMIoEHqn32h9UspIeMCK5Xa6O5TbnhmY+2iUW2800V2aHSoOcWEw1M02pzKgC9M3mordIJtR3LLWWC6YouLGxq/fviUfbY0IND0JwykZwQB3qRh/WzNiCBm2zHvkByVcnaHfudtjx89yrZnX8GZbLLtm6SfbFQ0ZT3pCiUwt+7On9IgxMuJ2/NDtDU63vt/twimzZfoMB3v4BRfbpgCKKoI2QyNxV7VHrV+qcicAFbsZe2c+vB0P2158Ovnnoy6uwtkZQRUMVI4iMTtZVJBLzvSgNMpyhJaPDw9O3F6f/+mX08XU1yJwVohU3LnaHzFLNqU7K13YFDctgxpXgmVlaw1faEA4xeKCKsVt4ZKm6fsT+jOPcXx8ejmNg7NXu/wAnjQs3QkrbpRo9w4pLa2FhKqNyce26MH+/EbTW+Fd/QXHVElrunlBDjUYT8PKGgQNc+/uOHU1tDA7JyPf59IIgDIE5rk3DWIY36Oshy2CBAEEpIBrRIQmM32wBUcVGAVxQ79WHkDP+0zFO16MmmlatBCjZYhjviUDOm1hjNrANnUjWdo7gGNZ1hZs7rCE3QHM3sdUH0fK2sjntHrY1NPazeFZr/SOh2acjoak8MWyU1F4pvmIS75UptsDznLT47yXOGc72O1vF/1j5rfz69Rvb29vbrUg7SdYAV4uxoF3d8sWD7cXQOUapgSO/BQ7LS6cVVfHCafHTO8eLt60HKB7ntu3cmL8vnv8Pa+087w==</source>
  </file>
  <file path="Exceptions/ColorNotFoundException.php" generated-path="Exceptions.ColorNotFoundException.html" hash="b5815a20d101920e418c8120e6736e14" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Exception">\Exception</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Exceptions" line="6" package="Default">
      <extends>\Exception</extends>
      <name>ColorNotFoundException</name>
      <full_name>\Chameleon\Exceptions\ColorNotFoundException</full_name>
      <docblock line="6">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="6" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Exceptions" line="7" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Exceptions\ColorNotFoundException::__construct()</full_name>
        <docblock line="7">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="6" code="PPC:ERR-50005">No summary for class \Chameleon\Exceptions\ColorNotFoundException</error>
      <error line="7" code="PPC:ERR-50015">Argument $color is missing from the Docblock of __construct</error>
      <error line="7" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJxNjsEKwjAMhu97ijgG04NPMN0OQ48+gTBqF7dC15YmhYH47nadTP9DCMn//cmpcaPLIMqICckJidCOsdVozf0yS3SsrKEqS6ZACNvwO5NaEEFrtfU3y1cbTL9ZAGdG09MPgleCFrnw0ErCMxiZNl0n4yX2QfK+kEve4c+9qOBRERxriK+SGBDOkKfDUK5ACXFvLIPHQRGjxx5icsLUFIldXm2J72ytTf0B2wBSAQ==</source>
  </file>
  <file path="Exceptions/ValueOutOfBoundsException.php" generated-path="Exceptions.ValueOutOfBoundsException.html" hash="05229277680b9ddffbccd598f5b14982" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Exception">\Exception</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Exceptions" line="6" package="Default">
      <extends>\Exception</extends>
      <name>ValueOutOfBoundsException</name>
      <full_name>\Chameleon\Exceptions\ValueOutOfBoundsException</full_name>
      <docblock line="6">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="6" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Exceptions" line="7" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Exceptions\ValueOutOfBoundsException::__construct()</full_name>
        <docblock line="7">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$valueName</name>
          <default></default>
          <type>\Chameleon\Exceptions\string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>\Chameleon\Exceptions\float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type>\Chameleon\Exceptions\float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type>\Chameleon\Exceptions\float</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="6" code="PPC:ERR-50005">No summary for class \Chameleon\Exceptions\ValueOutOfBoundsException</error>
      <error line="7" code="PPC:ERR-50015">Argument $valueName is missing from the Docblock of __construct</error>
      <error line="7" code="PPC:ERR-50015">Argument $value is missing from the Docblock of __construct</error>
      <error line="7" code="PPC:ERR-50015">Argument $min is missing from the Docblock of __construct</error>
      <error line="7" code="PPC:ERR-50015">Argument $max is missing from the Docblock of __construct</error>
      <error line="7" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJxNT01PwzAMvfdXPKZJBQl+wWCTQFzZjQtDU8jcNVLmRI3DKk3773Pa0eFDYr+8D+d5FdtYQYvNgVI0lvDWausp8Oa9txTFBU6LaiDlRJjAK2a9SQmfxmdaZ1k3ryHzLk0sUC+kwE2H06ArFfOPdxZNZju8bLdWw6TLVu71crzH/Lc4f+hKj2h8MHJFpung+Nab/uGffam5tC7haQn9XjJ7wgtmw7KoR6MaTej+hpJTQwUcBEenWoa0BON9ONIOjoU6ZeJrzC2J33ezxRR5rsZztbwA/0Ju3Q==</source>
  </file>
  <file path="Vector2.php" generated-path="Vector2.html" hash="52b1c7c2da493c1fb92e2896a33dfd5c" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Chameleon" line="8" package="Default">
      <extends/>
      <name>Vector2</name>
      <full_name>\Chameleon\Vector2</full_name>
      <docblock line="8">
        <description>The Vector2 class represents a vector in a two-dimensional cartesian coordinate system.</description>
        <long-description>It contains multiple methods to set and manipulate its coordinates.</long-description>
        <tag name="package" line="8" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon" line="9" package="Default">
        <name>$x</name>
        <full_name>\Chameleon\Vector2::x</full_name>
        <default></default>
        <docblock line="9">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon" line="10" package="Default">
        <name>$y</name>
        <full_name>\Chameleon\Vector2::y</full_name>
        <default></default>
        <docblock line="10">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="18" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Vector2::__construct()</full_name>
        <docblock line="18">
          <description>Vector2 constructor.</description>
          <long-description></long-description>
          <tag name="param" line="18" description="&lt;p&gt;The x coordinate&lt;/p&gt;" type="integer" variable="$x">
            <type>integer</type>
          </tag>
          <tag name="param" line="18" description="&lt;p&gt;The y coordinate&lt;/p&gt;" type="integer" variable="$y">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="28" package="Default">
        <name>getX</name>
        <full_name>\Chameleon\Vector2::getX()</full_name>
        <docblock line="28">
          <description>Get the X coordinate of the vector.</description>
          <long-description></long-description>
          <tag name="return" line="28" description="The X coordinate" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="37" package="Default">
        <name>getY</name>
        <full_name>\Chameleon\Vector2::getY()</full_name>
        <docblock line="37">
          <description>Get the Y coordinate of the vector.</description>
          <long-description></long-description>
          <tag name="return" line="37" description="The Y coordinate" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="48" package="Default">
        <name>setX</name>
        <full_name>\Chameleon\Vector2::setX()</full_name>
        <docblock line="48">
          <description>Set the vector's X coordinate.</description>
          <long-description></long-description>
          <tag name="param" line="48" description="&lt;p&gt;The x coordinate&lt;/p&gt;" type="integer" variable="$x">
            <type>integer</type>
          </tag>
          <tag name="return" line="48" description="" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="60" package="Default">
        <name>setY</name>
        <full_name>\Chameleon\Vector2::setY()</full_name>
        <docblock line="60">
          <description>Set the vector's Y coordinate.</description>
          <long-description></long-description>
          <tag name="param" line="60" description="&lt;p&gt;The y coordinate&lt;/p&gt;" type="integer" variable="$y">
            <type>integer</type>
          </tag>
          <tag name="return" line="60" description="" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="72" package="Default">
        <name>incX</name>
        <full_name>\Chameleon\Vector2::incX()</full_name>
        <docblock line="72">
          <description>Increment the vector's x coordinate by $inc.</description>
          <long-description></long-description>
          <tag name="param" line="72" description="&lt;p&gt;Defaults to 1&lt;/p&gt;" type="integer" variable="$inc">
            <type>integer</type>
          </tag>
          <tag name="return" line="72" description="" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$inc</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="84" package="Default">
        <name>incY</name>
        <full_name>\Chameleon\Vector2::incY()</full_name>
        <docblock line="84">
          <description>Increment the vector's y coordinate by $inc.</description>
          <long-description></long-description>
          <tag name="param" line="84" description="&lt;p&gt;Defaults to 1&lt;/p&gt;" type="integer" variable="$inc">
            <type>integer</type>
          </tag>
          <tag name="return" line="84" description="" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$inc</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="96" package="Default">
        <name>decX</name>
        <full_name>\Chameleon\Vector2::decX()</full_name>
        <docblock line="96">
          <description>Decrement the vector's x coordinate by $dec.</description>
          <long-description></long-description>
          <tag name="param" line="96" description="&lt;p&gt;Defaults to 1&lt;/p&gt;" type="integer" variable="$dec">
            <type>integer</type>
          </tag>
          <tag name="return" line="96" description="" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dec</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="108" package="Default">
        <name>decY</name>
        <full_name>\Chameleon\Vector2::decY()</full_name>
        <docblock line="108">
          <description>Decrement the vector's y coordinate by $dec.</description>
          <long-description></long-description>
          <tag name="param" line="108" description="&lt;p&gt;Defaults to 1&lt;/p&gt;" type="integer" variable="$dec">
            <type>integer</type>
          </tag>
          <tag name="return" line="108" description="" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dec</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="118" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Vector2::__toString()</full_name>
        <docblock line="118">
          <description>Returns a string representation of the vector</description>
          <long-description></long-description>
          <tag name="return" line="118" description="A string formatted as `(x, y)`" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="9" code="PPC:ERR-50007">No summary for property $x</error>
      <error line="10" code="PPC:ERR-50007">No summary for property $y</error>
    </parse_markers>
    <source>eJzNlt9P2zAQx9/5K05VpaUdbcUeYeWHhjTxOtBEnsAkF2IpsSP7wrCm/e+znZQmpYWktBJ5aFPf9ev7fnxO/P2sSIsDsJdgOeqCRQg/UnuboRQnBz4yG4/9N4zhJkX4jRFJ9Q2ijGkNCguFGgVpYPDkQ8CFvac/chLzHIXmUrAMIqYINWcCIilVzAUjBG00YT5dyF+RDQpiXGjIy4x4kSHkSKmMNZAEjQRMxJAzwYsycwrcTrwU1Aupmf+uSlwU/LeK2atQ/Mn9efh88nrM1LZb1qv6XqxLoUmV7se0EW+mnhdMsdyiIDuL5/bcqHNTpvGZZn3mbFlr+ZDxCJJSRGTpwt3dS0VBNeNhrTdquHbXkFKuYXJqq5m37LeCxgXNMvhvI5GfdkXIlnzbXFWZ+LGqGzYCUkilEr7OmxWFTqYfkW6DERx7hbbLWnppto+V8MNWwi2shB2tdFqV69pKVfYX3YL74Y5dZ73eGZ3cardw1TTOs8Ys6dOlTSJbwQh7wnhzU+4ARhgs9urbMFZ35TYwrkSk0D6UV5A0VxoeDAy5iLqgsWlwiQmzz2r/gD7aIRmrXbeJm2UOR+83y9e5T94LIvM5EYW9EJndILrEbl0UYydENm1viKx23UVulk5dNJn75L0getVFnwNR2AuR2Q2iXz7fnRvt0YWLx+VZkvm6Wu/ed/zWCheLm0SqnBFhDEzDfWDPQ2Z03/EsRfLai/g3cq239qU8CAYwbXbOFAaH0Bozbmw0aOKoPs9O/wN6Q+iq</source>
  </file>
  <file path="ColorFactory.php" generated-path="ColorFactory.html" hash="680934e2dfe93860696b0fc1560272be" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Hex8Color">\Chameleon\Colors\Hex8Color</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon" line="15" package="Chameleon">
      <extends/>
      <name>ColorFactory</name>
      <full_name>\Chameleon\ColorFactory</full_name>
      <docblock line="15">
        <description>Class ColorFactory provides various helper functions for working with colors.</description>
        <long-description>There are 141 named colors available, the 141st color is 'transparent'.</long-description>
        <tag name="api" line="15" description=""/>
        <tag name="see" line="15" description="" link="https://www.w3schools.com/colors/colors_names.asp"/>
        <tag name="package" line="15" description="Chameleon"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="20" package="Chameleon">
        <name>transparent</name>
        <full_name>\Chameleon\ColorFactory::transparent()</full_name>
        <docblock line="20">
          <description>transparent</description>
          <long-description></long-description>
          <tag name="return" line="20" description="transparent" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="28" package="Chameleon">
        <name>aliceBlue</name>
        <full_name>\Chameleon\ColorFactory::aliceBlue()</full_name>
        <docblock line="28">
          <description>aliceBlue</description>
          <long-description></long-description>
          <tag name="return" line="28" description="aliceBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="36" package="Chameleon">
        <name>antiqueWhite</name>
        <full_name>\Chameleon\ColorFactory::antiqueWhite()</full_name>
        <docblock line="36">
          <description>antiqueWhite</description>
          <long-description></long-description>
          <tag name="return" line="36" description="antiqueWhite" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="44" package="Chameleon">
        <name>aqua</name>
        <full_name>\Chameleon\ColorFactory::aqua()</full_name>
        <docblock line="44">
          <description>aqua</description>
          <long-description></long-description>
          <tag name="return" line="44" description="aqua" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="52" package="Chameleon">
        <name>aquamarine</name>
        <full_name>\Chameleon\ColorFactory::aquamarine()</full_name>
        <docblock line="52">
          <description>aquamarine</description>
          <long-description></long-description>
          <tag name="return" line="52" description="aquamarine" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="60" package="Chameleon">
        <name>azure</name>
        <full_name>\Chameleon\ColorFactory::azure()</full_name>
        <docblock line="60">
          <description>azure</description>
          <long-description></long-description>
          <tag name="return" line="60" description="azure" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="68" package="Chameleon">
        <name>beige</name>
        <full_name>\Chameleon\ColorFactory::beige()</full_name>
        <docblock line="68">
          <description>beige</description>
          <long-description></long-description>
          <tag name="return" line="68" description="beige" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="76" package="Chameleon">
        <name>bisque</name>
        <full_name>\Chameleon\ColorFactory::bisque()</full_name>
        <docblock line="76">
          <description>bisque</description>
          <long-description></long-description>
          <tag name="return" line="76" description="bisque" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="84" package="Chameleon">
        <name>black</name>
        <full_name>\Chameleon\ColorFactory::black()</full_name>
        <docblock line="84">
          <description>black</description>
          <long-description></long-description>
          <tag name="return" line="84" description="black" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="92" package="Chameleon">
        <name>blanchedAlmond</name>
        <full_name>\Chameleon\ColorFactory::blanchedAlmond()</full_name>
        <docblock line="92">
          <description>blanchedAlmond</description>
          <long-description></long-description>
          <tag name="return" line="92" description="blanchedAlmond" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="100" package="Chameleon">
        <name>blue</name>
        <full_name>\Chameleon\ColorFactory::blue()</full_name>
        <docblock line="100">
          <description>blue</description>
          <long-description></long-description>
          <tag name="return" line="100" description="blue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="108" package="Chameleon">
        <name>blueViolet</name>
        <full_name>\Chameleon\ColorFactory::blueViolet()</full_name>
        <docblock line="108">
          <description>blueViolet</description>
          <long-description></long-description>
          <tag name="return" line="108" description="blueViolet" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="116" package="Chameleon">
        <name>brown</name>
        <full_name>\Chameleon\ColorFactory::brown()</full_name>
        <docblock line="116">
          <description>brown</description>
          <long-description></long-description>
          <tag name="return" line="116" description="brown" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="124" package="Chameleon">
        <name>burlyWood</name>
        <full_name>\Chameleon\ColorFactory::burlyWood()</full_name>
        <docblock line="124">
          <description>burlyWood</description>
          <long-description></long-description>
          <tag name="return" line="124" description="burlyWood" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="132" package="Chameleon">
        <name>cadetBlue</name>
        <full_name>\Chameleon\ColorFactory::cadetBlue()</full_name>
        <docblock line="132">
          <description>cadetBlue</description>
          <long-description></long-description>
          <tag name="return" line="132" description="cadetBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="140" package="Chameleon">
        <name>chartreuse</name>
        <full_name>\Chameleon\ColorFactory::chartreuse()</full_name>
        <docblock line="140">
          <description>chartreuse</description>
          <long-description></long-description>
          <tag name="return" line="140" description="chartreuse" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="148" package="Chameleon">
        <name>chocolate</name>
        <full_name>\Chameleon\ColorFactory::chocolate()</full_name>
        <docblock line="148">
          <description>chocolate</description>
          <long-description></long-description>
          <tag name="return" line="148" description="chocolate" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="156" package="Chameleon">
        <name>coral</name>
        <full_name>\Chameleon\ColorFactory::coral()</full_name>
        <docblock line="156">
          <description>coral</description>
          <long-description></long-description>
          <tag name="return" line="156" description="coral" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="164" package="Chameleon">
        <name>cornflowerBlue</name>
        <full_name>\Chameleon\ColorFactory::cornflowerBlue()</full_name>
        <docblock line="164">
          <description>cornflowerBlue</description>
          <long-description></long-description>
          <tag name="return" line="164" description="cornflowerBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="172" package="Chameleon">
        <name>cornsilk</name>
        <full_name>\Chameleon\ColorFactory::cornsilk()</full_name>
        <docblock line="172">
          <description>cornsilk</description>
          <long-description></long-description>
          <tag name="return" line="172" description="cornsilk" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="180" package="Chameleon">
        <name>crimson</name>
        <full_name>\Chameleon\ColorFactory::crimson()</full_name>
        <docblock line="180">
          <description>crimson</description>
          <long-description></long-description>
          <tag name="return" line="180" description="crimson" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="188" package="Chameleon">
        <name>cyan</name>
        <full_name>\Chameleon\ColorFactory::cyan()</full_name>
        <docblock line="188">
          <description>cyan</description>
          <long-description></long-description>
          <tag name="return" line="188" description="cyan" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="196" package="Chameleon">
        <name>darkBlue</name>
        <full_name>\Chameleon\ColorFactory::darkBlue()</full_name>
        <docblock line="196">
          <description>darkBlue</description>
          <long-description></long-description>
          <tag name="return" line="196" description="darkBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="204" package="Chameleon">
        <name>darkCyan</name>
        <full_name>\Chameleon\ColorFactory::darkCyan()</full_name>
        <docblock line="204">
          <description>darkCyan</description>
          <long-description></long-description>
          <tag name="return" line="204" description="darkCyan" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="212" package="Chameleon">
        <name>darkGoldenRod</name>
        <full_name>\Chameleon\ColorFactory::darkGoldenRod()</full_name>
        <docblock line="212">
          <description>darkGoldenRod</description>
          <long-description></long-description>
          <tag name="return" line="212" description="darkGoldenRod" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="220" package="Chameleon">
        <name>darkGray</name>
        <full_name>\Chameleon\ColorFactory::darkGray()</full_name>
        <docblock line="220">
          <description>darkGray</description>
          <long-description></long-description>
          <tag name="return" line="220" description="darkGray" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="228" package="Chameleon">
        <name>darkGrey</name>
        <full_name>\Chameleon\ColorFactory::darkGrey()</full_name>
        <docblock line="228">
          <description>darkGrey</description>
          <long-description></long-description>
          <tag name="return" line="228" description="darkGrey" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="236" package="Chameleon">
        <name>darkGreen</name>
        <full_name>\Chameleon\ColorFactory::darkGreen()</full_name>
        <docblock line="236">
          <description>darkGreen</description>
          <long-description></long-description>
          <tag name="return" line="236" description="darkGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="244" package="Chameleon">
        <name>darkKhaki</name>
        <full_name>\Chameleon\ColorFactory::darkKhaki()</full_name>
        <docblock line="244">
          <description>darkKhaki</description>
          <long-description></long-description>
          <tag name="return" line="244" description="darkKhaki" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="252" package="Chameleon">
        <name>darkMagenta</name>
        <full_name>\Chameleon\ColorFactory::darkMagenta()</full_name>
        <docblock line="252">
          <description>darkMagenta</description>
          <long-description></long-description>
          <tag name="return" line="252" description="darkMagenta" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="260" package="Chameleon">
        <name>darkOliveGreen</name>
        <full_name>\Chameleon\ColorFactory::darkOliveGreen()</full_name>
        <docblock line="260">
          <description>darkOliveGreen</description>
          <long-description></long-description>
          <tag name="return" line="260" description="darkOliveGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="268" package="Chameleon">
        <name>darkOrange</name>
        <full_name>\Chameleon\ColorFactory::darkOrange()</full_name>
        <docblock line="268">
          <description>darkOrange</description>
          <long-description></long-description>
          <tag name="return" line="268" description="darkOrange" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="276" package="Chameleon">
        <name>darkOrchid</name>
        <full_name>\Chameleon\ColorFactory::darkOrchid()</full_name>
        <docblock line="276">
          <description>darkOrchid</description>
          <long-description></long-description>
          <tag name="return" line="276" description="darkOrchid" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="284" package="Chameleon">
        <name>darkRed</name>
        <full_name>\Chameleon\ColorFactory::darkRed()</full_name>
        <docblock line="284">
          <description>darkRed</description>
          <long-description></long-description>
          <tag name="return" line="284" description="darkRed" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="292" package="Chameleon">
        <name>darkSalmon</name>
        <full_name>\Chameleon\ColorFactory::darkSalmon()</full_name>
        <docblock line="292">
          <description>darkSalmon</description>
          <long-description></long-description>
          <tag name="return" line="292" description="darkSalmon" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="300" package="Chameleon">
        <name>darkSeaGreen</name>
        <full_name>\Chameleon\ColorFactory::darkSeaGreen()</full_name>
        <docblock line="300">
          <description>darkSeaGreen</description>
          <long-description></long-description>
          <tag name="return" line="300" description="darkSeaGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="308" package="Chameleon">
        <name>darkSlateBlue</name>
        <full_name>\Chameleon\ColorFactory::darkSlateBlue()</full_name>
        <docblock line="308">
          <description>darkSlateBlue</description>
          <long-description></long-description>
          <tag name="return" line="308" description="darkSlateBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="316" package="Chameleon">
        <name>darkSlateGray</name>
        <full_name>\Chameleon\ColorFactory::darkSlateGray()</full_name>
        <docblock line="316">
          <description>darkSlateGray</description>
          <long-description></long-description>
          <tag name="return" line="316" description="darkSlateGray" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="324" package="Chameleon">
        <name>darkSlateGrey</name>
        <full_name>\Chameleon\ColorFactory::darkSlateGrey()</full_name>
        <docblock line="324">
          <description>darkSlateGrey</description>
          <long-description></long-description>
          <tag name="return" line="324" description="darkSlateGrey" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="332" package="Chameleon">
        <name>darkTurquoise</name>
        <full_name>\Chameleon\ColorFactory::darkTurquoise()</full_name>
        <docblock line="332">
          <description>darkTurquoise</description>
          <long-description></long-description>
          <tag name="return" line="332" description="darkTurquoise" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="340" package="Chameleon">
        <name>darkViolet</name>
        <full_name>\Chameleon\ColorFactory::darkViolet()</full_name>
        <docblock line="340">
          <description>darkViolet</description>
          <long-description></long-description>
          <tag name="return" line="340" description="darkViolet" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="348" package="Chameleon">
        <name>deepPink</name>
        <full_name>\Chameleon\ColorFactory::deepPink()</full_name>
        <docblock line="348">
          <description>deepPink</description>
          <long-description></long-description>
          <tag name="return" line="348" description="deepPink" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="356" package="Chameleon">
        <name>deepSkyBlue</name>
        <full_name>\Chameleon\ColorFactory::deepSkyBlue()</full_name>
        <docblock line="356">
          <description>deepSkyBlue</description>
          <long-description></long-description>
          <tag name="return" line="356" description="deepSkyBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="364" package="Chameleon">
        <name>dimGray</name>
        <full_name>\Chameleon\ColorFactory::dimGray()</full_name>
        <docblock line="364">
          <description>dimGray</description>
          <long-description></long-description>
          <tag name="return" line="364" description="dimGray" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="372" package="Chameleon">
        <name>dimGrey</name>
        <full_name>\Chameleon\ColorFactory::dimGrey()</full_name>
        <docblock line="372">
          <description>dimGrey</description>
          <long-description></long-description>
          <tag name="return" line="372" description="dimGrey" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="380" package="Chameleon">
        <name>dodgerBlue</name>
        <full_name>\Chameleon\ColorFactory::dodgerBlue()</full_name>
        <docblock line="380">
          <description>dodgerBlue</description>
          <long-description></long-description>
          <tag name="return" line="380" description="dodgerBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="388" package="Chameleon">
        <name>fireBrick</name>
        <full_name>\Chameleon\ColorFactory::fireBrick()</full_name>
        <docblock line="388">
          <description>fireBrick</description>
          <long-description></long-description>
          <tag name="return" line="388" description="fireBrick" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="396" package="Chameleon">
        <name>floralWhite</name>
        <full_name>\Chameleon\ColorFactory::floralWhite()</full_name>
        <docblock line="396">
          <description>floralWhite</description>
          <long-description></long-description>
          <tag name="return" line="396" description="floralWhite" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="404" package="Chameleon">
        <name>forestGreen</name>
        <full_name>\Chameleon\ColorFactory::forestGreen()</full_name>
        <docblock line="404">
          <description>forestGreen</description>
          <long-description></long-description>
          <tag name="return" line="404" description="forestGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="412" package="Chameleon">
        <name>fuchsia</name>
        <full_name>\Chameleon\ColorFactory::fuchsia()</full_name>
        <docblock line="412">
          <description>fuchsia</description>
          <long-description></long-description>
          <tag name="return" line="412" description="fuchsia" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="420" package="Chameleon">
        <name>gainsboro</name>
        <full_name>\Chameleon\ColorFactory::gainsboro()</full_name>
        <docblock line="420">
          <description>gainsboro</description>
          <long-description></long-description>
          <tag name="return" line="420" description="gainsboro" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="428" package="Chameleon">
        <name>ghostWhite</name>
        <full_name>\Chameleon\ColorFactory::ghostWhite()</full_name>
        <docblock line="428">
          <description>ghostWhite</description>
          <long-description></long-description>
          <tag name="return" line="428" description="ghostWhite" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="436" package="Chameleon">
        <name>gold</name>
        <full_name>\Chameleon\ColorFactory::gold()</full_name>
        <docblock line="436">
          <description>gold</description>
          <long-description></long-description>
          <tag name="return" line="436" description="gold" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="444" package="Chameleon">
        <name>goldenRod</name>
        <full_name>\Chameleon\ColorFactory::goldenRod()</full_name>
        <docblock line="444">
          <description>goldenRod</description>
          <long-description></long-description>
          <tag name="return" line="444" description="goldenRod" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="452" package="Chameleon">
        <name>gray</name>
        <full_name>\Chameleon\ColorFactory::gray()</full_name>
        <docblock line="452">
          <description>gray</description>
          <long-description></long-description>
          <tag name="return" line="452" description="gray" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="460" package="Chameleon">
        <name>grey</name>
        <full_name>\Chameleon\ColorFactory::grey()</full_name>
        <docblock line="460">
          <description>grey</description>
          <long-description></long-description>
          <tag name="return" line="460" description="grey" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="468" package="Chameleon">
        <name>green</name>
        <full_name>\Chameleon\ColorFactory::green()</full_name>
        <docblock line="468">
          <description>green</description>
          <long-description></long-description>
          <tag name="return" line="468" description="green" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="476" package="Chameleon">
        <name>greenYellow</name>
        <full_name>\Chameleon\ColorFactory::greenYellow()</full_name>
        <docblock line="476">
          <description>greenYellow</description>
          <long-description></long-description>
          <tag name="return" line="476" description="greenYellow" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="484" package="Chameleon">
        <name>honeyDew</name>
        <full_name>\Chameleon\ColorFactory::honeyDew()</full_name>
        <docblock line="484">
          <description>honeyDew</description>
          <long-description></long-description>
          <tag name="return" line="484" description="honeyDew" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="492" package="Chameleon">
        <name>hotPink</name>
        <full_name>\Chameleon\ColorFactory::hotPink()</full_name>
        <docblock line="492">
          <description>hotPink</description>
          <long-description></long-description>
          <tag name="return" line="492" description="hotPink" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="500" package="Chameleon">
        <name>indianRed</name>
        <full_name>\Chameleon\ColorFactory::indianRed()</full_name>
        <docblock line="500">
          <description>indianRed</description>
          <long-description></long-description>
          <tag name="return" line="500" description="indianRed" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="508" package="Chameleon">
        <name>indigo</name>
        <full_name>\Chameleon\ColorFactory::indigo()</full_name>
        <docblock line="508">
          <description>indigo</description>
          <long-description></long-description>
          <tag name="return" line="508" description="indigo" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="516" package="Chameleon">
        <name>ivory</name>
        <full_name>\Chameleon\ColorFactory::ivory()</full_name>
        <docblock line="516">
          <description>ivory</description>
          <long-description></long-description>
          <tag name="return" line="516" description="ivory" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="524" package="Chameleon">
        <name>khaki</name>
        <full_name>\Chameleon\ColorFactory::khaki()</full_name>
        <docblock line="524">
          <description>khaki</description>
          <long-description></long-description>
          <tag name="return" line="524" description="khaki" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="532" package="Chameleon">
        <name>lavender</name>
        <full_name>\Chameleon\ColorFactory::lavender()</full_name>
        <docblock line="532">
          <description>lavender</description>
          <long-description></long-description>
          <tag name="return" line="532" description="lavender" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="540" package="Chameleon">
        <name>lavenderBlush</name>
        <full_name>\Chameleon\ColorFactory::lavenderBlush()</full_name>
        <docblock line="540">
          <description>lavenderBlush</description>
          <long-description></long-description>
          <tag name="return" line="540" description="lavenderBlush" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="548" package="Chameleon">
        <name>lawnGreen</name>
        <full_name>\Chameleon\ColorFactory::lawnGreen()</full_name>
        <docblock line="548">
          <description>lawnGreen</description>
          <long-description></long-description>
          <tag name="return" line="548" description="lawnGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="556" package="Chameleon">
        <name>lemonChiffon</name>
        <full_name>\Chameleon\ColorFactory::lemonChiffon()</full_name>
        <docblock line="556">
          <description>lemonChiffon</description>
          <long-description></long-description>
          <tag name="return" line="556" description="lemonChiffon" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="564" package="Chameleon">
        <name>lightBlue</name>
        <full_name>\Chameleon\ColorFactory::lightBlue()</full_name>
        <docblock line="564">
          <description>lightBlue</description>
          <long-description></long-description>
          <tag name="return" line="564" description="lightBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="572" package="Chameleon">
        <name>lightCoral</name>
        <full_name>\Chameleon\ColorFactory::lightCoral()</full_name>
        <docblock line="572">
          <description>lightCoral</description>
          <long-description></long-description>
          <tag name="return" line="572" description="lightCoral" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="580" package="Chameleon">
        <name>lightCyan</name>
        <full_name>\Chameleon\ColorFactory::lightCyan()</full_name>
        <docblock line="580">
          <description>lightCyan</description>
          <long-description></long-description>
          <tag name="return" line="580" description="lightCyan" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="588" package="Chameleon">
        <name>lightGoldenRodYellow</name>
        <full_name>\Chameleon\ColorFactory::lightGoldenRodYellow()</full_name>
        <docblock line="588">
          <description>lightGoldenRodYellow</description>
          <long-description></long-description>
          <tag name="return" line="588" description="lightGoldenRodYellow" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="596" package="Chameleon">
        <name>lightGray</name>
        <full_name>\Chameleon\ColorFactory::lightGray()</full_name>
        <docblock line="596">
          <description>lightGray</description>
          <long-description></long-description>
          <tag name="return" line="596" description="lightGray" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="604" package="Chameleon">
        <name>lightGrey</name>
        <full_name>\Chameleon\ColorFactory::lightGrey()</full_name>
        <docblock line="604">
          <description>lightGrey</description>
          <long-description></long-description>
          <tag name="return" line="604" description="lightGrey" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="612" package="Chameleon">
        <name>lightGreen</name>
        <full_name>\Chameleon\ColorFactory::lightGreen()</full_name>
        <docblock line="612">
          <description>lightGreen</description>
          <long-description></long-description>
          <tag name="return" line="612" description="lightGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="620" package="Chameleon">
        <name>lightPink</name>
        <full_name>\Chameleon\ColorFactory::lightPink()</full_name>
        <docblock line="620">
          <description>lightPink</description>
          <long-description></long-description>
          <tag name="return" line="620" description="lightPink" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="628" package="Chameleon">
        <name>lightSalmon</name>
        <full_name>\Chameleon\ColorFactory::lightSalmon()</full_name>
        <docblock line="628">
          <description>lightSalmon</description>
          <long-description></long-description>
          <tag name="return" line="628" description="lightSalmon" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="636" package="Chameleon">
        <name>lightSeaGreen</name>
        <full_name>\Chameleon\ColorFactory::lightSeaGreen()</full_name>
        <docblock line="636">
          <description>lightSeaGreen</description>
          <long-description></long-description>
          <tag name="return" line="636" description="lightSeaGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="644" package="Chameleon">
        <name>lightSkyBlue</name>
        <full_name>\Chameleon\ColorFactory::lightSkyBlue()</full_name>
        <docblock line="644">
          <description>lightSkyBlue</description>
          <long-description></long-description>
          <tag name="return" line="644" description="lightSkyBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="652" package="Chameleon">
        <name>lightSlateGray</name>
        <full_name>\Chameleon\ColorFactory::lightSlateGray()</full_name>
        <docblock line="652">
          <description>lightSlateGray</description>
          <long-description></long-description>
          <tag name="return" line="652" description="lightSlateGray" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="660" package="Chameleon">
        <name>lightSlateGrey</name>
        <full_name>\Chameleon\ColorFactory::lightSlateGrey()</full_name>
        <docblock line="660">
          <description>lightSlateGrey</description>
          <long-description></long-description>
          <tag name="return" line="660" description="lightSlateGrey" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="668" package="Chameleon">
        <name>lightSteelBlue</name>
        <full_name>\Chameleon\ColorFactory::lightSteelBlue()</full_name>
        <docblock line="668">
          <description>lightSteelBlue</description>
          <long-description></long-description>
          <tag name="return" line="668" description="lightSteelBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="676" package="Chameleon">
        <name>lightYellow</name>
        <full_name>\Chameleon\ColorFactory::lightYellow()</full_name>
        <docblock line="676">
          <description>lightYellow</description>
          <long-description></long-description>
          <tag name="return" line="676" description="lightYellow" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="684" package="Chameleon">
        <name>lime</name>
        <full_name>\Chameleon\ColorFactory::lime()</full_name>
        <docblock line="684">
          <description>lime</description>
          <long-description></long-description>
          <tag name="return" line="684" description="lime" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="692" package="Chameleon">
        <name>limeGreen</name>
        <full_name>\Chameleon\ColorFactory::limeGreen()</full_name>
        <docblock line="692">
          <description>limeGreen</description>
          <long-description></long-description>
          <tag name="return" line="692" description="limeGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="700" package="Chameleon">
        <name>linen</name>
        <full_name>\Chameleon\ColorFactory::linen()</full_name>
        <docblock line="700">
          <description>linen</description>
          <long-description></long-description>
          <tag name="return" line="700" description="linen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="708" package="Chameleon">
        <name>magenta</name>
        <full_name>\Chameleon\ColorFactory::magenta()</full_name>
        <docblock line="708">
          <description>magenta</description>
          <long-description></long-description>
          <tag name="return" line="708" description="magenta" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="716" package="Chameleon">
        <name>maroon</name>
        <full_name>\Chameleon\ColorFactory::maroon()</full_name>
        <docblock line="716">
          <description>maroon</description>
          <long-description></long-description>
          <tag name="return" line="716" description="maroon" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="724" package="Chameleon">
        <name>mediumAquaMarine</name>
        <full_name>\Chameleon\ColorFactory::mediumAquaMarine()</full_name>
        <docblock line="724">
          <description>mediumAquaMarine</description>
          <long-description></long-description>
          <tag name="return" line="724" description="mediumAquaMarine" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="732" package="Chameleon">
        <name>mediumBlue</name>
        <full_name>\Chameleon\ColorFactory::mediumBlue()</full_name>
        <docblock line="732">
          <description>mediumBlue</description>
          <long-description></long-description>
          <tag name="return" line="732" description="mediumBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="740" package="Chameleon">
        <name>mediumOrchid</name>
        <full_name>\Chameleon\ColorFactory::mediumOrchid()</full_name>
        <docblock line="740">
          <description>mediumOrchid</description>
          <long-description></long-description>
          <tag name="return" line="740" description="mediumOrchid" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="748" package="Chameleon">
        <name>mediumPurple</name>
        <full_name>\Chameleon\ColorFactory::mediumPurple()</full_name>
        <docblock line="748">
          <description>mediumPurple</description>
          <long-description></long-description>
          <tag name="return" line="748" description="mediumPurple" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="756" package="Chameleon">
        <name>mediumSeaGreen</name>
        <full_name>\Chameleon\ColorFactory::mediumSeaGreen()</full_name>
        <docblock line="756">
          <description>mediumSeaGreen</description>
          <long-description></long-description>
          <tag name="return" line="756" description="mediumSeaGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="764" package="Chameleon">
        <name>mediumSlateBlue</name>
        <full_name>\Chameleon\ColorFactory::mediumSlateBlue()</full_name>
        <docblock line="764">
          <description>mediumSlateBlue</description>
          <long-description></long-description>
          <tag name="return" line="764" description="mediumSlateBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="772" package="Chameleon">
        <name>mediumSpringGreen</name>
        <full_name>\Chameleon\ColorFactory::mediumSpringGreen()</full_name>
        <docblock line="772">
          <description>mediumSpringGreen</description>
          <long-description></long-description>
          <tag name="return" line="772" description="mediumSpringGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="780" package="Chameleon">
        <name>mediumTurquoise</name>
        <full_name>\Chameleon\ColorFactory::mediumTurquoise()</full_name>
        <docblock line="780">
          <description>mediumTurquoise</description>
          <long-description></long-description>
          <tag name="return" line="780" description="mediumTurquoise" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="788" package="Chameleon">
        <name>mediumVioletRed</name>
        <full_name>\Chameleon\ColorFactory::mediumVioletRed()</full_name>
        <docblock line="788">
          <description>mediumVioletRed</description>
          <long-description></long-description>
          <tag name="return" line="788" description="mediumVioletRed" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="796" package="Chameleon">
        <name>midnightBlue</name>
        <full_name>\Chameleon\ColorFactory::midnightBlue()</full_name>
        <docblock line="796">
          <description>midnightBlue</description>
          <long-description></long-description>
          <tag name="return" line="796" description="midnightBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="804" package="Chameleon">
        <name>mintCream</name>
        <full_name>\Chameleon\ColorFactory::mintCream()</full_name>
        <docblock line="804">
          <description>mintCream</description>
          <long-description></long-description>
          <tag name="return" line="804" description="mintCream" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="812" package="Chameleon">
        <name>mistyRose</name>
        <full_name>\Chameleon\ColorFactory::mistyRose()</full_name>
        <docblock line="812">
          <description>mistyRose</description>
          <long-description></long-description>
          <tag name="return" line="812" description="mistyRose" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="820" package="Chameleon">
        <name>moccasin</name>
        <full_name>\Chameleon\ColorFactory::moccasin()</full_name>
        <docblock line="820">
          <description>moccasin</description>
          <long-description></long-description>
          <tag name="return" line="820" description="moccasin" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="828" package="Chameleon">
        <name>navajoWhite</name>
        <full_name>\Chameleon\ColorFactory::navajoWhite()</full_name>
        <docblock line="828">
          <description>navajoWhite</description>
          <long-description></long-description>
          <tag name="return" line="828" description="navajoWhite" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="836" package="Chameleon">
        <name>navy</name>
        <full_name>\Chameleon\ColorFactory::navy()</full_name>
        <docblock line="836">
          <description>navy</description>
          <long-description></long-description>
          <tag name="return" line="836" description="navy" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="844" package="Chameleon">
        <name>oldLace</name>
        <full_name>\Chameleon\ColorFactory::oldLace()</full_name>
        <docblock line="844">
          <description>oldLace</description>
          <long-description></long-description>
          <tag name="return" line="844" description="oldLace" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="852" package="Chameleon">
        <name>olive</name>
        <full_name>\Chameleon\ColorFactory::olive()</full_name>
        <docblock line="852">
          <description>olive</description>
          <long-description></long-description>
          <tag name="return" line="852" description="olive" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="860" package="Chameleon">
        <name>oliveDrab</name>
        <full_name>\Chameleon\ColorFactory::oliveDrab()</full_name>
        <docblock line="860">
          <description>oliveDrab</description>
          <long-description></long-description>
          <tag name="return" line="860" description="oliveDrab" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="868" package="Chameleon">
        <name>orange</name>
        <full_name>\Chameleon\ColorFactory::orange()</full_name>
        <docblock line="868">
          <description>orange</description>
          <long-description></long-description>
          <tag name="return" line="868" description="orange" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="876" package="Chameleon">
        <name>orangeRed</name>
        <full_name>\Chameleon\ColorFactory::orangeRed()</full_name>
        <docblock line="876">
          <description>orangeRed</description>
          <long-description></long-description>
          <tag name="return" line="876" description="orangeRed" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="884" package="Chameleon">
        <name>orchid</name>
        <full_name>\Chameleon\ColorFactory::orchid()</full_name>
        <docblock line="884">
          <description>orchid</description>
          <long-description></long-description>
          <tag name="return" line="884" description="orchid" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="892" package="Chameleon">
        <name>paleGoldenRod</name>
        <full_name>\Chameleon\ColorFactory::paleGoldenRod()</full_name>
        <docblock line="892">
          <description>paleGoldenRod</description>
          <long-description></long-description>
          <tag name="return" line="892" description="paleGoldenRod" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="900" package="Chameleon">
        <name>paleGreen</name>
        <full_name>\Chameleon\ColorFactory::paleGreen()</full_name>
        <docblock line="900">
          <description>paleGreen</description>
          <long-description></long-description>
          <tag name="return" line="900" description="paleGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="908" package="Chameleon">
        <name>paleTurquoise</name>
        <full_name>\Chameleon\ColorFactory::paleTurquoise()</full_name>
        <docblock line="908">
          <description>paleTurquoise</description>
          <long-description></long-description>
          <tag name="return" line="908" description="paleTurquoise" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="916" package="Chameleon">
        <name>paleVioletRed</name>
        <full_name>\Chameleon\ColorFactory::paleVioletRed()</full_name>
        <docblock line="916">
          <description>paleVioletRed</description>
          <long-description></long-description>
          <tag name="return" line="916" description="paleVioletRed" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="924" package="Chameleon">
        <name>papayaWhip</name>
        <full_name>\Chameleon\ColorFactory::papayaWhip()</full_name>
        <docblock line="924">
          <description>papayaWhip</description>
          <long-description></long-description>
          <tag name="return" line="924" description="papayaWhip" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="932" package="Chameleon">
        <name>peachPuff</name>
        <full_name>\Chameleon\ColorFactory::peachPuff()</full_name>
        <docblock line="932">
          <description>peachPuff</description>
          <long-description></long-description>
          <tag name="return" line="932" description="peachPuff" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="940" package="Chameleon">
        <name>peru</name>
        <full_name>\Chameleon\ColorFactory::peru()</full_name>
        <docblock line="940">
          <description>peru</description>
          <long-description></long-description>
          <tag name="return" line="940" description="peru" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="948" package="Chameleon">
        <name>pink</name>
        <full_name>\Chameleon\ColorFactory::pink()</full_name>
        <docblock line="948">
          <description>pink</description>
          <long-description></long-description>
          <tag name="return" line="948" description="pink" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="956" package="Chameleon">
        <name>plum</name>
        <full_name>\Chameleon\ColorFactory::plum()</full_name>
        <docblock line="956">
          <description>plum</description>
          <long-description></long-description>
          <tag name="return" line="956" description="plum" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="964" package="Chameleon">
        <name>powderBlue</name>
        <full_name>\Chameleon\ColorFactory::powderBlue()</full_name>
        <docblock line="964">
          <description>powderBlue</description>
          <long-description></long-description>
          <tag name="return" line="964" description="powderBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="972" package="Chameleon">
        <name>purple</name>
        <full_name>\Chameleon\ColorFactory::purple()</full_name>
        <docblock line="972">
          <description>purple</description>
          <long-description></long-description>
          <tag name="return" line="972" description="purple" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="980" package="Chameleon">
        <name>rebeccaPurple</name>
        <full_name>\Chameleon\ColorFactory::rebeccaPurple()</full_name>
        <docblock line="980">
          <description>rebeccaPurple</description>
          <long-description></long-description>
          <tag name="return" line="980" description="rebeccaPurple" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="988" package="Chameleon">
        <name>red</name>
        <full_name>\Chameleon\ColorFactory::red()</full_name>
        <docblock line="988">
          <description>red</description>
          <long-description></long-description>
          <tag name="return" line="988" description="red" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="996" package="Chameleon">
        <name>rosyBrown</name>
        <full_name>\Chameleon\ColorFactory::rosyBrown()</full_name>
        <docblock line="996">
          <description>rosyBrown</description>
          <long-description></long-description>
          <tag name="return" line="996" description="rosyBrown" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1004" package="Chameleon">
        <name>royalBlue</name>
        <full_name>\Chameleon\ColorFactory::royalBlue()</full_name>
        <docblock line="1004">
          <description>royalBlue</description>
          <long-description></long-description>
          <tag name="return" line="1004" description="royalBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1012" package="Chameleon">
        <name>saddleBrown</name>
        <full_name>\Chameleon\ColorFactory::saddleBrown()</full_name>
        <docblock line="1012">
          <description>saddleBrown</description>
          <long-description></long-description>
          <tag name="return" line="1012" description="saddleBrown" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1020" package="Chameleon">
        <name>salmon</name>
        <full_name>\Chameleon\ColorFactory::salmon()</full_name>
        <docblock line="1020">
          <description>salmon</description>
          <long-description></long-description>
          <tag name="return" line="1020" description="salmon" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1028" package="Chameleon">
        <name>sandyBrown</name>
        <full_name>\Chameleon\ColorFactory::sandyBrown()</full_name>
        <docblock line="1028">
          <description>sandyBrown</description>
          <long-description></long-description>
          <tag name="return" line="1028" description="sandyBrown" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1036" package="Chameleon">
        <name>seaGreen</name>
        <full_name>\Chameleon\ColorFactory::seaGreen()</full_name>
        <docblock line="1036">
          <description>seaGreen</description>
          <long-description></long-description>
          <tag name="return" line="1036" description="seaGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1044" package="Chameleon">
        <name>seaShell</name>
        <full_name>\Chameleon\ColorFactory::seaShell()</full_name>
        <docblock line="1044">
          <description>seaShell</description>
          <long-description></long-description>
          <tag name="return" line="1044" description="seaShell" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1052" package="Chameleon">
        <name>sienna</name>
        <full_name>\Chameleon\ColorFactory::sienna()</full_name>
        <docblock line="1052">
          <description>sienna</description>
          <long-description></long-description>
          <tag name="return" line="1052" description="sienna" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1060" package="Chameleon">
        <name>silver</name>
        <full_name>\Chameleon\ColorFactory::silver()</full_name>
        <docblock line="1060">
          <description>silver</description>
          <long-description></long-description>
          <tag name="return" line="1060" description="silver" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1068" package="Chameleon">
        <name>skyBlue</name>
        <full_name>\Chameleon\ColorFactory::skyBlue()</full_name>
        <docblock line="1068">
          <description>skyBlue</description>
          <long-description></long-description>
          <tag name="return" line="1068" description="skyBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1076" package="Chameleon">
        <name>slateBlue</name>
        <full_name>\Chameleon\ColorFactory::slateBlue()</full_name>
        <docblock line="1076">
          <description>slateBlue</description>
          <long-description></long-description>
          <tag name="return" line="1076" description="slateBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1084" package="Chameleon">
        <name>slateGray</name>
        <full_name>\Chameleon\ColorFactory::slateGray()</full_name>
        <docblock line="1084">
          <description>slateGray</description>
          <long-description></long-description>
          <tag name="return" line="1084" description="slateGray" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1092" package="Chameleon">
        <name>slateGrey</name>
        <full_name>\Chameleon\ColorFactory::slateGrey()</full_name>
        <docblock line="1092">
          <description>slateGrey</description>
          <long-description></long-description>
          <tag name="return" line="1092" description="slateGrey" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1100" package="Chameleon">
        <name>snow</name>
        <full_name>\Chameleon\ColorFactory::snow()</full_name>
        <docblock line="1100">
          <description>snow</description>
          <long-description></long-description>
          <tag name="return" line="1100" description="snow" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1108" package="Chameleon">
        <name>springGreen</name>
        <full_name>\Chameleon\ColorFactory::springGreen()</full_name>
        <docblock line="1108">
          <description>springGreen</description>
          <long-description></long-description>
          <tag name="return" line="1108" description="springGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1116" package="Chameleon">
        <name>steelBlue</name>
        <full_name>\Chameleon\ColorFactory::steelBlue()</full_name>
        <docblock line="1116">
          <description>steelBlue</description>
          <long-description></long-description>
          <tag name="return" line="1116" description="steelBlue" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1124" package="Chameleon">
        <name>tan</name>
        <full_name>\Chameleon\ColorFactory::tan()</full_name>
        <docblock line="1124">
          <description>tan</description>
          <long-description></long-description>
          <tag name="return" line="1124" description="tan" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1132" package="Chameleon">
        <name>teal</name>
        <full_name>\Chameleon\ColorFactory::teal()</full_name>
        <docblock line="1132">
          <description>teal</description>
          <long-description></long-description>
          <tag name="return" line="1132" description="teal" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1140" package="Chameleon">
        <name>thistle</name>
        <full_name>\Chameleon\ColorFactory::thistle()</full_name>
        <docblock line="1140">
          <description>thistle</description>
          <long-description></long-description>
          <tag name="return" line="1140" description="thistle" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1148" package="Chameleon">
        <name>tomato</name>
        <full_name>\Chameleon\ColorFactory::tomato()</full_name>
        <docblock line="1148">
          <description>tomato</description>
          <long-description></long-description>
          <tag name="return" line="1148" description="tomato" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1156" package="Chameleon">
        <name>turquoise</name>
        <full_name>\Chameleon\ColorFactory::turquoise()</full_name>
        <docblock line="1156">
          <description>turquoise</description>
          <long-description></long-description>
          <tag name="return" line="1156" description="turquoise" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1164" package="Chameleon">
        <name>violet</name>
        <full_name>\Chameleon\ColorFactory::violet()</full_name>
        <docblock line="1164">
          <description>violet</description>
          <long-description></long-description>
          <tag name="return" line="1164" description="violet" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1172" package="Chameleon">
        <name>wheat</name>
        <full_name>\Chameleon\ColorFactory::wheat()</full_name>
        <docblock line="1172">
          <description>wheat</description>
          <long-description></long-description>
          <tag name="return" line="1172" description="wheat" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1180" package="Chameleon">
        <name>white</name>
        <full_name>\Chameleon\ColorFactory::white()</full_name>
        <docblock line="1180">
          <description>white</description>
          <long-description></long-description>
          <tag name="return" line="1180" description="white" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1188" package="Chameleon">
        <name>whiteSmoke</name>
        <full_name>\Chameleon\ColorFactory::whiteSmoke()</full_name>
        <docblock line="1188">
          <description>whiteSmoke</description>
          <long-description></long-description>
          <tag name="return" line="1188" description="whiteSmoke" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1196" package="Chameleon">
        <name>yellow</name>
        <full_name>\Chameleon\ColorFactory::yellow()</full_name>
        <docblock line="1196">
          <description>yellow</description>
          <long-description></long-description>
          <tag name="return" line="1196" description="yellow" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="1204" package="Chameleon">
        <name>yellowGreen</name>
        <full_name>\Chameleon\ColorFactory::yellowGreen()</full_name>
        <docblock line="1204">
          <description>yellowGreen</description>
          <long-description></long-description>
          <tag name="return" line="1204" description="yellowGreen" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy9nG1v48YRx9/fpyDSF0kOxVlPlKikaMLHFmiDO5yDBgUCFGtpLbKmuDRJWVWLfvfyQZJlcnXz3xEaC4mN03+089NyuTO7s/zDD3mcv7Pqn0xsZZmLlbT8uP4zlSr7/l37zq68+LdffZWqovz1z/JfTvvnUXT3/n3723pv+akoS6t9MxKrShUHKy/US7KWpfUiikTtSiuWaS4L63GXrapEZaX1qAprr4qnJNtY+6SKrVXbzofjh54+++dYFtIS9X/j2bj1eX1UWuJFJKl4SOXvrSpu3y+r7j0rKa2vq0JkNV8hs+rr/qf+KPLk/HcppRVXVV5+d3e33+8/7KflKlYqLT+s1Paua+z46x/tl/ZBlPnZuv4Gn8Tm4gs7vnPX/l4Nv5r/dILLr7D7qAuHL//5x0JWuyKzzh1wRXh3/jvfPaTJyiorUdW/Tl/5pdk331rfXXzgq0vNz7G9TO5fJd989btR+7OIvvr2+7P8v++uwYjaA+mlO/llFJ2MBDkbcTCiUeRE0WgEYmRV8ryTv8RJRZHolTTMhR2Lxw29YAHzPO8EwfFWQftf63mXUxQZ9EPdyra+lWRUL+h0EENnxSFZ1BzBDCb5966gIHoS2v/GgDkYDDrhQSYbwvW+hHS9NWC5bkd24MOuJ+UzdS8aaGjnWwuW91E48+Fr5iGtJxnC+Z6E9r0x4M8DBq5nq1iu3XSrsjXJoNciMBeWzA7x/ACnIi8mwzntgTmdNT1hMILrVv6WqFQSEYZWBzF0VhwSx5144QQmKdQ+IyB6Etr/xoDjumtP3IkLu74r0sMvSlGjQSOjEU5GHIwg9BwHDiVWYi0rOsLTyUiMsxEHw46WoQvfoFaxKKpC1jkPwaHT0SBnK25kgd9q66SlzlIEFajqZADH0Yh1XU3my3EIY6hCpARCT0K73xjwpoVFZOM9oIrsMVV7WQDj4poWgbmw5FDNZ0s7hCe7pr0ySYkARKOCSBobXs9EDh7/rYpkWypiwhiKaILOhDUq/PFsigMcBOX9WwXteq3//ydua1E80YNBoyL9P9lwoybHM2Hwye9fo4IYfHY/OJ4Zw59UupbZZyrwuCaFaM6GHKQ6/JiPzJAKcQBo3qowkNqGFQsum5cZg4QYJINB/nYMEhgffRlKIZkjZD7Dw6emqb/E4imhMfoyCKM1Yo2KwFvMjUbFT2Ijs4pY6NMLIZSjGSvL80zvvB/T5EWC15dWCyG9WrJSDnvuTYzmxI+FyKjFNK0Oo2mteGGV45uNmY/FKk6AKWWgA0kaKw7Jcjmd+HB81bT1WQIYb0UQQ23CHSpmXXEvmvUvmmGggzA6Kw5JuFzOF/D6SNuWFOCQ1ygxmqMdq2ciz3eMhvt9kztjcbBOihGdDDlIM2camN2X2+aw+EsnxZG4kdgkmtUvBhISjumkJki8wMwc6edd8bxTCbW6dU0KIZ0NeUGaHwZjEyRkAVurg2D4C9jLOtgMpjCJlPmnJCNWVTQqmuJow5v+x7OlEcP90wG4r2mFEMnRjHdpeSYrFckWuJsNRDREZ8Jap1s2LyMA8t41EGEAvPuVIYBab5ClU62OxjhbcUjG4dJgn+0xKaRXJNSmrU5GcpyNWLnkpPmBMdJm3RwoftELaZRXM+YSsBvBAfKjKmRZAVGlXkjDvJqxpvaJ4xn0zG4VlwmR4Q9FNERnwusNk53ojUiy8kEV6ssIOhkJcTbiLcs3LxgjVmUFDBCtjgY5W7E6xDGpdNuolMh+ewra+1rPu5CaejYTv4FFbZ0MImAvZgeua09wDDL02BjGHRtm0OGMmhfuNxVxbAzDjQ0z1jD2m5oH+hLEc+5CtWOw0tM283eZpmoPAAyEGEZnxto8CKIIXwuNVSYPgSRINCoS42TDrouEOyRWFZ3JDUUAQcXP4+ZLD64vTLJ1IjJy+VMnIyHORhwMP7B9G56Mm6Y2REAx0EAAG1YoMWv2OuCQLnlRBXEr7Uto3xsDZmhtMACe6G2zvoR0/Ym7XRaNwrkDXzOpeJHZWhZf9l6jIgFONqwF83k4j+AF81NLdW5bxhhIXwrTtIbMK2rUlFKhSPsMSNV0MgDlaMQqyfMjg/2xVG5V5sfJ4yO1LXNFScNc2HFzaLzuOU02MVDzqZPRJCcjXtAROOHcCMOn6wy1OgzEZ1ccGoWxXVtkbZJOBnIwq5NCoyqxtqlz6RAS2xIWGFzPnnf8KnIDeI7vWiVTPZ0MJGImfcG0eRliUJmfToZi8HJAHgY5y+h0MAhvnlmOwnBpdhugcxCdDOPg5yHe3Id399qmkCIGvRBD4Zcx1FPlCC9j6BqD6hiuSUGgGyoZJiNv4hoiIRt+V5QgEH/Lz1n4oUHg3LaG1TFc1YJMt1QyLBaOs4S30S7bg27RrFqGt5a/FVUlZYpefRotSHWyZO2wjfxZAB92aduD4x1mmHNDdFP/hAaz0JbsmK1hd2yZO/8mB6eaVqC79FAGEbDvztOJH0wNgsuMRshM3c94rjc7s3hCtkUKloci0v0tv1DZbDtzKwpFBS0DDeB+Y8HbDDGpHd3KdbLbus878RPwjIUvqGmini2rqGTuB3jM0rVIzxlaHchzyzEkfPGlawspt76iBGn4Jdeea9t4+tW19mlX5CnUNwMlyNPZsZKw6WIUwEWxXWtYxH9VCzLdEvNPfW+6gHOyY3tY/fJ1Mcp1Sw3zwps7IRx6HRvM69vQBu8xrRyFezVmBjXu0vC+B5b/XheDaDeVAM+cYIyf1Oga7Mp0yS3L62IQ7GzK2r5cjG0H3vPYJusMW1+/oqSRLuxYRZDL8XKBRxVJVvmFFFsKZigDSI5GzEcHRfgiwTYpq8NnRQ4hjQzAOBpxnyEU4vdxtVqJMqHuckMVDXG04TJ48AjJxIv4pwLK7fRCkuTCjFm4FrpwOFc3RizO9BSI+6yFmPY0PDysVbr+q1gRHTAUkd4fTVhffBDZeLKpmqOelPtvJYDztQG3ag1P1NpmgkI8AO73ZBhCY8TKyTwnnMCRvwIOvw40NMANh15d26AT2nbI0EMnAxmY4UYUzYww6ERyoAEAuMlj4NbJFjyIc5FK8HkW16QkyxtD1iZ4GDr4SkXbHJ2I6GQYCnsv0om8pWOCAaYd16QQzk0phxvVfQOnik1zYMJxTQoh3ZRsBN5ihB/dy0UuDqIOdXKKR6MDYE5WzKAwCuCgMJdiFX/aPT4SIBoZzXEyYoaDrgfvb+Wy2FEEbxSA88WOV3Tr2FN45Tsnqw5yw4KDnF1r4I98eLUuT3dEYtpT0H7XetbADdxRAKcNudqvkUOSWh3NcLbi7X2GBps+ObDyO9DQBOzVXscoDSrkg6zzXmT5+pqUZHljyNsqmU7xLfaCmtwKsymt4IaxJntXhSoPHv0wWJ2MBjgZsQaD35y/wzEOAqhs0MkAjKMRa3F2PF/iq0ylWK9TCfSHXkiiXJjxHqkzs8dwjFQClWgDDYDArj9zndECLgcoRbZGRoZWB1CcrFgkM3c2h4d4CW2paVQ0xS2lc6Hj2fDTkuuW7mOZEgXnGhXC0Now63tsPA0qE5llRJHGQEP731qwkriRPZnAgVOZpC/UOZ+BBvC+sWCF2aPmBXuPVF0ORbT/t9VahnC8XWI7yDoZDXHLrvHctQ1OwJRYtahOhmGwa0Tr2BUvGC+x8lCdDMVgFoWaYWRU3WRPQTufsSslXXxPsUSrDvRCmuLmSoNoAYeuJVaUq5PRILeU4s7mzgQ/BF1Rh6gqs+NTFe/gVFC7jB9frSR1hq2noN2WvHNrI6Nza1WclBWVNw9FtPedCeuLd7wogFe5K7UVFXHWfKCh3W8tmAf+pzM4Gq2w9XmdjGa4qRRoFI4C+Cp6AZ4EONCQAC/sJwCGoTPBw+l9LAXhfF9C+t4a8GpigtCDM+M9XYLRlwCu8x8DZnDUtG3mfqueEP/7OgyitWIWJtn4GfkDcGxkoCEJDjcdFsHX7bp2gBBILwQ5+Hueru7oRff/H/74PzySX88=</source>
  </file>
  <file path="Transformations/ScaleMode.php" generated-path="Transformations.ScaleMode.html" hash="181ad8e8cb9e37c039c7e489815ce289" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="AbstractEnumeration">\Eloquent\Enumeration\AbstractEnumeration</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Transformations" line="11" package="Chameleon\Transformations">
      <extends>\Eloquent\Enumeration\AbstractEnumeration</extends>
      <name>ScaleMode</name>
      <full_name>\Chameleon\Transformations\ScaleMode</full_name>
      <docblock line="11">
        <description>Class ScaleMode</description>
        <long-description></long-description>
        <tag name="package" line="11" description="Chameleon\Transformations"/>
      </docblock>
      <constant namespace="Chameleon\Transformations" line="12" package="Chameleon\Transformations">
        <name>NEAREST_NEIGHBOUR</name>
        <full_name>\Chameleon\Transformations\ScaleMode::NEAREST_NEIGHBOUR</full_name>
        <value>IMG_NEAREST_NEIGHBOUR</value>
        <docblock line="12">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Chameleon\Transformations" line="13" package="Chameleon\Transformations">
        <name>BILINEAR_FIXED</name>
        <full_name>\Chameleon\Transformations\ScaleMode::BILINEAR_FIXED</full_name>
        <value>IMG_BILINEAR_FIXED</value>
        <docblock line="13">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Chameleon\Transformations" line="14" package="Chameleon\Transformations">
        <name>BICUBIC</name>
        <full_name>\Chameleon\Transformations\ScaleMode::BICUBIC</full_name>
        <value>IMG_BICUBIC</value>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Chameleon\Transformations" line="15" package="Chameleon\Transformations">
        <name>BICUBIC_FIXED</name>
        <full_name>\Chameleon\Transformations\ScaleMode::BICUBIC_FIXED</full_name>
        <value>IMG_BICUBIC_FIXED</value>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJx9jltLAzEQhd/7K+ZR96X4vBZt17QGbIVewIeFZcxO28VssmayoIj/3ZiupRd1IExy5nxncn3TbJsehCpJaXR0wd5Vyhf+vSEeXF2mcWiwJm5QEWTbcNVkTb50aHhtXY2+sobTXnS2TCC0fW3J+FyYtiYX5/nwOSSj8gdah/STJHZIINPIDAuFmqa2pB/5Nqx+wc0/2ztnP/Z1ZVCDOs4CevNkSoZfPgIfOz6UCmEeZmI4F4tlMRNycj96XM1hAHI6Kc709AQcyQf5bSrG8kncddSxeI5kq3D23vj6w3QSe6DtgM8vl8aLJg==</source>
  </file>
  <file path="Transformations/FlipMode.php" generated-path="Transformations.FlipMode.html" hash="310f40f6b16d4442477927fca5d82e99" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="AbstractEnumeration">\Eloquent\Enumeration\AbstractEnumeration</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Transformations" line="14" package="Chameleon\Transformations">
      <extends>\Eloquent\Enumeration\AbstractEnumeration</extends>
      <name>FlipMode</name>
      <full_name>\Chameleon\Transformations\FlipMode</full_name>
      <docblock line="14">
        <description>Class FlipMode</description>
        <long-description></long-description>
        <tag name="api" line="14" description=""/>
        <tag name="package" line="14" description="Chameleon\Transformations"/>
      </docblock>
      <constant namespace="Chameleon\Transformations" line="18" package="Chameleon\Transformations">
        <name>HORIZONTAL</name>
        <full_name>\Chameleon\Transformations\FlipMode::HORIZONTAL</full_name>
        <value>IMG_FLIP_HORIZONTAL</value>
        <docblock line="18">
          <description>Horizontal flip mode. Do not use this directly! Use FlipMode::HORIZONTAL() instead!</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Chameleon\Transformations" line="23" package="Chameleon\Transformations">
        <name>VERTICAL</name>
        <full_name>\Chameleon\Transformations\FlipMode::VERTICAL</full_name>
        <value>IMG_FLIP_VERTICAL</value>
        <docblock line="23">
          <description>Vertical flip mode. Do not use this directly! Use FlipMode::VERTICAL() instead!</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Chameleon\Transformations" line="28" package="Chameleon\Transformations">
        <name>BOTH</name>
        <full_name>\Chameleon\Transformations\FlipMode::BOTH</full_name>
        <value>IMG_FLIP_BOTH</value>
        <docblock line="28">
          <description>Horizontal and vertical flip modes combined. Do not use this directly! Use FlipMode::BOTH() instead!</description>
          <long-description></long-description>
        </docblock>
      </constant>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJydklFPwjAUhd/5FZc34MHFV5Ao4pAlIIZMHswSUtqLNHbtbC9GNP53y9hkKhpiX9qde3rut5uenWerrAZ+CeSKWWw4spLTnDYZuu5ps5MXNUvRZYwj9Ff+qNDoJLZMu6WxKSNptOvUcufaIYTKPK1RUxLqdYo2rye9hU9mnCpacSVotfIdWtBXzDkYKJmNjcBCLYsXLJPfJc/0yB7+wCqcQb4vpWYK+JcmgC+EWjg4AAhvu+tVyF3jobHy1WjycUsfBKlPOoErA9pQPgNaSQdCWuSkNnW481LZsd0eTqbR/eQm7o0aTZDaETJRr8QHn2fuf4Fg74cuROPr+WAU3c73ajHIA5wztCT5/yhn4TSO+scylu4qYan9zleZI9MCnn/gOh+fLqRGcTz45SQeHge9dVaBt9+7F//+AU0y5aI=</source>
  </file>
  <file path="Transformations/RotateMode.php" generated-path="Transformations.RotateMode.html" hash="e34d960c0be15f363654071629d6c921" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="AbstractEnumeration">\Eloquent\Enumeration\AbstractEnumeration</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Transformations" line="11" package="Chameleon\Transformations">
      <extends>\Eloquent\Enumeration\AbstractEnumeration</extends>
      <name>RotateMode</name>
      <full_name>\Chameleon\Transformations\RotateMode</full_name>
      <docblock line="11">
        <description>Class RotateMode</description>
        <long-description></long-description>
        <tag name="package" line="11" description="Chameleon\Transformations"/>
      </docblock>
      <constant namespace="Chameleon\Transformations" line="15" package="Chameleon\Transformations">
        <name>CLOCKWISE</name>
        <full_name>\Chameleon\Transformations\RotateMode::CLOCKWISE</full_name>
        <value>1</value>
        <docblock line="15">
          <description>Clockwise rotation</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Chameleon\Transformations" line="20" package="Chameleon\Transformations">
        <name>COUNTER_CLOCKWISE</name>
        <full_name>\Chameleon\Transformations\RotateMode::COUNTER_CLOCKWISE</full_name>
        <value>1</value>
        <docblock line="20">
          <description>Counter clockwise rotation</description>
          <long-description></long-description>
        </docblock>
      </constant>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJyVj09Lw0AQxe/9FHPUXELPtaiEHIr9A7XiJVDGzdSGbmbTnQkq4nd3u6YSSil0LzPMvP29N3f3zbYZQHglGYuebkR9ZXStXw3JeHg7ikvGmqRBQ5BtQ2vJcbHyyLJxvkatHMtoEJWtEOTW7VtiLXJua/JxXzy+BTIa7c26L2mSxAoJZBZFYOkUlWaupOP8IXjv8P2CfadMY91UjBbMCQzoU4lLgTNR4PsP0I9zjOTM7qMKZ/kDKWh72/S/NyGDQjZdZE+vk+ccxjDszjvHdC0r+ZDwGvbiZb7Kl+sTj4Pg5xeOwoRB</source>
  </file>
  <file path="Mask.php" generated-path="Mask.html" hash="204191d483f5ac23a76f1ad9f451bbd2" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytlU2P2jAQhu/7K+bAASi7qNelLF2t1I9DpUpU7RFMMtlYdezIdoCo7X/v2A7BsISmanMgxp55Z+aZwbxZlHl5A/SkmAimcWis5old2bpEA3N4PZr5Y8kKNCVLEJ5yWgpUcnbjTyqDsCzFO77H9FFrVjf70/HYv2EMn5j5DtwAA7tTtykvUBquJBPAnANsmMEUlDzVgR23OeQoStSQVTKx5GMOmlZBwUoY7idQjyBRSqdcMktJ04nNkeTwJBSXFrVbnAS5O+h9tGCs0uS/UUogk7BloqKvQyZTWMtKiPXIaXsrH8HkzEFSGRX2WfOCW77FVnBtdYVrKEjKAJVAi43ACawzJgyup0GyOedFa3EQmPo3NcWYABD3FmVqziD9CLRPiIcElqEc77vjqc2jw9ju7ZZpRyfam7brUvMtUYWBV5j1CpYjf87tP0ULEt3hnjyWhOaBKCcUuytayTQrXLymgggH7UK577IOGcQFvbCP8q42giftkMJq1aY2PMaexMoj6hxEz8Dm9Au5fWhym7fELxo1Gc2PpGIzKgOlvb+P0zjTH59rjY4Svzqxv0fb+NPQOzRd2DXaSktf77eLrLvZPaP1LsMR3HuBU06N8mk5fXNvsDXJ3/XI/sPftp7SDz498z/v3/UC/J0EzB7uvVIZ7sNSSV7xal3ReHfOfX2JhLsSf7r7qi+Cry7Px2b4983g147Iwmn9gYnKMoOW6h0O6nhSw+i9IsVe07r8r8DgC135++ifppOgt6yvW7ZEYRBSdD5+dYm/QZH1Qm+60E8a8CGaa4TT7LqDQgOWVxowOSjNOjsZtyh8Lh5+A+m3Rnw=</source>
  </file>
  <file path="Primitives/Primitive.php" generated-path="Primitives.Primitive.html" hash="6f4cebfb1b85751e637db654e21e9272" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytVTtvwjAQ3vkVNzAAUoXUEVpA7VCxIRV1YjGJSywSx7IvbSXa/944D8cJSTClHhIn9/7u8/lhKQIxgHRxElEliEfhOUi3IY35biNZxJB9UDUfZEqJssVv1MNY3s9bROuIHGibYEMQqeRqty52hWeyVyiJh+CFRCkwkYFFIqQR5ahgXf09ZUZ6CRljmgf1YShixrHw1xDtY+lTaUJ2amwD5h05Vapdh3jHg4wT7teTrxUgkn3IPHhPuIcs5uBL8jnK8IAh06+xnWJDWVHcxIrp/aiAt6hrDLNUGr5bpes1xIApuFtApgSPBgVbSVJMJM91K8lPdxoHKw0duEzl1OnWpNDqfzqZVJYTeKUIOd4gciAtqa24EkSSCEqufPMkDNMK8y/YBrTFHlZFXhot6/+0D/Qnmx+jZRnQxLqEfo1fWReaVHPqQwOnF2ecCs81oJxqPzRr15VW9fc3vONUOTUey5MGjIP46ieApvawssC08d32NxDAHP9RPaJb+421JgCeT5ImhFdSwBGxIoIuoB8nB1JUeIxnmUcXPrTM0AuMMGP1lnFwAQ9zdzgzojns/zIWmj7+dzQ449Y2HjrGZz8rzjAZXzEtzm/Pqs78uVz8AixrZ9U=</source>
  </file>
  <file path="Primitives/Line.php" generated-path="Primitives.Line.html" hash="9a996dfd573535ff70eff968c282753e" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Image">\Chameleon\Image</namespace-alias>
    <namespace-alias name="Vector2">\Chameleon\Vector2</namespace-alias>
    <namespace-alias name="ColorFactory">\Chameleon\ColorFactory</namespace-alias>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Primitives" line="9" package="Default">
      <extends/>
      <implements>\Chameleon\Primitives\IPrimitive</implements>
      <name>Line</name>
      <full_name>\Chameleon\Primitives\Line</full_name>
      <docblock line="9">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="9" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="10" package="Default">
        <name>$start</name>
        <full_name>\Chameleon\Primitives\Line::start</full_name>
        <default></default>
        <docblock line="10">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="11" package="Default">
        <name>$end</name>
        <full_name>\Chameleon\Primitives\Line::end</full_name>
        <default></default>
        <docblock line="11">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="12" package="Default">
        <name>$color</name>
        <full_name>\Chameleon\Primitives\Line::color</full_name>
        <default></default>
        <docblock line="12">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="13" package="Default">
        <name>$thickness</name>
        <full_name>\Chameleon\Primitives\Line::thickness</full_name>
        <default></default>
        <docblock line="13">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="21" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Primitives\Line::__construct()</full_name>
        <docblock line="21">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="21" description="&lt;p&gt;Start vector&lt;/p&gt;" type="\Chameleon\Vector2" variable="$start">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="param" line="21" description="&lt;p&gt;End vector&lt;/p&gt;" type="\Chameleon\Vector2" variable="$end">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$start</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$end</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="34" package="Default">
        <name>getStart</name>
        <full_name>\Chameleon\Primitives\Line::getStart()</full_name>
        <docblock line="34">
          <description>Get start vector</description>
          <long-description></long-description>
          <tag name="return" line="34" description="the start vector" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="44" package="Default">
        <name>setStart</name>
        <full_name>\Chameleon\Primitives\Line::setStart()</full_name>
        <docblock line="44">
          <description>Set start vector</description>
          <long-description></long-description>
          <tag name="param" line="44" description="&lt;p&gt;The start vector&lt;/p&gt;" type="\Chameleon\Vector2" variable="$start">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="return" line="44" description="" type="\Chameleon\Primitives\Line">
            <type>\Chameleon\Primitives\Line</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$start</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="55" package="Default">
        <name>getEnd</name>
        <full_name>\Chameleon\Primitives\Line::getEnd()</full_name>
        <docblock line="55">
          <description>Get end vector</description>
          <long-description></long-description>
          <tag name="return" line="55" description="The end vector" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="65" package="Default">
        <name>setEnd</name>
        <full_name>\Chameleon\Primitives\Line::setEnd()</full_name>
        <docblock line="65">
          <description>Set end vector</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;The end vector&lt;/p&gt;" type="\Chameleon\Vector2" variable="$end">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="return" line="65" description="" type="\Chameleon\Primitives\Line">
            <type>\Chameleon\Primitives\Line</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$end</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="76" package="Default">
        <name>getThickness</name>
        <full_name>\Chameleon\Primitives\Line::getThickness()</full_name>
        <docblock line="76">
          <description>Get line thickness in px</description>
          <long-description></long-description>
          <tag name="return" line="76" description="thickness in px" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="86" package="Default">
        <name>setThickness</name>
        <full_name>\Chameleon\Primitives\Line::setThickness()</full_name>
        <docblock line="86">
          <description>Set line thickness</description>
          <long-description></long-description>
          <tag name="param" line="86" description="&lt;p&gt;Thickness in px&lt;/p&gt;" type="integer" variable="$thickness">
            <type>integer</type>
          </tag>
          <tag name="return" line="86" description="" type="\Chameleon\Primitives\Line">
            <type>\Chameleon\Primitives\Line</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$thickness</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="97" package="Default">
        <name>getColor</name>
        <full_name>\Chameleon\Primitives\Line::getColor()</full_name>
        <docblock line="97">
          <description>Get line color</description>
          <long-description></long-description>
          <tag name="return" line="97" description="the color" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="107" package="Default">
        <name>setColor</name>
        <full_name>\Chameleon\Primitives\Line::setColor()</full_name>
        <docblock line="107">
          <description>Set line color</description>
          <long-description></long-description>
          <tag name="param" line="107" description="&lt;p&gt;The color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="return" line="107" description="" type="\Chameleon\Primitives\Line">
            <type>\Chameleon\Primitives\Line</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="118" package="Default">
        <name>getPosition</name>
        <full_name>\Chameleon\Primitives\Line::getPosition()</full_name>
        <docblock line="118">
          <description>Get position of the line (alias for Line::getStart)</description>
          <long-description></long-description>
          <tag name="return" line="118" description="" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Primitives\IPrimitive::getPosition()" refers="\Chameleon\Primitives\IPrimitive::getPosition()" link="/classes/Chameleon.Primitives.IPrimitive.html#method_getPosition"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="130" package="Default">
        <name>setPosition</name>
        <full_name>\Chameleon\Primitives\Line::setPosition()</full_name>
        <docblock line="130">
          <description>Set position of the line</description>
          <long-description>Moves the line to a new position, changing both the start and end vectors</long-description>
          <tag name="param" line="130" description="&lt;p&gt;The new position of the start vector&lt;/p&gt;" type="\Chameleon\Vector2" variable="$position">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="return" line="130" description="" type="\Chameleon\Primitives\Line">
            <type>\Chameleon\Primitives\Line</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Primitives\IPrimitive::setPosition()" refers="\Chameleon\Primitives\IPrimitive::setPosition()" link="/classes/Chameleon.Primitives.IPrimitive.html#method_setPosition"/>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$position</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="147" package="Default">
        <name>draw</name>
        <full_name>\Chameleon\Primitives\Line::draw()</full_name>
        <docblock line="147">
          <description>Draw the line onto the specified image</description>
          <long-description></long-description>
          <tag name="param" line="147" description="&lt;p&gt;The image&lt;/p&gt;" type="\Chameleon\Image" variable="$image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="return" line="147" description="" type="\Chameleon\Primitives\Line">
            <type>\Chameleon\Primitives\Line</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Primitives\IPrimitive::draw()" refers="\Chameleon\Primitives\IPrimitive::draw()" link="/classes/Chameleon.Primitives.IPrimitive.html#method_draw"/>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="9" code="PPC:ERR-50005">No summary for class \Chameleon\Primitives\Line</error>
      <error line="10" code="PPC:ERR-50007">No summary for property $start</error>
      <error line="11" code="PPC:ERR-50007">No summary for property $end</error>
      <error line="12" code="PPC:ERR-50007">No summary for property $color</error>
      <error line="13" code="PPC:ERR-50007">No summary for property $thickness</error>
    </parse_markers>
    <source>eJytV1tr2zAUfu+v0EMf7JJSusdkbQfdhcAGpe3GAoWiOnIi6khGUnph9L9PkhVbsiRf0gqaGuvcvvMdHR1/vijX5QGQi8AN4iXMELhcy8cCUXJ3xfAGC/yE+OxAC225vT3fwBWaBTb+oExQ9im0dUkLyr5Dtf8a3ed3c/3feM0KyDn4iQkCeFMWaIOI4GBeRwf+aTG1SoafoEDgkAvIxMx/j8gy8DarvHnvxRpnjwTxHX61To6O6mdwBC51cBklXLCtgmVt2nJfSsjgBpjUmADBjf59Qi1FT1qGDb7JP0/ypAl6+1DgDORbkglMCbi/r4NKXK8Tx25qpU8tBZqD43NQRXjm5dIRUoGdmbSGJeocSrnTiBWdf7lvV8d0KhgksiSZpDtJG823KBc/kDBRe3lyksuQ2DJSZ0GsUUwtnt4VEpq8JAXT2pKbSePGTegQHDcDcQRL6jaOpkbOUZEPQsl3KF0nCrOysU/pRFM0lGEUOgdd/KqMBJU62ZXHbQS3Tl/pZrY//sDhj2LYi1OFze0B3Xzap9wWeDeXhWrqTYfABJQvPaxiIjo0Oim93alpYpWhblKt9t8P58aD002vct9cMOA2Cmkvhhuorp8+pu1ufRjAr9bHsK57fg/X1RigG3RbvJNoraZJNha6eW5d/wM47gy+4td4rmYLfX7bSnsRW0FzjPdxurtd22OOWu/msqQc69hornnS6UlggSEHuXSrxrbpdHdbpsNa9lCer4zzEY26ubeHEh5CaMvYz7+oHJabPAgKICDoubYxAdkakhUmK/BAxdoaPaBssU2D7+kdde+uY1P1ZTvaBfuRk0Cdbc99rAKXL6aNWFNBxcFfSdmxe8HUG60hcfkaM7KIGVl4Rjx1rlw1+audD1FceIqLuKKJKuZPAVi+9CsHfWrl17Q1eo89xl8ZfG5qlhJZtbp0SpThHKOl/OqSH3o93U6JgEMtqYuxrTO+4pYyrMS2G6kynIPE7XXtTxqd0io0KcLQCnOBmG6h8/w3eST0mbRNzDwL3gttUVJTX5NJ40Tyo0O/RpxuWYaSdOL0IGsUMa7C5hUlibflAgr5Cqv4TbApxMlIlcUQlWqIHuHDVlAFHtGwsV8bPtGyuhttc2YQSD0rnUkfwelpq1Dehh3F6vfi/OA/wpyHMQ==</source>
  </file>
  <file path="Primitives/IPrimitive.php" generated-path="Primitives.IPrimitive.html" hash="018ff62a81ced9c99096fa0d6b978da4" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Vector2">\Chameleon\Vector2</namespace-alias>
    <namespace-alias name="Image">\Chameleon\Image</namespace-alias>
    <interface namespace="Chameleon\Primitives" line="7" package="Default">
      <name>IPrimitive</name>
      <full_name>\Chameleon\Primitives\IPrimitive</full_name>
      <docblock line="7">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="13" package="Default">
        <name>getPosition</name>
        <full_name>\Chameleon\Primitives\IPrimitive::getPosition()</full_name>
        <docblock line="13">
          <description>Get Primitive position</description>
          <long-description></long-description>
          <tag name="return" line="13" description="position vector" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="21" package="Default">
        <name>setPosition</name>
        <full_name>\Chameleon\Primitives\IPrimitive::setPosition()</full_name>
        <docblock line="21">
          <description>Set the position of this primitive</description>
          <long-description></long-description>
          <tag name="param" line="21" description="&lt;p&gt;The position vector&lt;/p&gt;" type="\Chameleon\Vector2" variable="$point">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="return" line="21" description="" type="\Chameleon\Primitives\IPrimitive">
            <type>\Chameleon\Primitives\IPrimitive</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$point</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="29" package="Default">
        <name>draw</name>
        <full_name>\Chameleon\Primitives\IPrimitive::draw()</full_name>
        <docblock line="29">
          <description>Draw this primitive onto the image</description>
          <long-description></long-description>
          <tag name="param" line="29" description="" type="\Chameleon\Image" variable="$image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="return" line="29" description="" type="\Chameleon\Primitives\IPrimitive">
            <type>\Chameleon\Primitives\IPrimitive</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50009">No summary for interface \Chameleon\Primitives\IPrimitive</error>
    </parse_markers>
    <source>eJyVkj0PwiAQhvf+ihscbBcTR2vURBPTzUTj5IL1aklaIEDrYPzvUqyIHzXKdHDvHc/LMZ6KXARgFiMlKkFShHluwgI5260kLammNao4sKJK+ektpprLYfwhlZTkiG0RZRpl1nROXEM421SzBlHkYohgiRoeMsGVCTjzFL54JlFXkkFL4uRQ2wNPOnCxqPYFTSGrWGqlR9Srtqwfwgicqy7CtSHU+YMNeGb2VIG4Y3fRCiJJ6WB7gpungY3f6o3bWVRYZD/5UZ6f56vCbk8LSU4vJoAzza1R2gzzuyc7b+i9Kv+nPxiQvt8tvH2vSzCdXAG7zL4z</source>
  </file>
  <file path="Primitives/Rectangle.php" generated-path="Primitives.Rectangle.html" hash="48edb2590f841114d76b94b59f679bd4" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Vector2">\Chameleon\Vector2</namespace-alias>
    <namespace-alias name="Image">\Chameleon\Image</namespace-alias>
    <namespace-alias name="Mask">\Chameleon\Mask</namespace-alias>
    <namespace-alias name="IPattern">\Chameleon\Patterns\IPattern</namespace-alias>
    <namespace-alias name="BackgroundColor">\Chameleon\Patterns\BackgroundColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Primitives" line="14" package="Default">
      <extends>\Chameleon\Primitives\Primitive</extends>
      <name>Rectangle</name>
      <full_name>\Chameleon\Primitives\Rectangle</full_name>
      <docblock line="14">
        <description>Rectangle, by default completely transparent</description>
        <long-description></long-description>
        <tag name="package" line="14" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="15" package="Default">
        <name>$width</name>
        <full_name>\Chameleon\Primitives\Rectangle::width</full_name>
        <default></default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="16" package="Default">
        <name>$height</name>
        <full_name>\Chameleon\Primitives\Rectangle::height</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="25" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Primitives\Rectangle::__construct()</full_name>
        <docblock line="25">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="25" description="&lt;p&gt;Top left start point&lt;/p&gt;" type="\Chameleon\Vector2" variable="$point">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="param" line="25" description="&lt;p&gt;width in px&lt;/p&gt;" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="param" line="25" description="&lt;p&gt;height in px&lt;/p&gt;" type="integer" variable="$height">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$point</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$height</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="40" package="Default">
        <name>getWidth</name>
        <full_name>\Chameleon\Primitives\Rectangle::getWidth()</full_name>
        <docblock line="40">
          <description>Get width in px</description>
          <long-description></long-description>
          <tag name="return" line="40" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="50" package="Default">
        <name>setWidth</name>
        <full_name>\Chameleon\Primitives\Rectangle::setWidth()</full_name>
        <docblock line="50">
          <description>Set width in px</description>
          <long-description></long-description>
          <tag name="param" line="50" description="" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="return" line="50" description="" type="\Chameleon\Primitives\Rectangle">
            <type>\Chameleon\Primitives\Rectangle</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="60" package="Default">
        <name>getHeight</name>
        <full_name>\Chameleon\Primitives\Rectangle::getHeight()</full_name>
        <docblock line="60">
          <description>Get height in px</description>
          <long-description></long-description>
          <tag name="return" line="60" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="70" package="Default">
        <name>setHeight</name>
        <full_name>\Chameleon\Primitives\Rectangle::setHeight()</full_name>
        <docblock line="70">
          <description>Set height in px</description>
          <long-description></long-description>
          <tag name="param" line="70" description="" type="integer" variable="$height">
            <type>integer</type>
          </tag>
          <tag name="return" line="70" description="" type="\Chameleon\Primitives\Rectangle">
            <type>\Chameleon\Primitives\Rectangle</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$height</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Chameleon\Primitives" line="75" package="Default">
        <name>drawPattern</name>
        <full_name>\Chameleon\Primitives\Rectangle::drawPattern()</full_name>
        <docblock line="75">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$pattern</name>
          <default></default>
          <type>\Chameleon\Patterns\IPattern</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mask</name>
          <default></default>
          <type>\Chameleon\Mask</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$startX</name>
          <default></default>
          <type>\Chameleon\Primitives\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$startY</name>
          <default></default>
          <type>\Chameleon\Primitives\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="112" package="Default">
        <name>draw</name>
        <full_name>\Chameleon\Primitives\Rectangle::draw()</full_name>
        <docblock line="112">
          <description>Draw the rectangle onto the image resource</description>
          <long-description>Draws the rectangle with border and background (if set).
By default, a rectangle has a 1px black border and no background</long-description>
          <tag name="param" line="112" description="" type="\Chameleon\Image" variable="$image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="return" line="112" description="" type="\Chameleon\Primitives\Rectangle">
            <type>\Chameleon\Primitives\Rectangle</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="75" code="PPC:ERR-50015">Argument $image is missing from the Docblock of drawPattern</error>
      <error line="75" code="PPC:ERR-50015">Argument $pattern is missing from the Docblock of drawPattern</error>
      <error line="75" code="PPC:ERR-50015">Argument $mask is missing from the Docblock of drawPattern</error>
      <error line="75" code="PPC:ERR-50015">Argument $startX is missing from the Docblock of drawPattern</error>
      <error line="75" code="PPC:ERR-50015">Argument $startY is missing from the Docblock of drawPattern</error>
      <error line="75" code="PPC:ERR-50008">No summary for method drawPattern()</error>
      <error line="15" code="PPC:ERR-50007">No summary for property $width</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $height</error>
    </parse_markers>
    <source>eJzlWd9v2zYQfs9fcQ9ZISfukvRxrtMtGdAVaIGgzboGKBDQMmUTkUlBpBJ7a/73HSlKpiRSceM0zVY9+Jfujnfffbw7yi9fZfNsB/Ca0jglOY2kylmsLtUqoxLGcDQYmducLKjMSEzhdI4fUyr457OcLZhi11SOdoxQId3bH2msRP5i5Ln1ZkFm1HfjHZFXvt/PiFI05/LzG/upV+iExFezXBR8eipSkVvvDvb2zDvswXt0jfBZSocwWWHoCSlSBbFYZClVNF2BygnHcHPKldU5MO+IkZRrdaBLRflUQg0F/FPK45Xl7JooCrs3bKrmo+7vc8pmc2W9a3hYenlqFosFx5wUGkvnpiv3KzpKFmDxht1MMK7gXGSQ0kSBVCRXYH70aGnR0kMoXxmHbBkSLF0G+9YWPVjHWExSFkNS8FgxweHysg4javo5dDwYuosMHCj1tavmTMLz4zISpGapP/ILlbGMO+A3hGwY43Uq1kJ+DUnVicinNLdci3iRpoOA+Vr4fM7iK06ljI76ZGvWBozfBpnymqpA9hqJzKkqcg5NIoSTNqPqL200GsAvJjPNhFhrTcg38fbDZt62+ekLRdI02SgWWcWytqej0vohnvVRyI190wQFNs2WGfrDWN0wRW2a9+doE4c7tWHbLNl4GoWgP099u3iDTFXluHZimpObageaRgW7TL8NoWo+WHrKD0PQDQt2F/hqi5eptp/cLxftSnZwgB1kxiRaAJKmWOGxSUmNs5pTsKYbGonIKYnnEFULA5Gwa/Taxg00xl+NTW7XMX0wshpNgBworHOnuBQFJRRJgSywICkQCWRsSVPZTEG9RTQAer11yWjVuXWSHNGKuy1Zyf6m9b5DGnUbpXX0rcAeJ64tjB4HETfEjKGxwxGiAi9L4/rz/r4POTT6jmQmD4xP6VIHbpKibSMkUCIbC6zrjCNtZBf8pfadwU/ewmEkViiB/Jiya3RuWJWjVnzWnTcJGMQwQnEjwZDeeDM0RAWGyeHomHFZO9cxwhLEoEJdJAluMixHuPIAxuMxjjoF9UFhPK2JhEpnetXIK2fj3q/pH5Za1VIXPVIVzUueGPb+hi4vEazVwKs26OJ8u+P/Fq56v2tENZJ5PeE1wcUbUhR5TF2ttgXZMnHDkMYTMwkA4VOY1I0eIkwOQjv42bVxUo+kQyCOnTluegJH2RImKZpwTXLhWO2v1W5J26pYa/o1CmSgUBv+VcV60h5yfNTr18Ctg/zhMcW92Zr0QzzGffQnZ6b6uejHhOPmuqLmHIHWTBQJS1M6rVGP/HQrS6ne6WE/m+Q9HMKhh6TG2F312qvl9Ta8peo10CeTtfeWytGgZyNW0aHSmZBMJx5njfKHT/fWvNhmTV1AHJFqRH0OR/f3pmWzHqr6jbqQVh2dThu5u1+t0hf2Mhqm82vKaa7HFl1qTHHXva7sDp4BonZ5zVIzuYyB0xszxETNuXfYnq9C1K2adXNq3uvOnF71r27QoUDq1vbBtLZh2db8PpdYh5A1PaDqP4VkfGbw9UdfBenOjHfwZQOSdkpJj04Th++xk+/bjnuahHvEhmfPoHWnPk/DMdbUOxtIw9qWzaNsuQ/bOBr+feOmgcGci+zJ9hMsuKFcb1HcH9xouAvth7m6XYN6tE6kL2TJiVBKLH4wogSmgG+S1O/AIX94j0qrtzRRPxaptnLnvzzS6ks/6mo+FXSuJ5Fy7xZ8QseaRy4G/8MTj0Gt/7SDYLxwzyztzd952Nwvb6P1+1M/M3Uc63lyWuutn6B2FJvPUXsOWit70Frpg5Y9mOG3/qNWqbq0qkutWj7YxC/9mvrSo3ivgAnOWA3x/MuXtjzSIQ01kpbd4wrxcG3XnC8XQbt5sFw1DK++2mEVGLtbZo/rTN/hsDU7Cc9p1XVXiszKTVLhQfojSQtaP3TtPVBXV3dL99+5DZ5RnsIh3D2W9R3Aa+Ce2ODRY/RBjuyhf9bK11fH/wJD04UQ</source>
  </file>
  <file path="Primitives/Ellipse.php" generated-path="Primitives.Ellipse.html" hash="09ce090c7f65ce15d9713ee12a244992" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Vector2">\Chameleon\Vector2</namespace-alias>
    <namespace-alias name="Image">\Chameleon\Image</namespace-alias>
    <namespace-alias name="ColorFactory">\Chameleon\ColorFactory</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Primitives" line="14" package="Chameleon\Primitives">
      <extends>\Chameleon\Primitives\Primitive</extends>
      <name>Ellipse</name>
      <full_name>\Chameleon\Primitives\Ellipse</full_name>
      <docblock line="14">
        <description>Class Ellipse</description>
        <long-description></long-description>
        <tag name="deprecated" line="14" description=""/>
        <tag name="package" line="14" description="Chameleon\Primitives"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="15" package="Chameleon\Primitives">
        <name>$width</name>
        <full_name>\Chameleon\Primitives\Ellipse::width</full_name>
        <default></default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="16" package="Chameleon\Primitives">
        <name>$height</name>
        <full_name>\Chameleon\Primitives\Ellipse::height</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="25" package="Chameleon\Primitives">
        <name>__construct</name>
        <full_name>\Chameleon\Primitives\Ellipse::__construct()</full_name>
        <docblock line="25">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="25" description="&lt;p&gt;Center point&lt;/p&gt;" type="\Chameleon\Vector2" variable="$point">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="param" line="25" description="&lt;p&gt;width in px&lt;/p&gt;" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="param" line="25" description="&lt;p&gt;height in px&lt;/p&gt;" type="integer" variable="$height">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$point</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$height</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="40" package="Chameleon\Primitives">
        <name>getWidth</name>
        <full_name>\Chameleon\Primitives\Ellipse::getWidth()</full_name>
        <docblock line="40">
          <description>Get width in px</description>
          <long-description></long-description>
          <tag name="return" line="40" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="50" package="Chameleon\Primitives">
        <name>setWidth</name>
        <full_name>\Chameleon\Primitives\Ellipse::setWidth()</full_name>
        <docblock line="50">
          <description>Set width in px</description>
          <long-description></long-description>
          <tag name="param" line="50" description="" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="return" line="50" description="" type="\Chameleon\Primitives\Ellipse">
            <type>\Chameleon\Primitives\Ellipse</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="60" package="Chameleon\Primitives">
        <name>getHeight</name>
        <full_name>\Chameleon\Primitives\Ellipse::getHeight()</full_name>
        <docblock line="60">
          <description>Get height in px</description>
          <long-description></long-description>
          <tag name="return" line="60" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="70" package="Chameleon\Primitives">
        <name>setHeight</name>
        <full_name>\Chameleon\Primitives\Ellipse::setHeight()</full_name>
        <docblock line="70">
          <description>Set height in px</description>
          <long-description></long-description>
          <tag name="param" line="70" description="" type="integer" variable="$height">
            <type>integer</type>
          </tag>
          <tag name="return" line="70" description="" type="\Chameleon\Primitives\Ellipse">
            <type>\Chameleon\Primitives\Ellipse</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$height</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="84" package="Chameleon\Primitives">
        <name>draw</name>
        <full_name>\Chameleon\Primitives\Ellipse::draw()</full_name>
        <docblock line="84">
          <description>Draw the ellipse onto the image resource</description>
          <long-description>Draws the ellipse with border and background (if set).
By default, an ellipse has a 1px black border and no background</long-description>
          <tag name="param" line="84" description="" type="\Chameleon\Image" variable="$image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="return" line="84" description="" type="\Chameleon\Primitives\Ellipse">
            <type>\Chameleon\Primitives\Ellipse</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="15" code="PPC:ERR-50007">No summary for property $width</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $height</error>
    </parse_markers>
    <source>eJzNVl1P2zAUfe+vuA99SFE3xB7XFTa6jfGGyj4lJOQmt42Fa0e2Q0ET/32O7aZOG5egbtLy0AT73ON77rGveXdW5EUPzMPJElVBUoRJbj4ZCn5zJemSanqPatSzoFKF098x1UK+GbVMXS7JAtsmJoIJ+ZlUgY/ReXUzvTj/YD/9wsdHR/YNRzBhRCn4xBgtFK4H32dYSEyJxqweMmLuTBatejzo2L7TkBHwQSPPFNRg+O3Q5ikkvTdrQH9FM52PdsdzpItc+6QbiYfJp4IrLcuqCMFkiDPJS7IEX2HoF4JyDRPkGiXYP1rQFcRlBu6XcigeYkCXKvjXNvR4o62cMZrCvOSppoLD7W2dftLMbxhkMAwXGQQlrJ6+zqmCV6dOCYx9/Kgd5LSMd4reAHkZ4xYLGjiF+lzIDOUV0aaWPOElY4MIaQ3+mtP0jqNSyck+rNlwCylKnkXIn6L74gJ1xLOGfRJ1KTk07Y9btUD9oyJNBvDW+tG0wbM1C90l2+tu2W7vyjYpCtm8kxa11rLhq1RV8bHdtW/jhNq7GhQ5Kgc69MWydrRovbmfT/i6Y8I7HeFQl7yexvHf79Pu2Y2VoIvwj5KsQOemkfuGLrgWdoBWl5LhU6KUKYYx2/GqQbCiZhvNbCMAwjOY1eccEjqvNA9ehwznj5DhnJTMdETCa5qcKCBwUjzAjBmGkJGLgHS/U/Zmhb7VcpBVmdGZhGwRm4zCpLZqk6W9nbcbu7XVldmAJS6oMn3QQi/n3/gdFyseJ9vq2XbximtOGcPMlzHZwTQXNSfKipp6m5PBENpD1mmYiCuhaFUUcwrdwE8T9vKoX+brmTB3Oe7HuFMQAYVCp77A6AoYr+wO1dYt9tTbY7ndpn/D7oAoZvU/M9n9p9HV3BD9/5ga1O+FhsZ6qPs9O+39ASc1HbQ=</source>
  </file>
  <file path="Filters/EmbossFilter.php" generated-path="Filters.EmbossFilter.html" hash="cc5d42b2193c3145f25349448f8737c5" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="7" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>EmbossFilter</name>
      <full_name>\Chameleon\Filters\EmbossFilter</full_name>
      <docblock line="7">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="8" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\EmbossFilter::__construct()</full_name>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="17" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\EmbossFilter::getFilterID()</full_name>
        <docblock line="17">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="17" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\EmbossFilter</error>
      <error line="8" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJx1T01LAzEQve+vmGOyl+J1qyi127JgKViPQtimUxtIZ0MyQUX872bTVYPgHMJ8vPfy3vWtO7kKUh1Q296jCOyNZsXvDsPNlZznI/VnDK7XCPen1Foc6HllLKMP8yojYihvW8dmoO/b0VBvIcmHAO15P4Rw4QK+MdIhwCKm2dC0/ciksVzcW6PhGEmPeqCUTqrso2YhC1zGJvPE0DQliPAVJi9CTlnG+qx+2lld/+rUsEZOfrOPbgmi26zVqnt4ah9VLQtcSbnzyNETGOJiPfs3xQvyJWm3FLIZaX+iTHrF3+1msd3tSv/5/QK5aH2B</source>
  </file>
  <file path="Filters/InvertFilter.php" generated-path="Filters.InvertFilter.html" hash="17e1056cdba167577c264f19ad32bb18" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="7" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>InvertFilter</name>
      <full_name>\Chameleon\Filters\InvertFilter</full_name>
      <docblock line="7">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="8" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\InvertFilter::__construct()</full_name>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="17" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\InvertFilter::getFilterID()</full_name>
        <docblock line="17">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="17" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\InvertFilter</error>
      <error line="8" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJx1T8tKBDEQvM9X9HEyl8XrrOJrZ4eAD5A9CmHM9rqB2BuSjg/EfzcTowbBPoR+VFWqjk/d3jWQaovaTh7bwN5oVvzmMJwciWU+0vSEwU0a4XKfWosHul8by+jDssmIGOrbrWNzoO/bztBkIcmHAJKe0fMXF/CVkbYBLmKaDZXteybN5eKDNRp2kfSsB0rppMo+am5FhcvYZJ4Y+r4GEb5A8dKKkmWuj+anXXTdr04HI3Lym33IFbTyelRrebUZ7lQnKlxNOfPI0RMY4mq9+DfFI5b8ctWKfqb9iVL0qr9vhvF8M9T+8/sJy2Z9ew==</source>
  </file>
  <file path="Filters/GrayscaleFilter.php" generated-path="Filters.GrayscaleFilter.html" hash="3c928c1e250d7654426cda314593e199" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="7" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>GrayscaleFilter</name>
      <full_name>\Chameleon\Filters\GrayscaleFilter</full_name>
      <docblock line="7">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="8" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\GrayscaleFilter::__construct()</full_name>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="17" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\GrayscaleFilter::getFilterID()</full_name>
        <docblock line="17">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="17" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\GrayscaleFilter</error>
      <error line="8" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJx1T01LAzEQve+vmONmL8XrVtHaj2WhIlQvghBiOrWBOA3JBC3ifzebrhoKziHMx3sv711eu72rINUWtVUe68DeaJZ8dBiuLsQ0H0m9YXBKI8z3qbV4oOeVsYw+TKuMiKG83Ts2B/q57QwpC0k+BOi8OgatLJ7ogB+MtA1wG9NsaNx+Zt5QLr5Yo2EXSQ+SIKVOwuyj5loUuIxN/omhbUsQ4TuMdmoxxhnqq/ptJ03zp9NAh5wsZx/9Aur+rpOrfv243MhGFLiScuORoycwxMV68m+KV+RT0n5Ri3agnUUZ9Yq/u83s6WE+Wy/LCPn9Bjuff4U=</source>
  </file>
  <file path="Filters/MeanRemovalFilter.php" generated-path="Filters.MeanRemovalFilter.html" hash="97a67f60d61b9a68b6f5c4db88e28715" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="8" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>MeanRemovalFilter</name>
      <full_name>\Chameleon\Filters\MeanRemovalFilter</full_name>
      <docblock line="8">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="9" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\MeanRemovalFilter::__construct()</full_name>
        <docblock line="9">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="18" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\MeanRemovalFilter::getFilterID()</full_name>
        <docblock line="18">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="18" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\MeanRemovalFilter</error>
      <error line="9" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJx1UMtqwzAQvPsr9mj7Enq1W9qkcYIhrsGUnAJGVdaNQJGFtGpTSv+98oNUlHYPQtqdmZ3R7b0+6Qh8HZFLZjC2ZASnlj402rubJB+Hip3RasYRHk/+KrFXh42QhMbm0YhwNpwVF46aRK/sYc+kw9pR3a16p472Osr/4NUTadbshGISvC1roUKmGjz3b0xOiwEvhF4PVs6/hZq7nyNzKO1epODQOcUHUWhb7qXJOE5xEuBGrE+uCLIsBCl8h9lQnMwfMdRXdL0u0vRHJ4Utkjc9+ijXEJfVtt2Uu+eiadMkwIWUB4PkjAKhKGgv/k3xijQlLddxkg20X1FmvWB3VSyf2qao6v1yF6YYz29zapXY</source>
  </file>
  <file path="Filters/BrightnessFilter.php" generated-path="Filters.BrightnessFilter.html" hash="f7cf904a557f69d3592d5f53f470f04d" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="8" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>BrightnessFilter</name>
      <full_name>\Chameleon\Filters\BrightnessFilter</full_name>
      <docblock line="8">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="16" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BrightnessFilter::__construct()</full_name>
        <docblock line="16">
          <description>BrightnessFilter constructor.</description>
          <long-description></long-description>
          <tag name="param" line="16" description="&lt;p&gt;[-1, 1]&lt;/p&gt;" type="float" variable="$brightness">
            <type>float</type>
          </tag>
          <tag name="throws" line="16" description="If $brightness not e[-1, 1]" type="\Chameleon\Exceptions\ValueOutOfBoundsException">
            <type>\Chameleon\Exceptions\ValueOutOfBoundsException</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$brightness</name>
          <default>0</default>
          <type>float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="26" package="Default">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BrightnessFilter::getArg1()</full_name>
        <docblock line="26">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getArg1()" refers="\Chameleon\Filters\BuiltinFilter::getArg1()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getArg1"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="35" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BrightnessFilter::getFilterID()</full_name>
        <docblock line="35">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="35" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\BrightnessFilter</error>
      <error line="26" code="PPC:ERR-50008">No summary for method getArg1()</error>
    </parse_markers>
    <source>eJyNU01Pg0AQvfdXTIyHpWlVTLy0tmptrSRqEzVe2oZQHMomuJDd2ahR/7sLRVz6YZwD2WXmzXszPE7PsjhrgIlnDJNAIlMkeUg+vWeoeq7TLZIieEGVBSHCZWyOCaZidsUTQqm6jaJCKzs3egsxI54KNXsKEo0TTZNokGrxrKpUdwtusgKVPSMuggSMLKVgIPkyJoFKrXgB3whNOxhoc+eifPtRAPM4bDarMzQ38aHhIalDSuWBVWhjzrNABi8QJWlAsL+oOsC07bbAne+CUSzTVwU7JwcvqrUTKQFu9jyszpleJDyESIuwwPt+pZ5tquvBkWMtIg8eAbNLTqHtwudnDdYHdx2WRzEMCHzdPQ/b+22z17KbtqCYqnTRT3w1alezZRQEnY49Vk5YuoFtaJrahNDr25TzWrVjUVu06wtdIl3IpcucDnAjpb4FiaSlAGYyDsh8dLZPMVfQ7ufAH5VO7V7biWNccXxy0jIfZqucNa+OkYz3C5d6Q2De7di/8m4eR/d+09nluVKk0fgvBxmdq//AG/45tMU9uPfG1493o4cHe4bi+Q1HXTRP</source>
  </file>
  <file path="Filters/ColorizeFilter.php" generated-path="Filters.ColorizeFilter.html" hash="63a4cb8592cbd47ca96bcebf5e883253" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="8" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>ColorizeFilter</name>
      <full_name>\Chameleon\Filters\ColorizeFilter</full_name>
      <docblock line="8">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="9" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\ColorizeFilter::__construct()</full_name>
        <docblock line="9">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default>0</default>
          <type>\Chameleon\Filters\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default>0</default>
          <type>\Chameleon\Filters\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default>0</default>
          <type>\Chameleon\Filters\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default>0</default>
          <type>\Chameleon\Filters\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="31" package="Default">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\ColorizeFilter::getArg1()</full_name>
        <docblock line="31">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getArg1()" refers="\Chameleon\Filters\BuiltinFilter::getArg1()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getArg1"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="35" package="Default">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\ColorizeFilter::getArg2()</full_name>
        <docblock line="35">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getArg2()" refers="\Chameleon\Filters\BuiltinFilter::getArg2()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getArg2"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="39" package="Default">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\ColorizeFilter::getArg3()</full_name>
        <docblock line="39">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getArg3()" refers="\Chameleon\Filters\BuiltinFilter::getArg3()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getArg3"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="43" package="Default">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\ColorizeFilter::getArg4()</full_name>
        <docblock line="43">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getArg4()" refers="\Chameleon\Filters\BuiltinFilter::getArg4()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getArg4"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="52" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\ColorizeFilter::getFilterID()</full_name>
        <docblock line="52">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="52" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\ColorizeFilter</error>
      <error line="9" code="PPC:ERR-50015">Argument $red is missing from the Docblock of __construct</error>
      <error line="9" code="PPC:ERR-50015">Argument $green is missing from the Docblock of __construct</error>
      <error line="9" code="PPC:ERR-50015">Argument $blue is missing from the Docblock of __construct</error>
      <error line="9" code="PPC:ERR-50015">Argument $alpha is missing from the Docblock of __construct</error>
      <error line="9" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="31" code="PPC:ERR-50008">No summary for method getArg1()</error>
      <error line="35" code="PPC:ERR-50008">No summary for method getArg2()</error>
      <error line="39" code="PPC:ERR-50008">No summary for method getArg3()</error>
      <error line="43" code="PPC:ERR-50008">No summary for method getArg4()</error>
    </parse_markers>
    <source>eJylVF1P2zAUfedXXKE+JFUnaDeE1NJuUAqKxBQJoT1soCikt42l4ET+EB9j/332dbs5Javo4of23vj4nHN9bZ98rvJqD8yYY1akAgOpBMtUop4rlON+OKJJnj6grNIMYZqbsMCS316wQqGQoz1CaOnPzZ4yrBQrubz9lhYaY63ixVmp+Vz+mRo1rIvdohXngvG0AGNLSpiWRSnYCzpVwCeFhgzOtMkZX339ScvsqPR9wTJYaJ5ZRkiSzPAqoTMVMK6gI3AOYzjsAWVLgci9/N549tK0qPLU5qEnYQdbQEBUJ3AIr6+OdgKDo6NNpB0qF+UjcHyEf25KsG8Y9ntE1LP6lmpUY/r11oGzv/bgsnYuiMP6oOD9Tmjj1kYoaefDUlgb9v/9Lly/1jZcNoH+4Pi/fRCHNUIBObF0m05qaWWukzk9w6F/+KzO6pQHb6z8oO7DeEL9v+s1AFxjCEJhI4h2jTA2aoS4gghD4V0NE3qVeVVt3qolqlOx7AfhkO5JfW8FKi04dFTOJHyYWPC68LCWuzO/i+KgtaLbxl00P7bWpK7sIvmptaTrcrPmQbf7l7YLl6jMg0vPaHQOQfT1MrmIrm5m10k39HD+ki8rJ8ai9/lgW1XuoY7Ot1bmaU/jq/g6+j7zK6Df37i4zPo=</source>
  </file>
  <file path="Filters/SelectiveBlurFilter.php" generated-path="Filters.SelectiveBlurFilter.html" hash="e12b395d523fb71738131fc6d72a06ca" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="7" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>SelectiveBlurFilter</name>
      <full_name>\Chameleon\Filters\SelectiveBlurFilter</full_name>
      <docblock line="7">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="8" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\SelectiveBlurFilter::__construct()</full_name>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="17" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\SelectiveBlurFilter::getFilterID()</full_name>
        <docblock line="17">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="17" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\SelectiveBlurFilter</error>
      <error line="8" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJx1T8tqwzAQvPsr9mj7Enp1UlqcOMHgUEjSngrCVTaNQN0IadUHpf9eWXFbEegcxD5mRjuzG3M0GQTsUereYu7YKsmCPwy666tiGpfUv6AzvUSYH0Op8USPS6UZrZtmkeFdurszrE70szso6jUEe+dgGwiS1SvW2tuzBeA7I+0d1D70isbpZ9QOMP5JKwkHT3KwBSFkMGfrJedFwovckIEYqiolEb7BeFJejJEGfGW/5aQs/3xKWCGHs+Md7QLydr0Sy7bbNRtRFgkvldxaZG8JFHEynvyb4hn5nLRd5EU1yC6ijH7J39uma+a79qERdXe/SXPE9xuOT4LA</source>
  </file>
  <file path="Filters/SmoothFilter.php" generated-path="Filters.SmoothFilter.html" hash="b9862619576821cc47952a305744b2ec" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="8" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>SmoothFilter</name>
      <full_name>\Chameleon\Filters\SmoothFilter</full_name>
      <docblock line="8">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="9" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\SmoothFilter::__construct()</full_name>
        <docblock line="9">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$smoothness</name>
          <default>0</default>
          <type>\Chameleon\Filters\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Default">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\SmoothFilter::getArg1()</full_name>
        <docblock line="19">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getArg1()" refers="\Chameleon\Filters\BuiltinFilter::getArg1()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getArg1"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\SmoothFilter::getFilterID()</full_name>
        <docblock line="28">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\SmoothFilter</error>
      <error line="9" code="PPC:ERR-50015">Argument $smoothness is missing from the Docblock of __construct</error>
      <error line="9" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="19" code="PPC:ERR-50008">No summary for method getArg1()</error>
    </parse_markers>
    <source>eJx9Ut1vgjAQf/evuBgfgLiIr6Juc36MZIZkmr3MhbBapAkW0l6jy9z/voJslum8B8L17vdx1/Zv8yRvgI41JWkkqCVRMIIhfuRUDrq2VxZ5tKUyjwiFh0T/pjTjqylLkQrpNcoOJc3aZE9ojizjcvUSpYoGCoN4lCm+lr8l7wIuOIIqzpjxKAVtS0pYbLMMk6Mm0D1STQUjpXPGq9PPElRErt5TRiBWnBR8EIZEs6JQBC3GEVqyZONUEw/AtQ1oESwGy2zpgwuHQw01hK57hisCE5HtgNMd/Du41TwRNdsmbRvcdkns1Xi/GrU019ekh+j1zLEKxWp71pmpV1MRBkNT863WbRvShuzfhW4o3otN17J7UOyzvgZBUQkOLUyYhJth0fzjzK7ltUVcFu44zonbgRlF/SrK2/bHYPnzWTj1n5aT59CxjT4TclfZ0T6N48610Y7vyR9fHc/QXsyDYPlo+i+/31yx9fY=</source>
  </file>
  <file path="Filters/GaussianBlurFilter.php" generated-path="Filters.GaussianBlurFilter.html" hash="e7d9666529f85bd8111dd0ffe22bb58b" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="7" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>GaussianBlurFilter</name>
      <full_name>\Chameleon\Filters\GaussianBlurFilter</full_name>
      <docblock line="7">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="8" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\GaussianBlurFilter::__construct()</full_name>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="17" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\GaussianBlurFilter::getFilterID()</full_name>
        <docblock line="17">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="17" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\GaussianBlurFilter</error>
      <error line="8" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJx1T01LAzEQve+vmOPuXorXbUW71i4LVaG1NyHEdGoD6TQkE1TE/242XTUIvkOYj/de5s2u7MEWELFDZaTD0rPTigW/W/SXF9U0LUke0VupEG4OsTR4oqelNozOT4vECD7fPVjWJ/re7TVJA9Hee+hk8F5Lak1wZwfAN0baeWhD7DWN048kHWDDs9EK9oHU4ApCqOjNLiguq4yXuDECMTRNTiJ8hfGishoTDfgsfspJXf/61NAhx6vTHf0Cyv6uE8t+9Xi7FnWV8XLJtUMOjkATZ+PJvylekM9J+0VZNYPsT5TRL/u7m283m35+L9rVdp3HSO8XVsOCDg==</source>
  </file>
  <file path="Filters/IFilter.php" generated-path="Filters.IFilter.html" hash="1b63dcbd681c255d4bf65c6a9fdd312a" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Image">\Chameleon\Image</namespace-alias>
    <interface namespace="Chameleon\Filters" line="11" package="Chameleon\Filters">
      <name>IFilter</name>
      <full_name>\Chameleon\Filters\IFilter</full_name>
      <docblock line="11">
        <description>Interface IFilter</description>
        <long-description></long-description>
        <tag name="package" line="11" description="Chameleon\Filters"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\IFilter::apply()</full_name>
        <docblock line="19">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="param" line="19" description="&lt;p&gt;The image to be applied to&lt;/p&gt;" type="\Chameleon\Image" variable="$image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="return" line="19" description="Returns TRUE on success or FALSE on failure." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJx1UbtOwzAU3fsVZ2BoMxB1pSCoEJUidSplQ0KOe0MsHNvyY4gQ/86NXVAA4eUe+zzukXx963q3AJ8TSS08LUP0SsaXODoKN+vVJpNGDBSckIT7nqEma553SkfyYbPIihTmXDOIVzozdVXliQqNYUc3xTTF/UXccfYbW/7GnxV1nuq3H++Fn68piVvn9IjYE7qijBbCQE3FLmfCuYdbeDEgl8dFluLICQVxQEsQnKvoxLf/QjzF5A1aazUOGQccD08PsAYhSUkhwHrstvvH/NYJpZP/Uar+xi61Wkl0ycioWDytH5fzhitc5V3loz4+AeGXhA4=</source>
  </file>
  <file path="Filters/EdgedetectFilter.php" generated-path="Filters.EdgedetectFilter.html" hash="62d8c1dc48efe9c23ef9614ff04d3fb4" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="7" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>EdgedetectFilter</name>
      <full_name>\Chameleon\Filters\EdgedetectFilter</full_name>
      <docblock line="7">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="8" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\EdgedetectFilter::__construct()</full_name>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="17" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\EdgedetectFilter::getFilterID()</full_name>
        <docblock line="17">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="17" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\EdgedetectFilter</error>
      <error line="8" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJx1UMFKxDAQvfcr5pj2snjtKorbbCkogvSmUmo6uxuIsyGZoCL+u2msGoSdQ5jMvPfyXs4v7cEWEGtCZUaHwrPTigd+t+gvzsp1WtL4gt6OCmFziK3BIz1utWF0fl0kRPD57s6yPtLPbqdpNBDlvQc57XFCRsXffMA3Rpo8XId417RMPxJxLhuejVawC6RmTRgGFZXZBcWizHAJGwMQQ13nIMJXWPyIh6dySTTXZ/HbrqrqT6mCFjm6Tk66BkR32w7b7qaX90NVZriccuWQgyPQxNl4dTLHHpcf6BpR1jPtX5hFL3tbNq1sZC83fZ4hnV+HFYDD</source>
  </file>
  <file path="Filters/ContrastFilter.php" generated-path="Filters.ContrastFilter.html" hash="9cdca9374507b773808aa7f7fb4bb677" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="8" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>ContrastFilter</name>
      <full_name>\Chameleon\Filters\ContrastFilter</full_name>
      <docblock line="8">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="9" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\ContrastFilter::__construct()</full_name>
        <docblock line="9">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$contrast</name>
          <default>0</default>
          <type>\Chameleon\Filters\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Default">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\ContrastFilter::getArg1()</full_name>
        <docblock line="19">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getArg1()" refers="\Chameleon\Filters\BuiltinFilter::getArg1()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getArg1"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\ContrastFilter::getFilterID()</full_name>
        <docblock line="28">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\ContrastFilter</error>
      <error line="9" code="PPC:ERR-50015">Argument $contrast is missing from the Docblock of __construct</error>
      <error line="9" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="19" code="PPC:ERR-50008">No summary for method getArg1()</error>
    </parse_markers>
    <source>eJx9Uk1PwkAQvfMrJoRD20AQEy58qXzaRCUB4kVMU5ct3aRum93ZgBH/u9tS7BbROTSd2XnvzZvd3k0SJhXQsaEk8gW1JApG0MOPhMp+y+5mh9x/pzLxCYVRqH8jGvP1lEVIhexWsg4lzbPJntAEWczl+tmPFJ0rnAfDWPGN/DnqXsDNj6CcM2Dcj0CPJSWMYo7Cl3hUBbpHqslgqHTOeF79zGBpJOotYgQCxUnKCJ5HNC8KRdBiHKFGcj7ow5VtANNgAVhFQw8a1+02HA4GaAC6dA5LA0MR74DTHfzp26qeaKr1grKeqdQz3m6J9qtSShN9SdpAp2NaSgXz3Vm/ZnopBKE/KCRfS522IWtIni9yS/FObFuW3YF0j+UNCIpKcKhhyCQ0BmnzaSq7lBs7uCzbdJyC2YEZRf0asjt2x2C5jzNv6j6sJgvPsY0+E3KbD6OnNMrN/4wdX5E7/tecoT1cuLP71dNkuTQ9ZN9vXcDyCQ==</source>
  </file>
  <file path="Filters/BuiltinFilter.php" generated-path="Filters.BuiltinFilter.html" hash="eb36e589b2e1ef97688051e842661414" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Image">\Chameleon\Image</namespace-alias>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="false" abstract="true" namespace="Chameleon\Filters" line="13" package="Chameleon\Filters">
      <extends/>
      <implements>\Chameleon\Filters\IFilter</implements>
      <name>BuiltinFilter</name>
      <full_name>\Chameleon\Filters\BuiltinFilter</full_name>
      <docblock line="13">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="13" description="Chameleon\Filters"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="19" code="PPC:ERR-50015">Argument $options is missing from the Docblock of __construct</error>
      <error line="19" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="66" code="PPC:ERR-50015">Argument $image is missing from the Docblock of apply</error>
      <error line="66" code="PPC:ERR-50008">No summary for method apply()</error>
    </parse_markers>
    <source>eJztll1v0zAUhu/7Kw5SJZIKNPXjilK+NjYigTZNu0SqHHPSWriOZTtDE+y/YztJ56ahZFJUAcIXTRu/Puc5b2qfvHwt13IAdnxByonCSBvFqFmaO4l6MY7nflKQDWpJKMLp2n7lmIvP54wbVHo+GHhJocPJZENWOG+ZuJSG5cKtcnMno5G/wghOOdEa3hU2KhNlbEBBUo4avikiJRMryDO4+nD1VENa6oC5PJCV8qwQ1EevY76xyF+dYI+6Upz4K0lt0YQaoC0MbCM5blAYDUl163u5OuSv8t0SBVWFcLOuwSxvLgOwILUbUrFbYhCG+Y43fqpIOaPbwmC5pFZgVEFNVOepl8UBlxtDs2Yanr+qc8MiyFCL7ge/quUCDQyJWo0hy1Xpc1lNFAeyneoVmkLZZyLMD1Fw3l5so6IVmrc2SdSkr2K5OI+hnRyDdtIX7fQYtNO+aGfHoJ31QVudB8kZRMmni+V58vHm/fVy1AH3EOn2mAiRyyMhObPYL1yAA5vXnmH8LvInIwy9jW5Nmue8UTHLINru3gdbniwW3oWmQYFJ4cPZ07hR5q3iepRr1HmhKEbxs/YVAchDsb/Xlru6k27SUTftqJuFf8xqxPOdW/c7v5BrbDF9+t90b0IvZk7+cTN7MWn8l5r0+OL/gOK6Qx/uNpd773ZtzWVfdbAVVnLfVuo3vda+2HzNC3uk//wJWFTiUg==</source>
  </file>
  <file path="Filters/PixelateFilter.php" generated-path="Filters.PixelateFilter.html" hash="713e327d89a75f1adb7512ca47dedb0f" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Options">\Chameleon\Options</namespace-alias>
    <class final="true" abstract="false" namespace="Chameleon\Filters" line="7" package="Default">
      <extends>\Chameleon\Filters\BuiltinFilter</extends>
      <name>PixelateFilter</name>
      <full_name>\Chameleon\Filters\PixelateFilter</full_name>
      <docblock line="7">
        <description>Class BuiltinFilter enables wrapping of PHP's builtin image filter functions</description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter" refers="\Chameleon\Filters\BuiltinFilter" link="/classes/Chameleon.Filters.BuiltinFilter.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Filters" line="17" package="Chameleon\Filters">
        <name>$options</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::options</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="17" description="&lt;p&gt;The filter's options&lt;/p&gt;" type="\Chameleon\Options" variable="">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="8" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\PixelateFilter::__construct()</full_name>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::__construct()" refers="\Chameleon\Filters\BuiltinFilter::__construct()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$pixelate</name>
          <default>0</default>
          <type>\Chameleon\Filters\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="15" package="Default">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\PixelateFilter::getArg1()</full_name>
        <docblock line="15">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getArg1()" refers="\Chameleon\Filters\BuiltinFilter::getArg1()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getArg1"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Default">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\PixelateFilter::getArg2()</full_name>
        <docblock line="19">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getArg2()" refers="\Chameleon\Filters\BuiltinFilter::getArg2()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getArg2"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Default">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\PixelateFilter::getFilterID()</full_name>
        <docblock line="28">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Filters\BuiltinFilter::getFilterID()" refers="\Chameleon\Filters\BuiltinFilter::getFilterID()" link="/classes/Chameleon.Filters.BuiltinFilter.html#method_getFilterID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="19" package="Chameleon\Filters">
        <name>__construct</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::__construct()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>\Chameleon\Options</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="28" package="Chameleon\Filters">
        <name>getArg1</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg1()</full_name>
        <docblock line="28">
          <description>Get $arg1 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="37" package="Chameleon\Filters">
        <name>getArg2</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg2()</full_name>
        <docblock line="37">
          <description>Get $arg2 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="37" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="46" package="Chameleon\Filters">
        <name>getArg3</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg3()</full_name>
        <docblock line="46">
          <description>Get $arg3 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="55" package="Chameleon\Filters">
        <name>getArg4</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getArg4()</full_name>
        <docblock line="55">
          <description>Get $arg4 for imagefilter()</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Filters" line="64" package="Chameleon\Filters">
        <name>getFilterID</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getFilterID()</full_name>
        <docblock line="64">
          <description>Get filter ID (IMG_FILTER_*)</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="66" package="Chameleon\Filters">
        <name>apply</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::apply()</full_name>
        <docblock line="66">
          <description>Apply the filter to an image.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Filters\IFilter::apply()" refers="\Chameleon\Filters\IFilter::apply()" link="/classes/Chameleon.Filters.IFilter.html#method_apply"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Filters" line="114" package="Chameleon\Filters">
        <name>getOptions</name>
        <full_name>\Chameleon\Filters\BuiltinFilter::getOptions()</full_name>
        <docblock line="114">
          <description>Get Options</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="\Chameleon\Options">
            <type>\Chameleon\Options</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Filters\BuiltinFilter</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Filters\PixelateFilter</error>
      <error line="8" code="PPC:ERR-50015">Argument $pixelate is missing from the Docblock of __construct</error>
      <error line="8" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="15" code="PPC:ERR-50008">No summary for method getArg1()</error>
      <error line="19" code="PPC:ERR-50008">No summary for method getArg2()</error>
    </parse_markers>
    <source>eJyVUU1rAjEQvfsrBvGwu1CsPWrX1tYPFiwV8VBoy7LGUQNpNiSz1CL9703WtWbBCp1DSDLvvXkzc3untqoBNlbIRKYxMKQ5o5S+FJq4E/bKpMw+0KiMITxu7VVgLt/GXBBq02uUiML4uWdFPJfH3JrLTICVNwZmfIciIzywAXeEcmXgobBvLqvffUlzoYql4AzWhWROEdKUWV3SBaOAS4KWqvQghuvQEn+ZJds2ZEHdrk+T+AmVv6CGdvHaPAo2Ie6f5N9ryLAai4vvxp9mN0gDvekEYRec131NQyMVWkKLttzAVd+Bj67C2js4WfpP2RtXdpnn4nxdOws8q9aOohM+ggmS3V+5lWQIQfI0ScfJdDGap1Ho4XzKfVXC9ux9ty/5Pew9GV4clVd7lryMpoPFyO+gPH8A69fG7Q==</source>
  </file>
  <file path="Patterns/IPattern.php" generated-path="Patterns.IPattern.html" hash="e7b300f84928406b89ec911681ba4593" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <interface namespace="Chameleon\Patterns" line="7" package="Default">
      <name>IPattern</name>
      <full_name>\Chameleon\Patterns\IPattern</full_name>
      <docblock line="7">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="16" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\IPattern::getColorAt()</full_name>
        <docblock line="16">
          <description>Get color in this pattern at the given position</description>
          <long-description></long-description>
          <tag name="param" line="16" description="&lt;p&gt;The x coordinate&lt;/p&gt;" type="integer" variable="$x">
            <type>integer</type>
          </tag>
          <tag name="param" line="16" description="&lt;p&gt;The y coordinate&lt;/p&gt;" type="integer" variable="$y">
            <type>integer</type>
          </tag>
          <tag name="return" line="16" description="The color at this position" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50009">No summary for interface \Chameleon\Patterns\IPattern</error>
    </parse_markers>
    <source>eJx1kDFrwzAQhXf/ijd0iE3BdG3SJsVDydahoyEoyiUW2JKQziWm9L9Xkp3gkvQWnbj3vXvSam0bmyHUgWQrHC08OyV5x4Mljxc85cs01qIjb4UkVE1oWzK6/hDM5LRfZknS+/mwMq1xvt6mc1IoHfTHaLKdWHynQayyKK49CrwTQ0Y2UOBGedgJERzuhJP6Ig1rvGJl9Aydu2yscKKLi/FwxmfAzsHVuIPSguk/5ZCUw33lH8gR9yHS+MpEjZlTxpj5Nl557W2/b5XEsdcyanAiTj5vvBgDP05xcjzj8pER/MnWr7/E7IBh</source>
  </file>
  <file path="Patterns/Grid.php" generated-path="Patterns.Grid.html" hash="9f1b65d4609550f269a27dcc8eeeeec2" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Patterns" line="10" package="Default">
      <extends>\Chameleon\Patterns\Pattern</extends>
      <name>Grid</name>
      <full_name>\Chameleon\Patterns\Grid</full_name>
      <docblock line="10">
        <description>Grid pattern. Can be customized in width, height, x offset and y offset.</description>
        <long-description></long-description>
        <tag name="package" line="10" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Patterns\Pattern" refers="\Chameleon\Patterns\Pattern" link="/classes/Chameleon.Patterns.Pattern.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Patterns" line="11" package="Default">
        <name>$width</name>
        <full_name>\Chameleon\Patterns\Grid::width</full_name>
        <default></default>
        <docblock line="11">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Patterns" line="12" package="Default">
        <name>$height</name>
        <full_name>\Chameleon\Patterns\Grid::height</full_name>
        <default></default>
        <docblock line="12">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Patterns" line="13" package="Default">
        <name>$offsetX</name>
        <full_name>\Chameleon\Patterns\Grid::offsetX</full_name>
        <default></default>
        <docblock line="13">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Patterns" line="14" package="Default">
        <name>$offsetY</name>
        <full_name>\Chameleon\Patterns\Grid::offsetY</full_name>
        <default></default>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="28" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\Grid::__construct()</full_name>
        <docblock line="28">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="api" line="28" description=""/>
          <tag name="param" line="28" description="&lt;p&gt;Color for the background&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$background">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="param" line="28" description="&lt;p&gt;Color for the lines&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$line">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="param" line="28" description="&lt;p&gt;Horizontal line spacing&lt;/p&gt;" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="param" line="28" description="&lt;p&gt;Vertical line spacing&lt;/p&gt;" type="integer" variable="$height">
            <type>integer</type>
          </tag>
          <tag name="param" line="28" description="&lt;p&gt;Move grid on x axis&lt;/p&gt;" type="integer" variable="$offsetX">
            <type>integer</type>
          </tag>
          <tag name="param" line="28" description="&lt;p&gt;Move grid on y axis&lt;/p&gt;" type="integer" variable="$offsetY">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Patterns\Pattern::__construct()" refers="\Chameleon\Patterns\Pattern::__construct()" link="/classes/Chameleon.Patterns.Pattern.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$background</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$line</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default>2</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$height</name>
          <default>2</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offsetX</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offsetY</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="46" package="Default">
        <name>getWidth</name>
        <full_name>\Chameleon\Patterns\Grid::getWidth()</full_name>
        <docblock line="46">
          <description>Get horizontal spacing of lines</description>
          <long-description></long-description>
          <tag name="return" line="46" description="Horizontal spacing in px" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="56" package="Default">
        <name>setWidth</name>
        <full_name>\Chameleon\Patterns\Grid::setWidth()</full_name>
        <docblock line="56">
          <description>Set horizontal spacing of lines</description>
          <long-description></long-description>
          <tag name="param" line="56" description="&lt;p&gt;Horizontal spacing in px&lt;/p&gt;" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="return" line="56" description="" type="\Chameleon\Patterns\Grid">
            <type>\Chameleon\Patterns\Grid</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="68" package="Default">
        <name>getHeight</name>
        <full_name>\Chameleon\Patterns\Grid::getHeight()</full_name>
        <docblock line="68">
          <description>Get vertical spacing of lines</description>
          <long-description></long-description>
          <tag name="return" line="68" description="Vertical spacing in px" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="92" package="Default">
        <name>getOffsetX</name>
        <full_name>\Chameleon\Patterns\Grid::getOffsetX()</full_name>
        <docblock line="92">
          <description>Get x-axis offset</description>
          <long-description></long-description>
          <tag name="return" line="92" description="X offset in px" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="105" package="Default">
        <name>setOffsetX</name>
        <full_name>\Chameleon\Patterns\Grid::setOffsetX()</full_name>
        <docblock line="105">
          <description>Set x-axis offset</description>
          <long-description>x-axis offset moves the whole grid to the left/right</long-description>
          <tag name="param" line="105" description="&lt;p&gt;x offset in px&lt;/p&gt;" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="return" line="105" description="" type="\Chameleon\Patterns\Grid">
            <type>\Chameleon\Patterns\Grid</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="115" package="Default">
        <name>getOffsetY</name>
        <full_name>\Chameleon\Patterns\Grid::getOffsetY()</full_name>
        <docblock line="115">
          <description>Get y-axis offset</description>
          <long-description></long-description>
          <tag name="return" line="115" description="Y offset in px" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="128" package="Default">
        <name>setOffsetY</name>
        <full_name>\Chameleon\Patterns\Grid::setOffsetY()</full_name>
        <docblock line="128">
          <description>Set y-axis offset</description>
          <long-description>y-axis offset moves the whole grid up/down</long-description>
          <tag name="param" line="128" description="&lt;p&gt;y offset in px&lt;/p&gt;" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="return" line="128" description="" type="\Chameleon\Patterns\Grid">
            <type>\Chameleon\Patterns\Grid</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="138" package="Default">
        <name>getBackgroundColor</name>
        <full_name>\Chameleon\Patterns\Grid::getBackgroundColor()</full_name>
        <docblock line="138">
          <description>Get background color</description>
          <long-description></long-description>
          <tag name="return" line="138" description="" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="148" package="Default">
        <name>setBackgroundColor</name>
        <full_name>\Chameleon\Patterns\Grid::setBackgroundColor()</full_name>
        <docblock line="148">
          <description>Set background color</description>
          <long-description></long-description>
          <tag name="param" line="148" description="" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="return" line="148" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="157" package="Default">
        <name>getLineColor</name>
        <full_name>\Chameleon\Patterns\Grid::getLineColor()</full_name>
        <docblock line="157">
          <description>Get grid line color</description>
          <long-description></long-description>
          <tag name="return" line="157" description="" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="167" package="Default">
        <name>setLineColor</name>
        <full_name>\Chameleon\Patterns\Grid::setLineColor()</full_name>
        <docblock line="167">
          <description>Set grid line color</description>
          <long-description></long-description>
          <tag name="param" line="167" description="" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="return" line="167" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="180" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\Grid::getColorAt()</full_name>
        <docblock line="180">
          <description>Get color in grid at the given position</description>
          <long-description>By default, all pixels have the background color, every nth pixel has the line color</long-description>
          <tag name="param" line="180" description="&lt;p&gt;x coordinate&lt;/p&gt;" type="integer" variable="$x">
            <type>integer</type>
          </tag>
          <tag name="param" line="180" description="&lt;p&gt;y coordinate&lt;/p&gt;" type="integer" variable="$y">
            <type>integer</type>
          </tag>
          <tag name="return" line="180" description="The color for the given position" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Patterns\Pattern::getColorAt()" refers="\Chameleon\Patterns\Pattern::getColorAt()" link="/classes/Chameleon.Patterns.Pattern.html#method_getColorAt"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Patterns" line="9" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\Pattern::getColorAt()</full_name>
        <docblock line="9">
          <description>Get color in this pattern at the given position</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Patterns\IPattern::getColorAt()" refers="\Chameleon\Patterns\IPattern::getColorAt()" link="/classes/Chameleon.Patterns.IPattern.html#method_getColorAt"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="16" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\Pattern::__construct()</full_name>
        <docblock line="16">
          <description>Pattern constructor.</description>
          <long-description></long-description>
          <tag name="param" line="16" description="&lt;p&gt;Number of colors used in this pattern&lt;/p&gt;" type="integer" variable="$colors">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$colors</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="26" package="Default">
        <name>setColor</name>
        <full_name>\Chameleon\Patterns\Pattern::setColor()</full_name>
        <docblock line="26">
          <description>Set color at index.</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;index&lt;/p&gt;" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="param" line="26" description="&lt;p&gt;color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="37" package="Default">
        <name>getColor</name>
        <full_name>\Chameleon\Patterns\Pattern::getColor()</full_name>
        <docblock line="37">
          <description>Get color at index</description>
          <long-description></long-description>
          <tag name="param" line="37" description="&lt;p&gt;index&lt;/p&gt;" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="return" line="37" description="color" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="11" code="PPC:ERR-50007">No summary for property $width</error>
      <error line="12" code="PPC:ERR-50007">No summary for property $height</error>
      <error line="13" code="PPC:ERR-50007">No summary for property $offsetX</error>
      <error line="14" code="PPC:ERR-50007">No summary for property $offsetY</error>
    </parse_markers>
    <source>eJy1V99v2zYQfu9fcQ8ZYAdK3fQxXtKteWgGbNiADF0FFAgYibaIKaQgUo7Vdv/7jj8ki1IkU0krwJFC3h353X28O/78rsiKV4BPSpOclHQhVckSdafqgkq4hPPl2kxz8kBlQRIK1xl+5lTwz38RpWjJ5fqVEalkd/Ja5KKUn38zbyexOj01bziFDyVLobAGXsM14XBPIamkEg/sC02BcXhkqcoiyCjbZiqCPYjNRlIFhKdQu39eO3sr80YEUlrTdK8oTyW4PcJXK4hPUbIdURROjP31cNwu+MSEXfLT6EzsYHpQLdxrs7NEcHRvlShRdia7cr+Qgo1NFaQkD2AdCif3JPl3W4oKnWFHNvhTGYXDxIR2zjjt6ekh+YQK48r5Cm5Eyb4IrkhupEETgvHtmJJ1JHykpWJJoI7zMfwhdhS2OpKCY+jJno3uzTnfV6n7KqtD1Kr7nCWwqXiiGIre3bVxWQy9G3k+i7ruuIS3kYf0MNDAuIQ3kb9LHFl22Gg2hOeOq4uL7kbeLjtk0s+JypiEsytAK2ZDC7Tc2edyfUT8PLIQpgz/o3EtLLwJgzcG7sLBnjL4p/XDonHIhFErGjeicUf0v9Fz9QHzQXZgpSMXJocBnT32lFRVmBR0YG6G2ph7in0QdbaNy5ZwYaz5gXXLtCh7GWcc1u3zYE0d2DFwrTMkzTdBoFueHBbS8LV+Dz/bgCMTXA1prx/fNXg4+lnZ+mnMqaEU2TUp6BkE+djXnUUPd1TC+NGvPNMEmQ1qkJqPoNeF1BtHVayluOKAaC9w0iGfdHY2RSiXbI8xqs3Jg4JuXTsWiFBO7c90hXF9SACPPjX9yyz+NAk0jECDDmWaQSEQPBl4wBorTbvwmInclVslbANBN2pVTvFqULQPTV3fKQF8nKRU47fOYiOc6jtPM8Z+rl/MkXomR+IXcCSexZE4lCMhEOrjHKmKVSoeeTgz6h/LjHg+M+LvyYxO+57o9uwIQNuDhhLifWvctn4an+tiQ7iB+1u8CWq/bmcg8S8gfdEW6U6Eh7KP0zPeLw49kLcaZNTIhobNcNncY75/1H5Hs8+O13lwvAIh/IBwHQDODdT57EAZaZ07DFyiTD7ash3FbCIk01vqqnS/39eQ0g2pchUBybHZYXuaS8gIXi/9C7ZdJQKKrVgNHPsgI4uisr1Sh3jZpKI9FsNEiDJlnCg6JlVjYhyR8kgHf2du6faCP4p+kpXG2q+uOdu7y2w9ylDdoS0Qy9mgri7hp0G7j5dh+PYNe7p6qBB7Ck0398T1WT/9g7Ftb73LdV82sA/0zPjp0P59d/U/ONkTKA==</source>
  </file>
  <file path="Patterns/Pattern.php" generated-path="Patterns.Pattern.html" hash="c2a4fab866578e14b2e11d943ce34327" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="SplFixedArray">\SplFixedArray</namespace-alias>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <class final="false" abstract="true" namespace="Chameleon\Patterns" line="8" package="Default">
      <extends>\SplFixedArray</extends>
      <implements>\Chameleon\Patterns\IPattern</implements>
      <name>Pattern</name>
      <full_name>\Chameleon\Patterns\Pattern</full_name>
      <docblock line="8">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
      </docblock>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Patterns" line="9" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\Pattern::getColorAt()</full_name>
        <docblock line="9">
          <description>Get color in this pattern at the given position</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Patterns\IPattern::getColorAt()" refers="\Chameleon\Patterns\IPattern::getColorAt()" link="/classes/Chameleon.Patterns.IPattern.html#method_getColorAt"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="16" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\Pattern::__construct()</full_name>
        <docblock line="16">
          <description>Pattern constructor.</description>
          <long-description></long-description>
          <tag name="param" line="16" description="&lt;p&gt;Number of colors used in this pattern&lt;/p&gt;" type="integer" variable="$colors">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$colors</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="26" package="Default">
        <name>setColor</name>
        <full_name>\Chameleon\Patterns\Pattern::setColor()</full_name>
        <docblock line="26">
          <description>Set color at index.</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;index&lt;/p&gt;" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="param" line="26" description="&lt;p&gt;color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="37" package="Default">
        <name>getColor</name>
        <full_name>\Chameleon\Patterns\Pattern::getColor()</full_name>
        <docblock line="37">
          <description>Get color at index</description>
          <long-description></long-description>
          <tag name="param" line="37" description="&lt;p&gt;index&lt;/p&gt;" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="return" line="37" description="color" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Patterns\Pattern</error>
      <error line="9" code="PPC:ERR-50015">Argument $x is missing from the Docblock of getColorAt</error>
      <error line="9" code="PPC:ERR-50015">Argument $y is missing from the Docblock of getColorAt</error>
      <error line="9" code="PPC:ERR-50008">No summary for method getColorAt()</error>
    </parse_markers>
    <source>eJydksFrwjAUxu/7K97BQytusqvddCJMvIyBV0Fi+tRCm4TkFSpj//timsa2OnDLoQ3J9773vl/7MlNH9QB2pchzpjEypDNOWzopNPAKz3HirgUr0CjGERZHu81Ris0nI0ItTPLgJKVBWKv8PaswnWvNTkk4vtQsZC612azc2xeynW3KOIGdwBjwtoAVoUhN1xOyQuVYoCADq0b55WzOS5W7POMXx30pOGVSwAHJtZxTlAmCQTUC9z7FE+gMc17j4TDsYRgG4lJY25KT1E+t+7b0TTHNitqau6jwURY71CD34A8skNQqgI6ZAVV7tzzG/TAhw3YbJohaHeJWfldmP6OgyaQtb6RJUH7/GneNVI8KjOycKVb3pHXCWn5DUiP2E9futyNrScjJAgqpjf9y0aXNqOvXBzBwZB+nlvneVts8UVPnC+7BsLzC8G8KHbVGKu3P5BP8CcXhGkUMzf/bg+Db9FgsA4sOg/o5m/4AhuslaQ==</source>
  </file>
  <file path="Patterns/RGBNoise.php" generated-path="Patterns.RGBNoise.html" hash="3d51d6624fd77f8d0d48675eae7cd06c" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Patterns" line="8" package="Default">
      <extends>\Chameleon\Patterns\Pattern</extends>
      <name>RGBNoise</name>
      <full_name>\Chameleon\Patterns\RGBNoise</full_name>
      <docblock line="8">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Patterns\Pattern" refers="\Chameleon\Patterns\Pattern" link="/classes/Chameleon.Patterns.Pattern.html"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="15" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\RGBNoise::__construct()</full_name>
        <docblock line="15">
          <description>Pattern constructor</description>
          <long-description></long-description>
          <tag name="param" line="15" description="&lt;p&gt;Number of colors to be generated&lt;/p&gt;" type="integer" variable="$colors">
            <type>integer</type>
          </tag>
          <tag name="param" line="15" description="&lt;p&gt;Optional alpha channel value for the colors&lt;/p&gt;" type="integer" variable="$alpha">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Patterns\Pattern::__construct()" refers="\Chameleon\Patterns\Pattern::__construct()" link="/classes/Chameleon.Patterns.Pattern.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$colors</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="36" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\RGBNoise::getColorAt()</full_name>
        <docblock line="36">
          <description>Get a random color for the position.</description>
          <long-description></long-description>
          <tag name="param" line="36" description="&lt;p&gt;x coordinate&lt;/p&gt;" type="integer" variable="$x">
            <type>integer</type>
          </tag>
          <tag name="param" line="36" description="&lt;p&gt;y coordinate&lt;/p&gt;" type="integer" variable="$y">
            <type>integer</type>
          </tag>
          <tag name="return" line="36" description="The color for the given position" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Patterns\Pattern::getColorAt()" refers="\Chameleon\Patterns\Pattern::getColorAt()" link="/classes/Chameleon.Patterns.Pattern.html#method_getColorAt"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Patterns" line="9" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\Pattern::getColorAt()</full_name>
        <docblock line="9">
          <description>Get color in this pattern at the given position</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Patterns\IPattern::getColorAt()" refers="\Chameleon\Patterns\IPattern::getColorAt()" link="/classes/Chameleon.Patterns.IPattern.html#method_getColorAt"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="16" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\Pattern::__construct()</full_name>
        <docblock line="16">
          <description>Pattern constructor.</description>
          <long-description></long-description>
          <tag name="param" line="16" description="&lt;p&gt;Number of colors used in this pattern&lt;/p&gt;" type="integer" variable="$colors">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$colors</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="26" package="Default">
        <name>setColor</name>
        <full_name>\Chameleon\Patterns\Pattern::setColor()</full_name>
        <docblock line="26">
          <description>Set color at index.</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;index&lt;/p&gt;" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="param" line="26" description="&lt;p&gt;color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="37" package="Default">
        <name>getColor</name>
        <full_name>\Chameleon\Patterns\Pattern::getColor()</full_name>
        <docblock line="37">
          <description>Get color at index</description>
          <long-description></long-description>
          <tag name="param" line="37" description="&lt;p&gt;index&lt;/p&gt;" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="return" line="37" description="color" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Patterns\RGBNoise</error>
    </parse_markers>
    <source>eJyNU11P2zAUfc+vOA/VlJQwSjWmqaFljAfEC5u2PSJVbnLbWErsyHag3cR/x0mczNBFwi/+uOfee3x8fHlV5VUAOzJKC6Yo1Ebx1KzNoSKNJc6jpA0LVpKuWEq4ye2yICkefjBjSAmdBC2k1n7wRhZS6Ye7dk7GAT9vv107TAuyLLSGPb2X3OJpb0hkGq4X/ragZpxNp8Ma0wGQSmGvUKdGKi/sI79WTLESXBhM0pYE7utyQwpyC3dgJDaEHQlSzFA2ls6KKmf4XhkuBSvQbdOcCUEFHllRE7ZSweTkCnuFzoZ1VW8KnmJbi7QphPV6uETosYz9nkvMIk+Mtox9PmEWCz/dpUZO3H40pMIJb6oksPNl36PZnZy8rdyMiWIik+WdpbBEadbNNpzFqORTOI8x/xThtHXLfzIpszlegdUK55/xAfOLi+QYvlNE4ijhyyh+08j8Fj7r4cd4k3ON0xU0mdZ4VogYgp4wWDFsKMeOSdx1iJ3yUfSawnPwbzXmzVsyYOj4dUYYbFFJzZtH//gOs+6xt9lSZVxYU46hDjiMoRSZ2n6R7k/id+/KgcyOP1rle0rv8urOiXjtrLp3Lj1EWPSNXpvJkRieoa8Qeqbyg7/4Hwo7c3nSd7I/B1er4AUFX01+</source>
  </file>
  <file path="Patterns/BackgroundColor.php" generated-path="Patterns.BackgroundColor.html" hash="dd427aa2046659f747e41cb8338fa4e9" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Patterns" line="10" package="Default">
      <extends>\Chameleon\Patterns\Pattern</extends>
      <name>BackgroundColor</name>
      <full_name>\Chameleon\Patterns\BackgroundColor</full_name>
      <docblock line="10">
        <description>BackgroundColor represents a plain unicolor background, equivalent to background-color in CSS</description>
        <long-description></long-description>
        <tag name="package" line="10" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Patterns\Pattern" refers="\Chameleon\Patterns\Pattern" link="/classes/Chameleon.Patterns.Pattern.html"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="11" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\BackgroundColor::__construct()</full_name>
        <docblock line="11">
          <description>Pattern constructor.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Patterns\Pattern::__construct()" refers="\Chameleon\Patterns\Pattern::__construct()" link="/classes/Chameleon.Patterns.Pattern.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="16" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\BackgroundColor::getColorAt()</full_name>
        <docblock line="16">
          <description>Get color in this pattern at the given position</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Patterns\Pattern::getColorAt()" refers="\Chameleon\Patterns\Pattern::getColorAt()" link="/classes/Chameleon.Patterns.Pattern.html#method_getColorAt"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Patterns" line="9" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\Pattern::getColorAt()</full_name>
        <docblock line="9">
          <description>Get color in this pattern at the given position</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Patterns\IPattern::getColorAt()" refers="\Chameleon\Patterns\IPattern::getColorAt()" link="/classes/Chameleon.Patterns.IPattern.html#method_getColorAt"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="16" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\Pattern::__construct()</full_name>
        <docblock line="16">
          <description>Pattern constructor.</description>
          <long-description></long-description>
          <tag name="param" line="16" description="&lt;p&gt;Number of colors used in this pattern&lt;/p&gt;" type="integer" variable="$colors">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$colors</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="26" package="Default">
        <name>setColor</name>
        <full_name>\Chameleon\Patterns\Pattern::setColor()</full_name>
        <docblock line="26">
          <description>Set color at index.</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;index&lt;/p&gt;" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="param" line="26" description="&lt;p&gt;color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="37" package="Default">
        <name>getColor</name>
        <full_name>\Chameleon\Patterns\Pattern::getColor()</full_name>
        <docblock line="37">
          <description>Get color at index</description>
          <long-description></long-description>
          <tag name="param" line="37" description="&lt;p&gt;index&lt;/p&gt;" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="return" line="37" description="color" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="11" code="PPC:ERR-50015">Argument $color is missing from the Docblock of __construct</error>
      <error line="11" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="16" code="PPC:ERR-50015">Argument $x is missing from the Docblock of getColorAt</error>
      <error line="16" code="PPC:ERR-50015">Argument $y is missing from the Docblock of getColorAt</error>
      <error line="16" code="PPC:ERR-50008">No summary for method getColorAt()</error>
    </parse_markers>
    <source>eJx1UMFOwzAMvfcrfNihrYYG1w6YoCduSLtOqrLUdBHFCbGDNiH+nShtRwfChzjSe8/Pz7cbd3AZxGpR98pjzuKNlkZODhnu4KZYJ5jUG7JTGqE+xG+PlnbPSgQ98TpLlMBzsLa99bx7Sn1krMoydSjhUenXzttAbSKAR+eRkYRBgeuVIQhkdML2Z+4S8D2YD9VHIoidIVcDNcrq7XY0WaUeYzH/8cOjILUMYwb4HDSxXNj3RsNLIC3GEjSNthSvErTkQxpYJLNiJkrCeD6SqpoLpvP95jBKGpVfL6dpP8Sv7N9lulH3ILmJJ1gcl5D6qYAKxu0ut/IoIeabjLuz8YXh8G7uvwENI6GS</source>
  </file>
  <package name="Chameleon" full_name="Chameleon">
    <package name="Filters" full_name="Chameleon\Filters"/>
    <package name="Primitives" full_name="Chameleon\Primitives"/>
    <package name="Transformations" full_name="Chameleon\Transformations"/>
  </package>
  <package name="Default" full_name="Default"/>
  <package name="global" full_name="global"/>
  <namespace name="Chameleon" full_name="Chameleon">
    <namespace name="Colors" full_name="Chameleon\Colors"/>
    <namespace name="Exceptions" full_name="Chameleon\Exceptions"/>
    <namespace name="Filters" full_name="Chameleon\Filters"/>
    <namespace name="Patterns" full_name="Chameleon\Patterns"/>
    <namespace name="Primitives" full_name="Chameleon\Primitives"/>
    <namespace name="Transformations" full_name="Chameleon\Transformations"/>
  </namespace>
  <deprecated count="2"/>
</project>
